{"version":3,"sources":["App/containers/Matter/ExcelExport.js","App/containers/Matter/Matter.js"],"names":["ExportExcel","Component","constructor","props","super","console","log","dataSource","render","this","id","className","map","value","index","key","matterDescription","Client","PractiseArea","OpenDate","table","filename","sheet","buttonText","response","matterManage","React","filterByMatterInput","SearchOutlined","style","onClick","state","showSearchMatter","setState","showSearchClient","showSearchPractise","paddingLeft","placeholder","onChange","e","filteredData","target","length","tableData","filter","item","undefined","toLowerCase","includes","finalData","filterByClientInput","filterByPractiseInput","data","searchData","loading","bind","componentDidMount","open","closed","pending","api","get","userId","then","res","newData","_id","client","firstName","lastName","practiseArea","openDate","status","push","all","handleAddNew","type","history","handleEdit","record","handleDelete","notification","success","message","catch","error","setTimeout","columns","title","dataIndex","text","highlightStyle","backgroundColor","padding","searchWords","autoEscape","textToHighlight","toString","sortDirections","sorter","a","b","_","color","handleView","onConfirm","okText","cancelText","danger","rec","matters","setTable","size","spinning","doc","jsPDF","setFontSize","td","content","startY","head","body","autoTable","save","onRow","rowIndex","onDoubleClick","onContextMenu","event","onMouseEnter","onMouseLeave","connect","user","token"],"mappings":"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","file":"static/js/68.bf3bec28.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nexport class ExportExcel extends Component {\n  constructor(props) {\n    super(props);\n    console.log('data in excel', props.dataSource);\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <div>\n        <table id=\"matter\" className=\"d-none\">\n          <thead>\n            <tr>\n              <th>S.No</th>\n              <th>Matter</th>\n              <th>Client</th>\n              <th>Practice Area</th>\n              <th>Open date</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.props.dataSource.map((value, index) => {\n              return (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{value.matterDescription}</td>\n                  <td>{value.Client}</td>\n                  <th>{value.PractiseArea?  value.PractiseArea : \"-\"}</th>\n                  <th>{ value.OpenDate ? value.OpenDate : \"-\"}</th>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <ReactHTMLTableToExcel\n          className=\"btn btn-outline-primary btn-sm excel-button\"\n          table=\"matter\"\n          filename=\"matters\"\n          sheet=\"Sheet\"\n          buttonText=\"Export to Excel\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExportExcel;\n","import React from 'react';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Input,\r\n  Space,\r\n  notification,\r\n  Popconfirm,\r\n  Card,\r\n  Spin\r\n} from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport Highlighter from 'react-highlight-words';\r\nimport api from '../../../resources/api';\r\nimport { connect } from 'react-redux';\r\nimport ExportExcel from './ExcelExport';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nlet response = {};\r\nlet tableData = [];\r\nclass matterManage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: {},\r\n      tableData: [],\r\n      searchData: [],\r\n      showSearchMatter: false,\r\n      showSearchClient: false,\r\n      showSearchPractise: false,\r\n      value: '',\r\n      loading : true,\r\n      finalData: [],\r\n    };\r\n    this.filterByMatterInput = this.filterByMatterInput.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    let data = [];\r\n    let open = [];\r\n    let closed = [];\r\n    let pending = [];\r\n    await api\r\n      .get('/matter/viewforuser/' + this.props.userId)\r\n      .then((res) => (response = res.data.data));\r\n    console.log(response);\r\n    response.map((value, index) => {\r\n      let newData = {\r\n        key: index,\r\n        id: value._id,\r\n        matterDescription: value.matterDescription,\r\n        Client:\r\n          value.client !== null\r\n            ? value.client.firstName + ' ' + value.client.lastName\r\n            : '-',\r\n        PractiseArea: value.practiseArea ? value.practiseArea : '-',\r\n        OpenDate: value.openDate ? value.openDate : '-',\r\n      };\r\n      if (value.status === 'Open') {\r\n        open.push(newData);\r\n      } else if (value.status === 'Closed') {\r\n        closed.push(newData);\r\n      } else if (value.status === 'Pending') {\r\n        pending.push(newData);\r\n      }\r\n      data.push(newData);\r\n    });\r\n    if (this.state.tableData != []) {\r\n      this.setState({\r\n        tableData: data,\r\n        open: open,\r\n        closed: closed,\r\n        pending: pending,\r\n        all: data,\r\n        loading : false\r\n      });\r\n    }\r\n  }\r\n  filterByMatterInput = () => (\r\n    <div>\r\n      <SearchOutlined\r\n      style={{\"vertical-align\": \"revert\"}}\r\n        onClick={() => {\r\n          this.state.showSearchMatter === false\r\n            ? this.setState({\r\n                ...this.state,\r\n                showSearchMatter: true,\r\n                showSearchClient: false,\r\n                showSearchPractise: false,\r\n              })\r\n            : this.setState({ ...this.state, showSearchMatter: false });\r\n        }}\r\n      />\r\n      <span style={{paddingLeft : \"8px\"}}> Matter Description </span>\r\n\r\n      <div>\r\n        {this.state.showSearchMatter && (\r\n          <input\r\n          className=\"mt-2\"\r\n            placeholder=\"Search Matter \"\r\n            value={this.state.value}\r\n            onChange={(e) => {\r\n              let filteredData = [];\r\n              this.setState({ value: e.target.value });\r\n              if (e.target.value.length !== 0 || e.target.value === '') {\r\n                filteredData = this.state.tableData.filter(\r\n                  (item) =>\r\n                    item.matterDescription !== undefined &&\r\n                    item.matterDescription\r\n                      .toLowerCase()\r\n                      .includes(e.target.value.toLowerCase())\r\n                );\r\n                this.setState({ finalData: filteredData });\r\n              } else {\r\n                this.setState({\r\n                  finalData: this.state.tableData,\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  filterByClientInput = () => (\r\n    <div>\r\n      <SearchOutlined\r\n      style={{\"vertical-align\": \"revert\"}}\r\n        onClick={() => {\r\n          this.state.showSearchClient === false\r\n            ? this.setState({\r\n                ...this.state,\r\n                showSearchClient: true,\r\n                showSearchPractise: false,\r\n                showSearchMatter: false,\r\n              })\r\n            : this.setState({ ...this.state, showSearchClient: false });\r\n        }}\r\n      />\r\n      <span style={{paddingLeft : \"8px\"}}> Client </span>\r\n\r\n      <div>\r\n        {this.state.showSearchClient && (\r\n          <input\r\n          className=\"mt-2\"\r\n            placeholder=\"Search Client \"\r\n            value={this.state.value}\r\n            onChange={(e) => {\r\n              let filteredData = [];\r\n              this.setState({ value: e.target.value });\r\n\r\n              if (e.target.value.length !== 0 || e.target.value === '') {\r\n                filteredData = this.state.tableData.filter(\r\n                  (item) =>\r\n                    item.Client !== undefined &&\r\n                    item.Client.toLowerCase().includes(\r\n                      e.target.value.toLowerCase()\r\n                    )\r\n                );\r\n                this.setState({ finalData: filteredData });\r\n              } else {\r\n                this.setState({\r\n                  finalData: this.state.tableData,\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  filterByPractiseInput = () => (\r\n    <div>\r\n      <SearchOutlined\r\n      style={{\"vertical-align\": \"revert\"}}\r\n        onClick={() => {\r\n          this.state.showSearchPractise === false\r\n            ? this.setState({\r\n                ...this.state,\r\n                showSearchPractise: true,\r\n                showSearchClient: false,\r\n\r\n                showSearchMatter: false,\r\n              })\r\n            : this.setState({ ...this.state, showSearchPractise: false });\r\n        }}\r\n      />\r\n      <span style={{paddingLeft : \"8px\"}}> Practise Area </span>\r\n\r\n      <div >\r\n        {this.state.showSearchPractise && (\r\n          <input className=\"mt-2\"\r\n            placeholder=\"Search Practise Area \"\r\n            value={this.state.value}\r\n            onChange={(e) => {\r\n              let filteredData = [];\r\n              this.setState({ value: e.target.value });\r\n\r\n              if (e.target.value.length !== 0 || e.target.value === '') {\r\n                filteredData = this.state.tableData.filter(\r\n                  (item) =>\r\n                    item.PractiseArea !== undefined &&\r\n                    item.PractiseArea.toLowerCase().includes(\r\n                      e.target.value.toLowerCase()\r\n                    )\r\n                );\r\n                this.setState({ finalData: filteredData });\r\n              } else {\r\n                this.setState({\r\n                  finalData: this.state.tableData,\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  render() {\r\n    //Search Related\r\n\r\n    /*\r\n  useEffect(() => {\r\n    \r\n    async function fetchData() {\r\n     response = await api.get('/contact/showall')\r\n      setTable()\r\n    }\r\n    fetchData();\r\n  }, []);\r\n */\r\n\r\n    //   const handleciSelect = (record) => {\r\n    //     // dispatch(selectBlog(record))\r\n    //     // this.props.history.push('/lawyer/details')\r\n    //   }\r\n\r\n    const handleAddNew = (type) => {\r\n      //  dispatch(selectBlog())\r\n      this.props.history.push('/manage/Matter/add');\r\n    };\r\n\r\n    const handleEdit = (record) => {\r\n      this.props.history.push('/edit/matter', record.id);\r\n    };\r\n\r\n    const handleDelete = (record) => {\r\n      api\r\n        .get('/matter/delete/' + record.id)\r\n        .then(() => {\r\n          this.componentDidMount()\r\n          notification.success({ message: 'Matter deleted.' })\r\n        })\r\n        .catch(() => notification.error({ message: 'Failed to delete' }));\r\n      setTimeout(() => {\r\n        //window.location.reload();\r\n      }, 1000);\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: this.filterByMatterInput,\r\n        dataIndex: 'matterDescription',\r\n        key: '_id',\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.value]}\r\n            autoEscape\r\n            textToHighlight={text ? text.toString() : ''}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: this.filterByClientInput,\r\n        dataIndex: 'Client',\r\n        key: '_id',\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.value]}\r\n            autoEscape\r\n            textToHighlight={text ? text.toString() : ''}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: this.filterByPractiseInput,\r\n        dataIndex: 'PractiseArea',\r\n        key: '_id',\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.value]}\r\n            autoEscape\r\n            textToHighlight={text ? text.toString() : ''}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: 'Open Date',\r\n        dataIndex: 'OpenDate',\r\n        key: '_id',\r\n        sortDirections: ['descend', 'ascend'],\r\n        sorter: (a, b) => a.OpenDate.length - b.OpenDate.length,\r\n      },{\r\n        title: 'View',\r\n        dataIndex: 'view',\r\n        key: '_id',\r\n        render: (_, record) => {\r\n          return (\r\n            <Button color=\"warning\" onClick={() => handleView(record)}>\r\n              View\r\n            </Button>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: 'Edit',\r\n        dataIndex: 'edit',\r\n        key: '_id',\r\n        render: (_, record) => {\r\n          return (\r\n            <Button color=\"warning\" onClick={() => handleEdit(record)}>\r\n              Edit\r\n            </Button>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: 'Delete',\r\n        dataIndex: 'delete',\r\n        key: '_id',\r\n        render: (_, record) => {\r\n          return (\r\n            <Popconfirm\r\n              title=\"Are you sure delete this matter?\"\r\n              onConfirm={() => handleDelete(record)}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button danger>Delete</Button>\r\n            </Popconfirm>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n\r\n    const handleView = (rec) => {\r\n      let data = {};\r\n      data.id = response[rec.key]._id;\r\n      data.userId = this.props.userId;\r\n      data.matters = this.state.tableData;\r\n      this.props.history.push('/view/matter', data);\r\n    };\r\n\r\n    const setTable = (type) => {\r\n      if (type === 'All') {\r\n        this.setState({ tableData: this.state.all });\r\n      } else if (type === 'open') {\r\n        this.setState({ tableData: this.state.open });\r\n      } else if (type === 'closed') {\r\n        this.setState({ tableData: this.state.closed });\r\n      } else if (type === 'pending') {\r\n        this.setState({ tableData: this.state.pending });\r\n      }\r\n    };\r\n    const exportPDF = () => {\r\n      const unit = 'pt';\r\n      const size = 'A4'; // Use A1, A2, A3 or A4\r\n      const orientation = 'portrait'; // portrait or landscape\r\n\r\n      const marginLeft = 40;\r\n      const doc = new jsPDF(orientation, unit, size);\r\n\r\n      doc.setFontSize(15);\r\n\r\n      const title = 'Matters';\r\n      const headers = [\r\n        ['S.N', 'Matter', 'Client', 'Practice Area', 'Open Date'],\r\n      ];\r\n\r\n      let data = [];\r\n      console.log(this.state.tableData)\r\n      this.state.tableData.map((value, index) => {\r\n        const td = [\r\n          index + 1,\r\n          value.matterDescription,\r\n          value.Client,\r\n          value.PractiseArea ? value.PractiseArea : '-',\r\n          value.OpenDate ? value.OpenDate : '-',\r\n        ];\r\n        data.push(td);\r\n      });\r\n\r\n      let content = {\r\n        startY: 50,\r\n        head: headers,\r\n        body: data,\r\n      };\r\n\r\n      doc.text(title, marginLeft, 40);\r\n      doc.autoTable(content);\r\n      doc.save('matters.pdf');\r\n    };\r\n    return (\r\n      <Spin size = \"large\" spinning = {this.state.loading}>\r\n        <div className=\"d-flex mb-2 title-component-header\">\r\n            <div className=\"title-header-name\">\r\n              <h5>Matter</h5>\r\n            </div>\r\n            <div className=\"d-flex extra-iteam-div\">\r\n                <button\r\n                    className=\"btn  btn-outline-primary   btn-sm\"\r\n                    onClick={exportPDF}\r\n                >\r\n                    Export to Pdf\r\n                </button>\r\n                <ExportExcel dataSource={this.state.tableData || []} />\r\n                <button\r\n                  className=\"btn  btn-outline-primary   btn-sm\"\r\n                  onClick={() => handleAddNew()}\r\n                >\r\n                  Add Matter\r\n                </button>\r\n            </div> \r\n          </div>\r\n        <Card>\r\n        <div>\r\n          <span className=\"ml-auto\"></span>\r\n          <Button\r\n            style={{\"margin\": \"0 10px 10px 0\"}}\r\n            onClick={() => {\r\n              setTable('All');\r\n            }}\r\n          >\r\n            All\r\n          </Button>\r\n          \r\n          <Button\r\n            style={{\"margin\": \"0 10px 10px 0\"}}\r\n            onClick={() => {\r\n              setTable('open');\r\n            }}\r\n          >\r\n            Open\r\n          </Button>\r\n          <Button\r\n            style={{\"margin\": \"0 10px 10px 0\"}}\r\n            onClick={() => {\r\n              setTable('pending');\r\n            }}\r\n          >\r\n            Pending\r\n          </Button>\r\n          <Button\r\n            style={{\"margin\": \"0 10px 10px 0\"}}\r\n            onClick={() => {\r\n              setTable('closed');\r\n            }}\r\n          >\r\n            Closed\r\n          </Button>\r\n        </div>\r\n        <br></br>\r\n\r\n        <Table\r\n        className=\"table-responsive\"\r\n          dataSource={\r\n            this.state.finalData.length === 0 && this.state.value.length === 0\r\n              ? this.state.tableData\r\n              : this.state.finalData\r\n          }\r\n          columns={columns}\r\n          onRow={(record, rowIndex) => {\r\n            return {\r\n              onDoubleClick: () => handleView(record), // double click row\r\n              onContextMenu: (event) => {}, // right button click row\r\n              onMouseEnter: (event) => {}, // mouse enter row\r\n              onMouseLeave: (event) => {}, // mouse leave row\r\n            };\r\n          }}\r\n        ></Table>\r\n      </Card>\r\n    \r\n      </Spin>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userId: state.user.token.user._id,\r\n});\r\nexport default connect(mapStateToProps)(matterManage);\r\n"],"sourceRoot":""}