{"version":3,"sources":["App/containers/Target/index.js"],"names":["PersonalTarget","history","useHistory","useState","disabled","setdisabled","target","rate","date","workdays","state","setState","userId","useSelector","user","token","_id","useEffect","api","get","then","res","undefined","data","handleChange","e","persist","name","value","newState","console","log","className","style","Header","Body","Group","controlId","Label","Control","defaultValue","onChange","placeholder","type","Append","Text","onClick","notification","destroy","preventDefault","warning","message","post","success","goBack","catch","err","error","variant"],"mappings":"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","file":"static/js/75.9f06e4d6.chunk.js","sourcesContent":["import React, { useEffect , useState } from 'react';\nimport { Form, Row , Col , Button, Card } from \"react-bootstrap\";\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { message,  Modal, Result, notification } from 'antd';\nimport { useHistory } from \"react-router-dom\";\nimport api from '../../../resources/api';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst PersonalTarget = () => {\n    const history = useHistory();\n    const [disabled, setdisabled] = useState(false)\n    const [state, setState] = useState({\n        target  : {\n            rate : \"\" ,\n            target  : \"\",\n            date : \"\",\n            workdays : \"\"\n        }\n    });\n    const userId = useSelector((state) => state.user.token.user._id);\n\n    const fetchUser = ( ) => {\n        api.get(`/user/view/${userId}`).then((res)=>{\n            if(res.data.data.target == undefined){\n                res.data.data.target = {\n\n                }\n            }\n            setState(res.data.data)\n        })\n    }\n    useEffect(() => {\n        fetchUser()\n    }, [])\n    const handleChange = (e) => {\n        e.persist();\n        const { name , value } = e.target\n        let newState = state\n        newState.target[name] = value\n        setState(newState)\n        console.log(state)\n    };\n\n\n    const handleSubmit = e => {\n        notification.destroy()\n        e.preventDefault()\n        if(state.target.rate == \"\"){\n            notification.warning({\n                message : \"Please provide a default billing rate\"\n            })\n        }else\n        if(state.target.target == \"\"){\n            notification.warning({\n                message : \"Please provide a target\"\n            })\n        }else\n        if(state.target.workdays == \"\"){\n            notification.warning({\n                message : \"Please provide a number of work days in year\"\n            })\n        }else\n        if(state.target.date == \"\"){\n            notification.warning({\n                message : \"Please provide a date\"\n            })\n        }else{\n            setdisabled(true)\n            console.log(state)\n            api.post(`/user/update/${userId}`, state).then((res)=>{\n                console.log(res)\n                setdisabled(false)\n                notification.success({message : \"Target details updated.\"})\n                history.goBack()\n            }).catch((err)=>{\n                console.log(err)\n                setdisabled(false)\n                notification.error({message : \"Failed to update details\"})\n            })\n        }\n    }\n    return (\n        <div className='form-width'>\n            <Card style = {{\"width\" : \"80%\"}} >\n                <Card.Header>\n                    <h5>Personal Performance Target</h5>\n                </Card.Header>\n                <Card.Body>\n                  <Form className=\"form-details\" >\n                    <Form.Group controlId=\"formGroupMatter\">\n                        <Form.Label>Default Billing Rate</Form.Label>\n                        <InputGroup>\n                            <Form.Control\n                            defaultValue = {state.target.rate}\n                            name = \"rate\"\n                            onChange = { handleChange }\n                            placeholder=\"200.00\"\n                            type=\"Number\"\n                            />\n                            <InputGroup.Append>\n                                <InputGroup.Text>$/Hr</InputGroup.Text>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupMatter\">\n                        <Form.Label>Target Billings</Form.Label>\n                        <InputGroup>\n                            <Form.Control\n                            defaultValue = {state.target.target}\n                            name = \"target\"\n                            placeholder=\"1000.00\"\n                            onChange = { handleChange }\n                            type=\"Number\"\n                            />\n                            <InputGroup.Append>\n                                <InputGroup.Text>$/Year</InputGroup.Text>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupMatter\">\n                        <Form.Label>Working Days</Form.Label>\n                        <InputGroup>\n                            <Form.Control\n                            defaultValue = {state.target.workdays}\n                            name = \"workdays\"\n                            placeholder=\"260\"\n                            onChange = { handleChange }\n                            type=\"Number\"\n                            />\n                            <InputGroup.Append>\n                                <InputGroup.Text>/Year</InputGroup.Text>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGroupMatter\">\n                        <Form.Label>Fiscal Year End</Form.Label>\n                        <Form.Control \n                            defaultValue = {state.target.date}\n                            name = \"date\"\n                            type=\"Date\" \n                            onChange = { handleChange }\n                            placeholder=\"OpenDate\" \n                        />\n                    </Form.Group>\n                </Form>    \n                </Card.Body>\n                 </Card>\n            <Button onClick = {handleSubmit} disabled = {disabled}  variant=\"success\" className=\"btn\" >Save Performance Information</Button> <span className=\"pr-2\">or</span>\n            <Button variant=\"light\" onClick={()=>{history.goBack()}} >CANCEL</Button>  \n        </div>\n    )\n}\n\nexport default PersonalTarget"],"sourceRoot":""}