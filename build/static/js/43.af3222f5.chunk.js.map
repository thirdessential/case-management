{"version":3,"sources":["App/containers/Settings/account&payment/Account/account.js","App/containers/Settings/account&payment/PaymentInfo/payment.js","App/containers/Settings/account&payment/index.js"],"names":["Account","props","columns","title","dataIndex","key","render","text","record","size","type","data","state","dataSource","Payment","user","useSelector","token","created_at","Date","now","expiry_date","setDate","getDate","useState","subscriptionRequested","setsubscriptionRequested","className","sm","renewal","setrenewal","AutoRenewal","Amount","RenewalDate","setRenewalDate","console","log","useEffect","registeredOn","requestGranted","renewalDate","date","setMonth","getMonth","getFullYear","toDateString","setFullYear","setValues","to","TabPane","Tabs","customFeilds","React","Component","constructor","super","this","modal1Visible","modal2Visible","Data","Name","Email","ContactInfo","Currency","setModal2Visible","setState","HandleChange","e","persist","newstate","target","id","value","operations","onClick","tabBarExtraContent","tab","handleSubs","JSON","parse","window","localStorage","getItem","setItem","_id","history","push","centered","visible","onOk","dataStatus","onCancel","Group","controlId","Label","Control","placeholder","onChange"],"mappings":"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","file":"static/js/43.af3222f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Table, Tag, Space, Button } from 'antd';\r\n\r\n\r\nconst Account = (props) =>{\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'Name',\r\n          key: 'Name',\r\n          render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'Email',\r\n          key: 'Email',\r\n        },\r\n        {\r\n          title: 'Contact Info',\r\n          dataIndex: 'Contact Info',\r\n          key: 'ContactInfo',\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'Date',\r\n            key: 'Date',\r\n          },\r\n          {\r\n            title: 'Currency',\r\n            dataIndex: 'Currency',\r\n            key: 'Currency',\r\n          },\r\n        {\r\n          title: 'Action',\r\n          key: 'Action',\r\n          render: (text, record) => (\r\n            <Space size=\"middle\">\r\n              <Button type=\"link\">Edit</Button>\r\n              <Button type=\"link\">Delete</Button>\r\n            </Space>\r\n          ),\r\n        },\r\n      ];\r\n      \r\n      const data = [\r\n        props.state\r\n      ]\r\n      \r\n return <Table columns={columns} dataSource={data} />\r\n}\r\n export default Account","import React, {useState, useEffect} from 'react'\r\nimport {Card, Button, Progress} from 'antd'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { isNull } from 'lodash';\r\nconst Payment = (props) =>{\r\n    const user = useSelector((state) => state.user.token.user);\r\n    let created_at = new Date(user.created_at)\r\n        let now = new Date()\r\n        let expiry_date = created_at\r\n        expiry_date.setDate(created_at.getDate() + 15)\r\n        const [subscriptionRequested, setsubscriptionRequested] = useState(\"Trail\")\r\n        const [renewal, setrenewal] = useState(<Row className=\"my-3\">\r\n                                                <Col sm><span className=\"table-span-dark\">Trial period expires in </span></Col>\r\n                                                <Col sm><span className=\"table-span-light\">{expiry_date.getDate() - now.getDate()} Days</span></Col>\r\n                                            </Row> )\r\n        const [AutoRenewal, setAutoRenewal] = useState(null)\r\n        const [Amount, setAmount] = useState(\"\")\r\n        const [RenewalDate, setRenewalDate] = useState(\"\")\r\n    console.log(user)\r\n\r\n    const setValues = ( ) =>{\r\n        if( user.registeredOn.requestGranted === \"Yes\"){\r\n        \r\n            setsubscriptionRequested(user.registeredOn.subscriptionRequested)\r\n            console.log(user.registeredOn.subscriptionRequested)\r\n            let renewalDate = new Date(user.registeredOn.date)\r\n            console.log(renewalDate)\r\n\r\n            if(user.registeredOn.subscriptionRequested === \"monthly\"){\r\n                renewalDate.setMonth(renewalDate.getMonth() + 1)\r\n                if(renewalDate.getDate() === now.getDate() &&\r\n                    renewalDate.getMonth() === now.getMonth() &&\r\n                     renewalDate.getFullYear() === now.getFullYear()\r\n                    ){\r\n                        renewalDate.setMonth(renewalDate.getMonth() + 1)\r\n                    }\r\n\r\n                setRenewalDate(renewalDate)\r\n                setrenewal(<Row className=\"my-3\">\r\n                            <Col sm><span className=\"table-span-dark\">Amount on next Bill</span></Col>\r\n                            <Col sm><span className=\"table-span-light\">$100 on {renewalDate.toDateString()}</span></Col>\r\n                        </Row> )\r\n            }else{\r\n\r\n                renewalDate.setFullYear(renewalDate.getFullYear() + 1)\r\n\r\n                if(renewalDate.getDate() === now.getDate() &&\r\n                    renewalDate.getMonth() === now.getMonth() &&\r\n                     renewalDate.getFullYear() === now.getFullYear()\r\n                    ){\r\n                        renewalDate.setFullYear(renewalDate.getFullYear() + 1)\r\n                    }\r\n\r\n                setRenewalDate(renewalDate)\r\n                setrenewal(<Row className=\"my-3\">\r\n                            <Col sm><span className=\"table-span-dark\">Amount on next Bill</span></Col>\r\n                            <Col sm><span className=\"table-span-light\">$1200 on {renewalDate.toDateString()}</span></Col>\r\n                        </Row> )\r\n            }\r\n            console.log(Amount)\r\n            console.log(RenewalDate)\r\n            \r\n                        /*\r\n            setAutoRenewal(<Card title=\"Renewal Options\" className=\"form-width mb-3\">\r\n                                <p>Your next Subscription in with to <b>Auto-Renewal {subscriptionRequested}</b></p>\r\n                                <button type=\"button\" class=\"btn btn-link pl-0\">Change Renewal Options</button>\r\n                            </Card> )\r\n                            */\r\n    \r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setValues()\r\n    }, [])\r\n\r\n    \r\n    /*\r\n    const fetchUser = () =>{\r\n        api.get('/user/view/' + this.props.userId).then((res)=>{\r\n            console.log(res)\r\n            setuser(res.data.data)\r\n          })\r\n    }\r\n    useEffect(() => {\r\n      //  fetchUser()\r\n    }, [])\r\n    */\r\n    return <div>\r\n        <Card title=\"Subscription\" className=\"form-width mb-3\">\r\n            <h4></h4>\r\n            <Row>\r\n                <Col sm><span className=\"table-span-dark\">Current Plan</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{ subscriptionRequested }</span></Col>\r\n            </Row>\r\n            \r\n            {/*\r\n            <Row className=\"my-3\">\r\n                <Col sm><span className=\"table-span-dark\">Pay on next Bill</span></Col>\r\n                <Col sm><span className=\"table-span-light\">7 users, paid yearly</span></Col>\r\n            </Row>\r\n            <Row className=\"my-3\">\r\n                <Col sm><span className=\"table-span-dark\">License</span></Col>\r\n                <Col sm>\r\n                    <span className=\"table-span-light\">User License used 7/7</span> <br /> \r\n                    <Progress percent={100} /> <br />\r\n                    <Button type=\"link\" style={{\"padding\": \"0\"}}>Buy More License</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"my-3\">\r\n                <Col sm><span className=\"table-span-dark\">License</span></Col>\r\n                <Col sm><span className=\"table-span-light\">User License used 7/7</span></Col>\r\n            </Row>\r\n            */}\r\n            {\r\n                renewal\r\n            }\r\n        </Card>\r\n        \r\n        {\r\n            /*\r\n            <Card title=\"Credit Card Information\" className=\"form-width mb-3\">\r\n            <p>You're using <b>Visa</b> ending in <b>2708</b> valid until <b>3/19</b></p>\r\n            <button type=\"button\" class=\"btn btn-link pl-0\">Change Renewal Options</button>\r\n        </Card>\r\n        <Card title=\"Payment History\" className=\"form-width mb-3\">\r\n            <button type=\"button\" class=\"btn btn-link pl-0\">View Your Previous Payment</button>\r\n        </Card>\r\n             */\r\n        }\r\n        {\r\n            AutoRenewal\r\n        }\r\n        <Link to=\"/plans/subscription\" className=\"nav-link page-scroll\">\r\n            Subscibe Now!\r\n         </Link>\r\n    </div>\r\n}\r\n export default Payment","import React from 'react'\r\nimport { Tabs, Button,Modal , Card } from 'antd';\r\nimport Account from '../account&payment/Account/account'\r\nimport Payment from '../account&payment/PaymentInfo/payment'\r\nimport { Form } from 'react-bootstrap'\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass customFeilds extends React.Component {\r\n  constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        modal1Visible: false,\r\n        modal2Visible: false,\r\n        Data : {\r\n            Name: '',\r\n            Email : '',\r\n            ContactInfo : '',\r\n            Date : '',\r\n            Currency : '', \r\n          },\r\n        \r\n      }\r\n  }\r\n\r\n\r\n\r\n  setModal2Visible(modal2Visible) {\r\n    this.setState({ modal2Visible });\r\n  }\r\n\r\n  render() {\r\n    const HandleChange=(e)=>{\r\n        e.persist()\r\n        let newstate=this.state\r\n        \r\n        newstate.Data[e.target.id] = e.target.value\r\n        this.setState({Data : newstate.Data})\r\n        console.log(this.state.Data)\r\n    }\r\n    const HandleOk=()=>{\r\n        this.setState({dataStatus : true})\r\n        this.setModal2Visible(false)\r\n\r\n    }\r\n    const handleSubs =  ( ) =>{\r\n      console.log(\"subs\")\r\n      const user = JSON.parse(window.localStorage.getItem('Case.user'))\r\n      window.localStorage.setItem('userId' , user.token.user._id)\r\n      this.props.history.push('/plans/subscription')\r\n    }\r\n    const operations = <Button onClick={() => this.setModal2Visible(true)}>Add</Button>\r\n  \r\n    return (\r\n      <Card>\r\n      \r\n      <Tabs tabBarExtraContent={operations}>\r\n             <TabPane tab=\"Account\" key=\"1\">\r\n                <Account state={this.state.Data}></Account>\r\n              </TabPane>\r\n              <TabPane tab=\"Payment Info\" key=\"2\">\r\n                <Payment handleSubs = { handleSubs }></Payment>\r\n             </TabPane>\r\n        </Tabs>\r\n        <Modal\r\n          title=\"Add Custom Feild\"\r\n          centered\r\n          visible={this.state.modal2Visible}\r\n          onOk={HandleOk}\r\n          onCancel={() => this.setModal2Visible(false)}\r\n        >\r\n          <Form>\r\n            <Form.Group controlId=\"Name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Name\"  onChange={HandleChange} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"Email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Email\"  onChange={HandleChange}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"Name\">\r\n                <Form.Label>Contact</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Contact\"  onChange={HandleChange}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"Date\">\r\n                <Form.Label>Date</Form.Label>\r\n                <Form.Control type=\"Date\" placeholder=\"Date\"  onChange={HandleChange}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"Currency Format\">\r\n                <Form.Label>Currency Format</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Currency Format\" onChange={HandleChange} />\r\n            </Form.Group>\r\n            </Form>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default customFeilds"],"sourceRoot":""}