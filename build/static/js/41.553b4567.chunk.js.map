{"version":3,"sources":["App/containers/Activities/Form/expenseForm.js","App/containers/Activities/Form/timeForm.js","App/containers/Activities/ExcelExport.js","App/containers/Activities/Form/expenseEdit.js","App/containers/Activities/Form/timeEdit.js","App/containers/Activities/Activity.js"],"names":["option","ExpenseForm","React","Component","constructor","props","super","this","state","matter","componentDidMount","api","get","userId","then","res","data","map","val","index","matterDescription","console","log","setState","editmode","record","_id","render","Group","controlId","Label","Control","type","name","placeholder","onChange","handleChange","as","rows","required","Check","id","label","connect","user","token","setTimer","time","window","localStorage","getItem","hours","Math","floor","minutes","seconds","className","ref","form","handleReset","defaultValue","ExportExcel","dataSource","value","key","qty","description","billable","rate","date","invoiceStatus","table","filename","sheet","buttonText","loading","componentWillReceiveProps","nextProps","Form","substring","size","spinning","Row","Col","defaultChecked","Timer","matters","activity","timeError","Activity","convertTime","serverdate","toutc","Date","toUTCString","showModal","timeModal","expenseModal","handleOk","notification","destroy","error","message","disableExpense","disabletime","editTime","EditExpense","post","success","catch","err","ReactDOM","findDOMNode","messageForm","reset","nonBillable","invoice","setTimeout","handleCancel","newState","billed","timeData","expenseData","completeData","tableData","touched","today","location","now","end_of_week","getTime","getDay","setHours","setMinutes","setSeconds","timedata","thisWeek","thisMonth","thisYear","temp","push","getDate","getMonth","getFullYear","handleEdit","handleDelete","handleDublicate","columns","title","dataIndex","sortDirections","sorter","a","b","filters","text","onFilter","includes","_","variant","onClick","onConfirm","okText","cancelText","danger","handleCustomSorting","e","persist","target","undefined","From","To","customSort","selectedIndex","newData","timeValue","indexOf","sHours","split","sMinutes","sSecs","isNaN","parseInt","setTableData","doc","jsPDF","setFontSize","td","content","startY","head","body","autoTable","save","bodyStyle","padding","style","display","marginBottom","width","height","visible","onOk","onCancel","afterClose","footer","disabled","sm","margin"],"mappings":"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","file":"static/js/41.553b4567.chunk.js","sourcesContent":["import React, {useEffect , useState} from 'react'\nimport { useSelector , connect} from 'react-redux'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport api from '../../../../resources/api'\n\nlet option = null\n\nclass ExpenseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          matter : \"\"\n        }\n    }\n    componentDidMount(){\n        api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n            option = res.data.data.map((val, index)=>{\n                 return <option>{val.matterDescription}</option>\n             })\n         }).then(()=>{\n             console.log(option)\n             this.setState({option : option})\n         })\n\n        if(this.props.editmode){\n            api.get('/matter/view/'+ this.props.record.matter._id).then((res)=>{\n                console.log(res)\n             this.setState({matter : res.data.data.matterDescription })\n             console.log(this.state.matter)\n            })\n        }\n       \n         \n    }\n\n    render(){\n       \n        return <Form >\n        <Row>\n            <Col>\n                <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control \n                    type=\"text\" \n                    name=\"qty\" \n                    placeholder=\"1.0\"\n                    onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Col>\n            <Col>\n                <Form.Group controlId=\"matter\">\n                    <Form.Label>Matter</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name=\"matter\" \n                        placeholder=\"Matter\"\n                        onChange={this.props.handleChange}>\n                    <option>Select a matter</option>\n                    {this.state.option}\n                    </Form.Control>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <Form.Group controlId=\"Description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control \n                    name=\"description\" \n                    as=\"textarea\" \n                    rows=\"3\"\n                    placeholder=\"Description\"\n                    onChange={this.props.handleChange} />\n                </Form.Group>\n            </Col>\n        </Row>\n        \n        <Row>\n            <Col>\n                <Form.Group controlId=\"rate\">\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"text\" \n                    name=\"rate\" \n                    placeholder=\"0.0 /h\"\n                    onChange={this.props.handleChange} />\n                </Form.Group>\n            </Col>\n            <Col>\n                <Form.Group controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"date\" \n                    name=\"date\" \n                    placeholder=\"Date\" \n                    onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Col>\n        </Row>\n         \n            {\n                /*\n                     <Form.Group controlId=\"invoiceStatus\">\n            <Form.Label>Invoice Status</Form.Label>\n            <Form.Control \n                as=\"select\"\n                name=\"invoiceStatus\"\n                onChange={this.props.handleChange} >\n            <option>Unbilled</option>\n            <option>Billed</option>\n            </Form.Control>\n         </Form.Group>\n                 */\n            }\n       \n        \n       \n         <Form.Check \n               type=\"checkbox\"\n               id=\"billable\"\n               name=\"billable\"\n               label=\"Billable\"\n               onChange={this.props.handleChange}\n           /><br></br>\n    \n            {\n                /*\n                <Form.Check \n               type=\"checkbox\"\n               id=\"nonBillable\"\n               name=\"nonBillable\"\n               label=\"Non-billable\"\n               defaultChecked = {!this.props.record.billable}\n               onChange={this.props.handleChange}\n           />\n                */\n            }\n          \n\n</Form>\n\n      \n    }\n}\n\nconst mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n\nexport default connect(mapStateToProps)(ExpenseForm)","import React, {useEffect , useState} from 'react'\nimport { useSelector , connect} from 'react-redux'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport api from '../../../../resources/api'\nimport Timer from '../../../components/Timer/index.js'\nlet option = null\nclass ExpenseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          data : {\n            time : ''\n          }\n        }\n    }\n    setTimer = () => {\n       \n        const time = window.localStorage.getItem('timer');\n        let hours = Math.floor(time / 3600);\n        let minutes = Math.floor(time / 60);\n        let seconds = time % 60\n       \n        if (minutes >= 59) {\n          minutes = minutes % 60;\n        }\n        if (seconds < 10) {\n          seconds = \"0\"+seconds\n        }\n        console.log(\"Secounds  \" + seconds)\n    \n        //   const Seconds = time % 60;\n        const data = this.state.data;\n        data.time = hours + ':' + minutes + ':' + seconds\n        this.setState({ data: data });\n        console.log(this.state.data)\n    }\n    componentDidMount(){\n        api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n            option = res.data.data.map((val, index)=>{\n                 return <option>{val.matterDescription}</option>\n             })\n         }).then(()=>{\n             console.log(option)\n             this.setState({option : option})\n         })\n         \n        this.setTimer()\n       }\n\n    render(){\n        \n        let date = \"\"\n        /*\n        const time = window.localStorage.getItem('timer');\n        let hours = Math.floor(time / 3600);\n        let minutes = Math.floor(time / 60);\n        if (minutes >= 59) {\n        minutes = minutes % 60;\n        }\n\n        //   const Seconds = time % 60;\n        \n        const timeee = hours + ':' + minutes;\n        if(timeee != window.localStorage.getItem('timer') ){\n            const data = this.state.data\n            data.time = time\n            this.setState({\n                data : data\n            })\n        }\n        */\n\n                                        \n        \n\n       return <Form \n       id='myForm'\n       className=\"form\"\n       ref={ form => this.props.handleReset(form) } >\n        <Row>\n            <Col>\n                <Form.Group controlId=\"duration\">\n                     <Form.Label>Duration</Form.Label>\n                      <Form.Control \n                        type=\"text\" \n                        name=\"time\" \n                        placeholder=\"hh:mm:ss\" \n                        defaultValue = {this.state.data.time}\n                        onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Col>\n            <Col>\n                <Timer setTimer = {this.setTimer} ></Timer>\n            </Col>\n        </Row>\n        \n        <Row>\n            <Col>\n            <Form.Group controlId=\"matter\">\n                <Form.Label>Matter</Form.Label>\n                <Form.Control \n                    as=\"select\"\n                    name=\"matter\" \n                    placeholder=\"Matter\"\n                    onChange={this.props.handleChange}>\n                <option>Select a matter</option>\n                {this.state.option}\n                </Form.Control>\n             </Form.Group>\n            </Col>\n            <Col>\n            <Form.Group controlId=\"rate\">\n                <Form.Label>Rate</Form.Label>\n                <Form.Control \n                required\n                type=\"text\" \n                name=\"rate\" \n                placeholder=\"0.0 /h\"\n                onChange={this.props.handleChange} />\n            </Form.Group>\n            </Col>\n\n        </Row>\n       \n            \n        <Row>\n            <Col>\n            <Form.Group controlId=\"Description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control \n                name=\"description\" \n                as=\"textarea\" \n                rows=\"3\"\n                placeholder=\"Description\"\n                onChange={this.props.handleChange} />\n            </Form.Group>\n            </Col>\n\n        </Row>\n       \n        <Row>\n            <Col>\n            <Form.Group controlId=\"date\">\n                <Form.Label>Date</Form.Label>\n                <Form.Control \n                required\n                type=\"date\" \n                name=\"date\" \n                placeholder=\"Date\" \n                onChange={this.props.handleChange}/>\n            </Form.Group>\n            </Col>\n            {\n                /* \n                <Col>\n            <Form.Group controlId=\"invoiceStatus\">\n                <Form.Label>Invoice Status</Form.Label>\n                <Form.Control \n                    as=\"select\"\n                    name=\"invoiceStatus\"\n                    onChange={this.props.handleChange} >\n                <option>Unbilled</option>\n                <option>Billed</option>\n                </Form.Control>\n             </Form.Group>\n            </Col>\n                */\n            }\n        </Row>\n            \n            <Row>\n                <Col>\n                <Form.Check \n               type=\"checkbox\"\n               id=\"billable\"\n               name=\"billable\"\n               label=\"Billable\"\n            \n               onChange={this.props.handleChange}\n           /><br></br>\n                </Col>\n            </Row>\n    \n            {\n                /*\n                <Form.Check \n               type=\"checkbox\"\n               id=\"nonBillable\"\n               name=\"nonBillable\"\n               label=\"Non-billable\"\n               defaultChecked = {!this.props.record.billable}\n               onChange={this.props.handleChange}\n           />\n                */\n            }\n    </Form>\n\n\n        \n    }\n}\n\nconst mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n\nexport default connect(mapStateToProps)(ExpenseForm)","import React, { Component } from 'react';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nexport class ExportExcel extends Component {\n  constructor(props) {\n    super(props);\n    console.log('data in excel', props.dataSource);\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <div>\n        <table id=\"matter\" className=\"d-none\">\n          <thead>\n            <tr>\n              <th>S.No</th>\n              <th>Qty</th>\n              <th>Description</th>\n              <th>Billable</th>\n              <th>Rate</th>\n              <th>Date</th>\n              <th>Invoice Status</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.props.dataSource.map((value, index) => {\n              return (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{value.qty}</td>\n                  <td>{value.description}</td>\n                  <th>{value.billable}</th>\n                  <th>{ value.rate }</th>\n                  <th>{value.date}</th>\n                  <th>{value.invoiceStatus}</th>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <ReactHTMLTableToExcel\n          className=\"btn btn-outline-primary btn-sm excel-button\"\n          table=\"matter\"\n          filename=\"Acitivity\"\n          sheet=\"Sheet\"\n          buttonText=\"Export to Excel\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExportExcel;\n","import React, {useEffect , useState} from 'react'\nimport { useSelector , connect} from 'react-redux'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport api from '../../../../resources/api'\nimport {Spin , Space} from 'antd'\nlet option = null\n\nclass ExpenseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          matter : \"\",\n          record : {\n\n          }, \n          loading : true\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n    \n        if (nextProps !== this.props) {\n          console.log(\"not equal\")\n          console.log(this.props)\n          console.log(nextProps)\n          this.setState({record : nextProps.record})\n        }\n      \n    }\n    componentDidMount(){\n        this.setState({record : this.props.record})\n\n        api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n            option = res.data.data.map((val, index)=>{\n                 return <option>{val.matterDescription}</option>\n             })\n         }).then(()=>{\n             console.log(option)\n             this.setState({option : option})\n             api.get('/matter/view/'+ this.props.record.matter).then((res)=>{\n                console.log(res)\n                const matter = <Form.Group controlId=\"matter\">\n                                    <Form.Label>Matter</Form.Label>\n                                    <Form.Control \n                                        as=\"select\"\n                                        name=\"matter\" \n                                        defaultValue = {res.data.data.matterDescription}\n                                        onChange={this.props.handleChange}>\n                                    <option>Select a matter</option>\n                                    {this.state.option}\n                                    </Form.Control>\n                                </Form.Group>\n             this.setState({matter : matter , loading : false })\n             console.log(this.state.matter)\n            })\n         })\n\n        \n            \n    \n       \n         \n    }\n    \n    render(){\n        let date  = \"\"\n        if(this.props.editmode){\n             date = this.props.record.date.substring(0,10)\n             console.log(date)\n        }\n        console.log(this.props.record.billable)\n        return <Space size=\"middle\">\n                <Spin spinning={this.state.loading} size=\"large\" >\n                <Form >\n        <Row>\n            <Col>\n                <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control \n                    type=\"number\" \n                    name=\"qty\" \n                    defaultValue = {this.state.record.qty}\n                    onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Col>\n            <Col>\n                {console.log(this.state.matter)}\n                {\n                    this.state.matter\n                }\n            </Col>\n    </Row>\n    <Row>\n        <Col>\n        <Form.Group controlId=\"Description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control \n                name=\"description\" \n                as=\"textarea\" \n                rows=\"3\"\n                defaultValue = {this.state.record.description}\n                onChange={this.props.handleChange} />\n            </Form.Group>\n        </Col>\n    </Row>\n    <Row>\n        <Col>\n            <Form.Group controlId=\"date\">\n                <Form.Label>Date</Form.Label>\n                <Form.Control \n                required\n                type=\"date\" \n                name=\"date\" \n                defaultValue = {date}\n                onChange={this.props.handleChange}/>\n            </Form.Group>\n        </Col>\n        <Col>\n            <Form.Group controlId=\"rate\">\n                <Form.Label>Rate</Form.Label>\n                <Form.Control \n                required\n                type=\"text\" \n                name=\"rate\" \n                defaultValue = {this.state.record.rate}\n                onChange={this.props.handleChange} />\n            </Form.Group>\n        </Col>\n    </Row>\n    \n            \n            \n        \n            {\n                /*\n                 <Form.Group controlId=\"invoiceStatus\">\n                <Form.Label>Invoice Status</Form.Label>\n                <Form.Control \n                    as=\"select\"\n                    name=\"invoiceStatus\"\n                    defaultValue = {this.state.record.invoiceStatus}\n                    onChange={this.props.handleChange} >\n                <option>Unbilled</option>\n                <option>Billed</option>\n                </Form.Control>\n                   </Form.Group>\n                */\n            }\n           \n           <Form.Check \n               type=\"checkbox\"\n               id=\"billable\"\n               name=\"billable\"\n               label=\"Billable\"\n               defaultChecked = {this.state.record.billable===\"Yes\"? true : false}\n               onChange={this.props.handleChange}\n           /><br></br>\n    \n            {\n                /*\n                <Form.Check \n               type=\"checkbox\"\n               id=\"nonBillable\"\n               name=\"nonBillable\"\n               label=\"Non-billable\"\n               defaultChecked = {!this.state.record.billable}\n               onChange={this.props.handleChange}\n           />\n                */\n            }\n          \n    \n    </Form>\n    \n\n      \n                </Spin>\n                </Space>\n       \n    }\n}\n\nconst mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n\nexport default connect(mapStateToProps)(ExpenseForm)","import React, {useEffect , useState} from 'react'\nimport { useSelector , connect} from 'react-redux'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport {Spin , Space} from 'antd'\nimport api from '../../../../resources/api'\nimport Timer from '../../../components/Timer/index.js'\nlet option = null\nclass ExpenseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n         data : {\n         },\n         record : {\n         },\n         loading : true\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n    \n        if (nextProps !== this.props) {\n          console.log(\"not equal\")\n          console.log(this.props)\n          console.log(nextProps)\n          this.setState({record : nextProps.record})\n        }\n      \n    }\n    setTimer = () => {\n       \n        const time = window.localStorage.getItem('timer');\n        let hours = Math.floor(time / 3600);\n        let minutes = Math.floor(time / 60);\n        let seconds = time % 60\n       \n        if (minutes >= 59) {\n          minutes = minutes % 60;\n        }\n        if (seconds < 10) {\n          seconds = \"0\"+seconds\n        }\n        console.log(\"Secounds  \" + seconds)\n    \n        //   const Seconds = time % 60;\n        const data = this.state.data;\n        data.time = hours + ':' + minutes + ':' + seconds\n        this.setState({ data: data });\n        console.log(this.state.data)\n\n    }\n    componentDidMount(){\n        this.setState({record : this.props.record})\n        api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n            option = res.data.data.map((val, index)=>{\n                 return <option>{val.matterDescription}</option>\n             })\n         }).then(()=>{\n             console.log(option)\n             this.setState({option : option})\n             api.get('/matter/view/'+ this.props.record.matter._id).then((res)=>{\n                console.log(res)\n                const matter = <Form.Group controlId=\"matter\">\n                                    <Form.Label>Matter</Form.Label>\n                                    <Form.Control \n                                        as=\"select\"\n                                        name=\"matter\" \n                                        defaultValue = {res.data.data.matterDescription}\n                                        onChange={this.props.handleChange}>\n                                    <option>Select a matter</option>\n                                    {this.state.option}\n                                    </Form.Control>\n                                </Form.Group>\n             this.setState({matter : matter , loading : false })\n             console.log(this.state.matter)\n            })\n         })\n         const data = this.state.data;\n        data.time = this.props.time\n        this.setState({ data: data });\n        console.log(this.state.data)\n    }\n\n    render(){\n        console.log(this.props.record.billable)\n        let date = \"\"\n        if(this.props.editmode){\n            date = this.props.record.date.substring(0,10)\n            console.log(date)\n       }\n/*\n       const duration = this.props.touched ? <Form.Group controlId=\"duration\">\n                                                <Form.Label>Duration</Form.Label>\n                                                <Form.Control \n                                                type=\"text\" \n                                                name=\"time\" \n                                                placeholder=\"hh:mm\" \n                                                value = {this.state.data.time}\n                                                onChange={this.props.handleChange}/>\n                                              </Form.Group>\n                                              :\n                                              <Form.Group controlId=\"duration\">\n                                                <Form.Label>Duration</Form.Label>\n                                                <Form.Control \n                                                type=\"text\" \n                                                name=\"time\" \n                                                placeholder=\"hh:mm\" \n                                                onChange={this.props.handleChange}/>\n                                            </Form.Group>\n */\n       return  <Spin spinning={this.state.loading} size=\"large\">\n        <Form >\n            <Row>\n                <Col>\n                <Form.Group controlId=\"duration\">\n                    <Form.Label>Duration</Form.Label>\n                    <Form.Control \n                    type=\"text\" \n                    name=\"time\" \n                    defaultValue = {this.state.data.time}\n                    onChange={this.props.handleChange}/>\n                </Form.Group>\n                </Col>\n                <Col>\n                    <Timer setTimer = {this.setTimer} ></Timer>\n                </Col>\n            </Row>\n            \n            <Row>\n                <Col>\n                    {\n                        this.state.matter\n                    }\n                </Col>\n                <Col>\n                <Form.Group controlId=\"rate\">\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"text\" \n                    name=\"rate\" \n                    defaultValue = {this.state.record.rate}\n                    onChange={this.props.handleChange} />\n                </Form.Group>\n                </Col>\n\n            </Row>\n            \n                \n            <Row>\n                <Col>\n                <Form.Group controlId=\"Description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control \n                    name=\"description\" \n                    as=\"textarea\" \n                    rows=\"3\"\n                    defaultValue = {this.state.record.description}\n                    onChange={this.props.handleChange} />\n                </Form.Group>\n                </Col>\n\n            </Row>\n            \n            <Row>\n                <Col>\n                <Form.Group controlId=\"rate\">\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"text\" \n                    name=\"rate\" \n                    defaultValue = {this.state.record.rate}\n                    onChange={this.props.handleChange} />\n                </Form.Group>\n                </Col>\n                <Col>\n                <Form.Group controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"date\" \n                    name=\"date\" \n                    defaultValue = {date}\n                    onChange={this.props.handleChange}/>\n                </Form.Group>\n                </Col>\n                {/*\n                        <Col>\n                        <Form.Group controlId=\"invoiceStatus\">\n                            <Form.Label>Invoice Status</Form.Label>\n                            <Form.Control \n                                as=\"select\"\n                                name=\"invoiceStatus\"\n                                defaultValue = {this.state.record.invoiceStatus}\n                                onChange={this.props.handleChange} >\n                            <option>Unbilled</option>\n                            <option>Billed</option>\n                            </Form.Control>\n                        </Form.Group>\n                        </Col>\n                */}\n                \n            </Row>\n                \n                <Row>\n                    <Col>\n                    <Form.Check \n                    type=\"checkbox\"\n                    id=\"billable\"\n                    name=\"billable\"\n                    label=\"Billable\"\n                    defaultChecked = {this.state.record.billable===\"Yes\"? true : false}\n                    onChange={this.props.handleChange}\n                /><br></br>\n                    </Col>\n                </Row>\n        \n                {\n                    /*\n                    <Form.Check \n                    type=\"checkbox\"\n                    id=\"nonBillable\"\n                    name=\"nonBillable\"\n                    label=\"Non-billable\"\n                    defaultChecked = {!this.state.record.billable}\n                    onChange={this.props.handleChange}\n                />\n                    */\n                }\n        </Form>\n\n                </Spin>\n      \n    }\n}\n\nconst mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n\nexport default connect(mapStateToProps)(ExpenseForm)","import React from 'react';\nimport {\n  Table,\n  Button,\n  Modal,\n  Card,\n  notification,\n  Space,\n  Popconfirm,\n  Spin\n} from 'antd';\nimport { useSelector, connect } from 'react-redux';\nimport ExportExcel from './ExcelExport'\nimport ExpenseForm from './Form/expenseForm';\nimport EditExpense from './Form/expenseEdit'\nimport EditTime from './Form/timeEdit'\nimport TimeForm from './Form/timeForm';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport api from '../../../resources/api';\nimport ReactDOM from 'react-dom'\nimport Timer from '../../components/Timer/index.js'\nlet matters = {};\nlet activity = {};\nlet timeError = '';\nlet option = null\nclass Activity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenseModal: false,\n      timeModal: false,\n      data: {\n        billable: false,\n        qty: '1.0',\n        date: '',\n        rate: '',\n        invoice: 'Unbilled',\n        time: '',\n        matter : \"\",\n        billed : false\n      },\n      loading : true,\n      timeData: [],\n      expenseData: [],\n      completeData: [],\n      tableData: [],\n      editTime: false,\n      EditExpense : false,\n      record: '',\n      touched: true,\n      disabletime : false,\n      disableExpense : false,\n      today :[]\n    };\n  }\n  convertTime = (serverdate) => {\n    var date = new Date(serverdate);\n    // convert to utc time\n    var toutc = date.toUTCString();\n    //convert to local time\n    var locdat = new Date(toutc + ' UTC');\n    return locdat;\n  };\n  \n  setTimer = () => {\n\n    const time = window.localStorage.getItem('timer');\n    let hours = Math.floor(time / 3600);\n    let minutes = Math.floor(time / 60);\n    let seconds = time % 60\n   \n    if (minutes >= 59) {\n      minutes = minutes % 60;\n    }\n    if (seconds < 10) {\n      seconds = \"0\"+seconds\n    }\n\n    //   const Seconds = time % 60;\n    const data = this.state.data;\n    data.time = hours + ':' + minutes + ':' + seconds\n    this.setState({ data: data });\n}\n  componentDidMount() {\n    if(this.props.location.state === \"time\"){\n      this.setState({\n        timeModal : true\n      })\n    }else{\n      this.setState({\n        timeModal : false\n      })\n    }\n    if(this.props.location.state === \"expense\"){\n      this.setState({\n        expenseModal : true\n      })\n    }else{\n      this.setState({\n        expenseModal : false\n      })\n    }\n    api.get('/matter/viewforuser/' + this.props.userId).then((res) => {\n      matters = res;\n      option = res.data.data.map((val, index)=>{\n        return <option key={index} value={val.matterDescription}>{val.matterDescription}</option>\n    })\n    }).then(()=>{\n      this.setState({option : option})\n  })\n    api.get('/activity/viewforuser/' + this.props.userId).then((res) => {\n      console.log(res)\n      activity = res.data.data;\n      var now = new Date();\n\n      var end_of_week = new Date(\n        now.getTime() + (6 - now.getDay()) * 24 * 60 * 60 * 1000\n      );\n      end_of_week.setHours(23);\n      end_of_week.setMinutes(59);\n      end_of_week.setSeconds(59);\n\n     // var start_of_week = new Date(now.setDate(now.getDate() - now.getDay()));\n\n      let timedata = [];\n      let expenseData = [];\n      let completeData = [];\n      let today = [];\n      let thisWeek = [];\n      let thisMonth = [];\n      let thisYear = [];\n      res.data.data.map((val, index) => {\n        const date = this.convertTime(val.date);\n        let temp = {\n          key: index,\n          type: val.type,\n          id: val._id,\n          qty : val.type === 'time' ? val.time : val.qty,\n          time: val.time ? val.time : '',\n          matter: val.matter ? val.matter : '-',\n          description: val.description ? val.description : '-',\n          rate: val.rate,\n          billable: val.billable ? 'Yes' : 'No',\n          date: val.date.substring(0, 10),\n          invoiceStatus: val.billed ? \"Billed\" : 'Unbilled',\n          //  invoiceStatus :  val.invoiceStatus?  val.invoiceStatus : \"-\" ,\n        };\n        console.log(now)\n        console.log(date)\n        console.log(\"sepeaaot\")\n        if (val.type === 'time') {\n\n          timedata.push(temp);\n        }\n        if (val.type === 'expense') {\n   \n          expenseData.push(temp);\n        }\n        if (\n          date.getDate() == now.getDate() &&\n          date.getMonth() == now.getMonth() &&\n          date.getFullYear() == now.getFullYear()\n        ) {\n          \n          today.push(temp);\n        }\n        if (date >= now && date <= end_of_week) {\n          // between now and end of week\n          thisWeek.push(temp);\n        }\n        if (\n          date.getFullYear() == now.getFullYear() &&\n          date.getMonth() == now.getMonth()\n        ) {\n          thisMonth.push(temp);\n        }\n        if (date.getFullYear() == now.getFullYear()) {\n          thisYear.push(temp);\n        }\n        completeData.push(temp);\n      });\n      console.log(today)\n      this.setState({\n        completeData: completeData,\n        expenseData: expenseData,\n        timeData: timedata,\n        tableData: completeData,\n        thisWeek: thisWeek,\n        thisMonth: thisMonth,\n        thisYear: thisYear,\n        today: today,\n        loading : false\n      });\n    });\n    \n    this.setTimer()\n  \n  }\n  showModal = (type) => {\n    if (type === 'time') {\n      this.setState({\n        timeModal: true,\n      });\n    } else if (type === 'expense') {\n      this.setState({\n        expenseModal: true,\n      });\n    }\n  };\n\n  handleOk = (type) => {\n \n    notification.destroy();\n    if (timeError !== '') {\n      notification.error({ message: 'Invalid time, Please enter time in the format : HH:MM:SS' });\n    } else if (this.state.data.date === '') {\n      notification.error({ message: 'Please select a Date' });\n    } else if (this.state.data.rate === '') {\n      notification.error({ message: 'Please provide rate' });\n    } else {\n      this.setState({\n        disableExpense : true,\n        disabletime : true\n      })\n      if (this.state.editTime || this.state.EditExpense) {\n        if (type === 'time') {\n          let data = this.state.data;\n          data.type = 'time';\n          data.userId = this.props.userId;\n          api\n            .post('/activity/edit/' + this.state.data.id, data)\n            .then((res) => {\n              this.componentDidMount()\n              this.setState({\n                disableExpense : false,\n                disabletime : false,\n                editTime: false,\n                EditExpense : false,\n              })\n              notification.success({ message: 'Time entry Edited !' });\n            })\n            .catch((err) => {\n              notification.error({ message: 'Failed' });\n            })\n            .then(() => {\n            \n              ReactDOM.findDOMNode(this.messageForm).reset()\n              this.setState({\n                timeModal: false,\n                editmode: false,\n                data: {\n                  billable: false,\n                  nonBillable: false,\n                  date: '',\n                  qty: '1.0',\n                  rate: '',\n                  invoice: 'Unbilled',\n                },\n              });\n              console.log(this.state.data)\n              setTimeout(() => {\n                //window.location.reload();\n              }, 1500);\n            });\n        } else if (type === 'expense') {\n          let data = this.state.data;\n          data.type = 'expense';\n          data.userId = this.props.userId;\n          api\n            .post('/activity/edit/' + this.state.data.id, data)\n            .then((res) => {\n              this.componentDidMount()\n              this.setState({\n                disableExpense : false,\n                disabletime : false\n              })\n              notification.success({ message: 'Expense Edited!' });\n            })\n            .catch((err) => {\n              notification.error({ message: 'Failed' });\n            })\n            .then(() => {\n              ReactDOM.findDOMNode(this.messageForm).reset()\n\n              this.setState({\n                expenseModal: false,\n                EditExpense : false,\n                editmode: false,\n                data: {\n                  billable: false,\n                  nonBillable: false,\n                  matter : \"\",\n                  date: '',\n                  rate: '',\n                  qty: '1.0',\n                  invoice: 'Unbilled',\n                },\n              });\n              setTimeout(() => {\n               // window.location.reload();\n              }, 1500);\n            });\n        }\n      } else {\n        if (type === 'time') {\n          let data = this.state.data;\n          data.type = 'time';\n          data.userId = this.props.userId;\n          api\n            .post('/activity/create', data)\n            .then((res) => {\n              this.componentDidMount()\n              this.setState({\n                disableExpense : false,\n                disabletime : false\n              })\n              notification.success({ message: 'Time entry Added !' });\n            })\n            .catch((err) => {\n              notification.error({ message: 'Failed' });\n            })\n            .then(() => {\n              ReactDOM.findDOMNode(this.messageForm).reset()\n              this.setState({\n                timeModal: false,\n                editmode: false,\n                data: {\n                  billable: false,\n                  nonBillable: false,\n                  matter : \"\",\n                  date: '',\n                  qty: '1.0',\n                  rate: '',\n                  invoice: 'Unbilled',\n                },\n              });\n              setTimeout(() => {\n                //window.location.reload();\n              }, 1500);\n            });\n        } else if (type === 'expense') {\n          let data = this.state.data;\n          data.type = 'expense';\n          data.userId = this.props.userId;\n          api\n            .post('/activity/create', data)\n            .then((res) => {\n              this.componentDidMount()\n              this.setState({\n                disableExpense : false,\n                disabletime : false\n              })\n              notification.success({ message: 'Expense Added !' });\n            })\n            .catch((err) => {\n              notification.error({ message: 'Failed' });\n            })\n            .then(() => {\n              ReactDOM.findDOMNode(this.messageForm).reset()\n              this.setState({\n                expenseModal: false,\n                editmode: false,\n                data: {\n                  billable: false,\n                  nonBillable: false,\n                  date: '',\n                  matter : \"\",\n                  qty: '1.0',\n                  rate: '',\n                  invoice: 'Unbilled',\n                },\n              });\n              setTimeout(() => {\n                //window.location.reload();\n              }, 1500);\n            });\n        }\n      }\n    }\n  };\n\n  handleCancel = (type) => {\n    ReactDOM.findDOMNode(this.messageForm).reset()\n    console.log(\"Handle Cancel\")\n    let newState = this.state\n    newState.data = {\n      billable: false,\n      nonBillable: false,\n      matter : {},\n      date: '',\n      qty: '1.0',\n      rate: '',\n      invoice: 'Unbilled',\n    }\n    this.setState(newState)\n\n\n    if (type === 'time') {\n      this.setState({\n        timeModal: false,\n        editTime : false,\n       \n      });\n\n    } else if (type === 'expense') {\n      this.setState({\n        expenseModal: false,\n        EditExpense: false, \n      });\n      \n    }\n    console.log(this.state.data)\n    this.setTimer()\n    \n  };\n\n  render() {\n    const handleEdit = (record) => {\n     // ReactDOM.findDOMNode(this.messageForm).reset()\n      let newState = this.state\n      newState.data = record\n      this.setState(newState)\n      if (record.type === 'time') {\n        this.setState({\n          editTime: true,\n   \n        });\n      } else if (record.type === 'expense') {\n        this.setState({\n          EditExpense: true,\n\n        });\n      }\n      console.log(this.state.data)\n    };\n\n    const handleDelete = (record) => {\n      api\n        .get('/activity/delete/' + record.id)\n        .then((res) => {\n          this.componentDidMount()\n          notification.success({ message: 'Activity Deleted !' });\n          setTimeout(() => {\n            //window.location.reload();\n          }, 1500);\n        })\n        .catch((err) => {\n          notification.error({ message: 'Failed to delete' });\n        });\n    };\n\n    const handleDublicate = (record) => {\n\n      if (record.type === 'time') {\n        record.type = 'time';\n        record.userId = this.props.userId;\n        record.billable = record.billable === \"Yes\" ? true : false\n       \n      } else if (record.type === 'expense') {\n        record.type = 'expense';\n        record.userId = this.props.userId;\n        record.billable = record.billable === \"Yes\" ? true : false       \n      }\n      console.log(record)\n      api\n      .post('/activity/create', record)\n      .then((res) => {\n        this.componentDidMount()\n        this.setState({\n          disableExpense : false,\n          disabletime : false\n        })\n        notification.success({ message: 'Acitivity duplicated !' });\n      })\n      .catch((err) => {\n        notification.error({ message: 'Failed' });\n      })\n      .then(() => {\n    //    ReactDOM.findDOMNode(this.messageForm).reset()\n        this.setState({\n          timeModal: false,\n          editmode: false,\n          data: {\n            billable: false,\n            nonBillable: false,\n            date: '',\n            qty: '1.0',\n            rate: '',\n            invoice: 'Unbilled',\n          },\n        });\n        setTimeout(() => {\n          //window.location.reload();\n        }, 1500);\n      });\n    }\n    const handleReset = ( form ) =>{\n      this.messageForm = form\n    }\n    const columns = [\n      {\n        title: 'Type',\n        dataIndex: 'type',\n        key: 'type',\n      },\n      {\n        title: 'Qty',\n        dataIndex: 'qty',\n        key: 'qty',\n        sortDirections: ['descend', 'ascend'],\n        sorter: (a, b) => a.qty > b.qty,\n      },\n      {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description',\n      },\n      {\n        title: 'Rate',\n        dataIndex: 'rate',\n        key: 'rate',\n        sortDirections: ['descend', 'ascend'],\n        sorter: (a, b) => a.rate > b.rate,\n      },\n      {\n        title: 'Billable',\n        dataIndex: 'billable',\n        key: 'billable',\n        filters: [\n          { text: 'Yes', value: 'Yes' },\n          { text: 'No', value: 'No' },\n        ],\n        onFilter: (value, record) => record.billable.includes(value),\n      },\n      {\n        title: 'Date',\n        dataIndex: 'date',\n        key: 'date',\n        sortDirections: ['descend', 'ascend'],\n        sorter: (a, b) => a.date > b.date,\n      },\n      {\n        title: 'Invoice Status',\n        dataIndex: 'invoiceStatus',\n        key: 'invoiceStatus',\n      },\n      {\n        title: 'Edit',\n        dataIndex: 'edit',\n        key: '_id',\n        render: (_, record) => {\n          return (\n            <Button variant=\"danger\" onClick={() => handleEdit(record)}>\n              Edit\n            </Button>\n          );\n        },\n      },\n      {\n        title: 'Duplicate',\n        dataIndex: 'Dublicate',\n        key: '_id',\n        render: (_, record) => {\n          return (\n            <Button onClick={() => handleDublicate(record)}>\n              Duplicate\n            </Button>\n          );\n        },\n      },\n\n      {\n        title: 'Delete',\n        dataIndex: 'delete',\n        key: '_id',\n        render: (_, record) => {\n          return (\n            <Popconfirm\n              title=\"Are you sure delete this Activity?\"\n              onConfirm={() => handleDelete(record)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button danger>Delete</Button>\n            </Popconfirm>\n          );\n        },\n      },\n    ];\n    const exportPDF = () => {\n      const unit = 'pt';\n      const size = 'A4'; // Use A1, A2, A3 or A4\n      const orientation = 'portrait'; // portrait or landscape\n\n      const marginLeft = 40;\n      const doc = new jsPDF(orientation, unit, size);\n\n      doc.setFontSize(15);\n\n      const title = 'Activity';\n      const headers = [\n        [\n          'type',\n          'Qty',\n          'Description',\n          'Billable',\n          'Rate',\n          'Date',\n          'Invoice Status',\n        ],\n      ];\n\n      let data = [];\n\n      this.state.tableData.map((val, index) => {\n        const td = [\n          val.type,\n          val.qty,\n          val.description,\n          val.billable,\n          val.rate,\n          val.date,\n          val.invoiceStatus,\n        ];\n        data.push(td);\n      });\n\n      let content = {\n        startY: 50,\n        head: headers,\n        body: data,\n      };\n\n      doc.text(title, marginLeft, 40);\n      doc.autoTable(content);\n      doc.save('Activity.pdf');\n    };\n    const handleSorting = (e) => {\n      e.persist();\n      const { value } = e.target;\n\n      if (value === 'This Week') {\n        this.setState({ tableData: this.state.thisWeek });\n      } else if (value === 'Today') {\n        this.setState({ tableData: this.state.today });\n      } else if (value === 'This month') {\n        this.setState({ tableData: this.state.thisMonth });\n      } else if (value === 'This year') {\n        this.setState({ tableData: this.state.thisYear });\n      } else if (value === 'Sort') {\n        this.setState({ tableData: this.state.completeData });\n      }\n    };\n    const handleCustomSorting = (e) => {\n      e.persist();\n      const { value, name } = e.target;\n      let data = this.state;\n      data[name] = value;\n      this.setState(data);\n    \n      if (this.state.From != undefined && this.state.To != undefined) {\n\n        let customSort = [];\n        activity.map((val, index) => {\n      \n          const temp = {\n            type: val.type,\n            id: val._id,\n            qty: val.qty,\n            time: val.time ? val.time : '',\n            matter: val.matter ? val.matter : '-',\n            description: val.description ? val.description : '-',\n            rate: val.rate,\n            billable: val.billable ? 'Yes' : 'No',\n            date: val.date.substring(0, 10),\n            invoiceStatus: val.invoiceStatus ? val.invoiceStatus : '-',\n          };\n          if (val.date >= this.state.From && val.date <= this.state.To)\n            customSort.push(temp);\n        });\n        this.setState({ tableData: customSort });\n      }\n    };\n    const handleChange = (e) => {\n      e.persist();\n      this.setState({ touched: false });\n      const { name, id, value, selectedIndex } = e.target;\n      let newData = this.state.data;\n      if (name === 'matter') {\n        if (selectedIndex >= 1) {\n          newData[name] = matters.data.data[selectedIndex - 1];\n        } else {\n          newData[name] = '';\n        }\n      } else if (name === 'time') {\n        timeError = '';\n        var timeValue = value;\n        if (timeValue == '' || timeValue.indexOf(':') < 0) {\n          timeError = 'Inavlid Time';\n          console.log(timeError);\n        } else {\n          var sHours = timeValue.split(':')[0];\n          var sMinutes = timeValue.split(':')[1];\n          var sSecs = timeValue.split(':')[2];\n          console.log(sSecs)\n          if (sHours == '' || isNaN(sHours) /*|| parseInt(sHours)>23 */) {\n            timeError = 'Inavlid Time';\n            console.log(timeError);\n          } else if (parseInt(sHours) == 0) sHours = '00';\n         // else if (parseInt(sHours) < 10) {\n//            sHours = '0' + sHours};\n\n          if (sMinutes == '' || isNaN(sMinutes) || parseInt(sMinutes) > 59) {\n            timeError = 'Inavlid Time';\n            console.log(timeError);\n          } else if (parseInt(sMinutes) == 0) sMinutes = '00';\n         // else if (parseInt(sMinutes) < 10) sMinutes = '0' + sMinutes;\n\n          if (sSecs == '' || isNaN(sSecs) /*|| parseInt(sHours)>23 */) {\n            timeError = 'Inavlid Time';\n            console.log(timeError);\n          } else if (parseInt(sSecs) == 0) sSecs = '00';\n         // else if (sSecs < 10) sSecs = '0' + sSecs;\n          timeValue = sHours + ':' + sMinutes +':' + sSecs;\n        }\n        newData[name] = timeValue;\n        this.setState({ data: newData });\n      } else if (name === 'nonBillable' || name === 'billable') {\n        newData.billable = !newData.billable;\n      } else {\n        newData[name] = value;\n        this.setState({ data: newData });\n      }\n\n      console.log(this.state);\n    };\n    const setTableData = (type) => {\n      if (type === 'time') {\n        this.setState({\n          tableData: this.state.timeData,\n        });\n      } else if (type === 'expense') {\n        this.setState({\n          tableData: this.state.expenseData,\n        });\n      } else if (type === 'all') {\n        this.setState({\n          tableData: this.state.completeData,\n        });\n      }\n    };\n    return (\n      <Spin size = \"large\" spinning={this.state.loading}>\n        <div>\n        <div className=\"d-flex mb-2 title-component-header\">\n            <div className=\"title-header-name\">\n              <h5>Activities</h5>\n            </div>\n            <div className=\"d-flex extra-iteam-div\">\n                <button\n                    className=\"btn  btn-outline-primary   btn-sm\"\n                    onClick={exportPDF}\n                >\n                    Export to Pdf\n                </button>\n                <ExportExcel dataSource={this.state.tableData || []} />\n                <button\n                    className=\" btn  btn-outline-primary   btn-sm\"\n                    onClick={() => this.showModal('time')}\n                >\n                    New Time Entry\n                </button>\n                <button\n                    className=\"btn  btn-outline-primary   btn-sm\"\n                    onClick={() => this.showModal('expense')}\n                >\n                    New Expense Entry\n                </button>\n            </div> \n          </div>\n\n        <Card\n          bodyStyle={{ padding: '14px 10px 0px 10px' }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              'flex-wrap': 'wrap',\n              'justify-content': 'space-between',\n            }}\n          >\n            <div className=\"mb-2\" style={{\"margin-top\": \"1rem\"}}>\n              <Button onClick={() => setTableData('all')}>All</Button>\n              <Button onClick={() => setTableData('time')}>Time</Button>\n              <Button onClick={() => setTableData('expense')}>Expense</Button>\n            </div>\n            <Form className=\"pt-0\">\n              <Form.Row className=\"ml-1 date-activity-res\">\n                <Form.Group controlId=\"From\" className=\"mr-2\"  style={{ \"display\": \"flex\", \"flex-direction\": \"column\"}}>\n                  <Form.Label style={{ marginBottom : \"0px\" }}>From</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"date\"\n                    name=\"From\"\n                    onChange={handleCustomSorting}\n                    style={{ width: '175px' }}\n                  />\n                </Form.Group>\n                \n                <Form.Group controlId=\"To\" style={{ \"display\": \"flex\", \"flex-direction\": \"column\"}}>\n                  <Form.Label style={{ marginBottom : \"0px\" }}>To</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"date\"\n                    name=\"To\"\n                    onChange={handleCustomSorting}\n                    style={{ width: '175px' }}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"sorting\" className=\"short-activity-botton\">\n                  <Form.Control\n                    size=\"sm\"\n                    as=\"select\"\n                    name=\"sorting\"\n                    onChange={handleSorting}\n                    style={{ height: 'fit-content', padding: '4px' }}\n                  >\n                    <option>Sort</option>\n                    <option>Today</option>\n                    <option>This Week</option>\n                    <option>This month</option>\n                    <option>This year</option>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          </div>\n        </Card>\n        <Card bodyStyle={{ padding: '0px' }} className=\"overflow-auto\">\n          <Table className=\"table-responsive\" columns={columns} dataSource={this.state.tableData} />\n        </Card>\n\n        <Modal\n          title=\"New Time Entry\"\n          visible={this.state.timeModal}\n          onOk={() => this.handleOk('time')}\n          onCancel={() => this.handleCancel('time')}\n          afterClose={() => this.handleCancel('time')}\n          footer={[\n            <Button  onClick={() => this.handleCancel('time')}>\n              Cancel\n            </Button>,\n            <Button type=\"primary\" \n            disabled = {this.state.disabletime} \n            onClick={() => this.handleOk('time')}>\n              Add Entry\n            </Button>,\n          ]}\n        >\n              <Form \n              id='myForm'\n              className=\"form\"\n              ref={ form => this.messageForm = form } >\n                <Row>\n                    <Col sm>\n                        <Form.Group controlId=\"duration\">\n                            <Form.Label>Duration</Form.Label>\n                              <Form.Control \n                                type=\"text\" \n                                name=\"time\" \n                                placeholder=\"hh:mm:ss\" \n                                defaultValue = {this.state.data.time}\n                                onChange={handleChange}/>\n                        </Form.Group>\n                    </Col>\n                    <Col  sm style={{margin : \"auto\"}}>\n                        <Timer setTimer = {this.setTimer} ></Timer>\n                    </Col>\n                </Row>\n                \n                <Row className=\"mt-2\">\n                    <Col sm>\n                    <Form.Group controlId=\"matter\">\n                        <Form.Label>Matter</Form.Label>\n                        <Form.Control \n                            as=\"select\"\n                            name=\"matter\" \n                            placeholder=\"Matter\"\n                            onChange={handleChange}>\n                        <option>Select a matter</option>\n                        {this.state.option}\n                        </Form.Control>\n                    </Form.Group>\n                    </Col>\n                    <Col sm>\n                    <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        <Form.Control \n                        required\n                        type=\"number\" \n                        name=\"rate\" \n                        placeholder=\"0.0 /h\"\n                        onChange={handleChange} />\n                    </Form.Group>\n                    </Col>\n\n                </Row>\n              \n                    \n                <Row>\n                    <Col sm>\n                    <Form.Group controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control \n                        name=\"description\" \n                        as=\"textarea\" \n                        rows=\"3\"\n                        placeholder=\"Description\"\n                        onChange={handleChange} />\n                    </Form.Group>\n                    </Col>\n\n                </Row>\n              \n                <Row>\n                    <Col sm>\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control \n                        required\n                        type=\"date\" \n                        name=\"date\" \n                        placeholder=\"Date\" \n                        onChange={handleChange}/>\n                    </Form.Group>\n                    </Col>\n                    {\n                        /* \n                        <Col>\n                    <Form.Group controlId=\"invoiceStatus\">\n                        <Form.Label>Invoice Status</Form.Label>\n                        <Form.Control \n                            as=\"select\"\n                            name=\"invoiceStatus\"\n                            onChange={handleChange} >\n                        <option>Unbilled</option>\n                        <option>Billed</option>\n                        </Form.Control>\n                    </Form.Group>\n                    </Col>\n                        */\n                    }\n                </Row>\n                    \n                    <Row>\n                        <Col sm>\n                        <Form.Check \n                      type=\"checkbox\"\n                      id=\"billable\"\n                      name=\"billable\"\n                      label=\"Billable\"\n                    \n                      onChange={handleChange}\n                  /><br></br>\n                        </Col>\n                    </Row>\n            \n                    {\n                        /*\n                        <Form.Check \n                      type=\"checkbox\"\n                      id=\"nonBillable\"\n                      name=\"nonBillable\"\n                      label=\"Non-billable\"\n                      defaultChecked = {!this.props.record.billable}\n                      onChange={handleChange}\n                  />\n                        */\n                    }\n            </Form>\n\n        </Modal>\n        <Modal\n          title=\"Edit Time Entry\"\n          visible={this.state.editTime}\n          onOk={() => this.handleOk('time')}\n          onCancel={() => this.handleCancel('time')}\n          afterClose={() => this.handleCancel('time')}\n          footer={[\n            <Button  onClick={() => this.handleCancel('time')}>\n              Cancel\n            </Button>,\n            <Button type=\"primary\" disabled = {this.state.disabletime} onClick={() => this.handleOk('time')}>\n              Update Entry\n            </Button>,\n          ]}\n        >\n          <Form \n          id='myForm'\n          className=\"form\"\n          ref={ form => this.messageForm = form }>\n            <Row>\n                <Col sm>\n                <Form.Group controlId=\"duration\">\n                    <Form.Label>Duration</Form.Label>\n                    <Form.Control \n                    type=\"text\" \n                    name=\"time\" \n                    defaultValue = {this.state.data.time}\n                    onChange={handleChange}/>\n                </Form.Group>\n                </Col>\n                <Col sm style={{margin : \"auto\"}}>\n                    <Timer setTimer = {this.setTimer} ></Timer>\n                </Col>\n            </Row>\n            \n            <Row className=\"mt-2\">\n                <Col sm>\n                    <Form.Group controlId=\"matter\">\n                                    <Form.Label>Matter</Form.Label>\n                                    <Form.Control \n                                        as=\"select\"\n                                        name=\"matter\" \n                                        value = {this.state.data.matter ? this.state.data.matter.matterDescription : \"\"}\n\n                                        onChange={handleChange}>\n                                    <option>Select a matter</option>\n                                    {this.state.option}\n                                    </Form.Control>\n                                </Form.Group>\n                </Col>\n                <Col sm>\n                <Form.Group controlId=\"rate\">\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"number\" \n                    name=\"rate\" \n                    defaultValue = {this.state.data.rate}\n                    onChange={handleChange} />\n                </Form.Group>\n                </Col>\n\n            </Row>\n            \n                \n            <Row>\n                <Col sm>\n                <Form.Group controlId=\"Description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control \n                    name=\"description\" \n                    as=\"textarea\" \n                    rows=\"3\"\n                    defaultValue = {this.state.data.description}\n                    onChange={handleChange} />\n                </Form.Group>\n                </Col>\n\n            </Row>\n            \n            <Row>\n                \n                <Col sm>\n                <Form.Group controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"date\" \n                    name=\"date\" \n                    defaultValue = {this.state.data.date}\n                    onChange={handleChange}/>\n                </Form.Group>\n                </Col>\n                \n                \n            </Row>\n                \n                <Row>\n                    <Col sm>\n                    <Form.Check \n                    type=\"checkbox\"\n                    id=\"billable\"\n                    name=\"billable\"\n                    label=\"Billable\"\n                    defaultChecked = {this.state.data.billable===\"Yes\"? true : false}\n                    onChange={handleChange}\n                /><br></br>\n                    </Col>\n                </Row>\n        </Form>\n\n          \n        </Modal>\n        <Modal\n          title=\"New Expense\"\n          visible={this.state.expenseModal}\n          onOk={() => this.handleOk('expense')}\n          onCancel={() => this.handleCancel('expense')}\n          afterClose={() => this.handleCancel('expense')}\n          footer={[\n            <Button  onClick={() => this.handleCancel('expense')}>\n              Cancel\n            </Button>,\n            <Button type=\"primary\" disabled = {this.state.disableExpense} onClick={() => this.handleOk('expense')}>\n              Add Entry\n            </Button>\n          ]}\n        >\n            <Form \n              id='myForm'\n              className=\"form\"\n              ref={ form => this.messageForm = form } >\n                <Row>\n                    <Col sm>\n                        <Form.Group controlId=\"quantity\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control \n                            type=\"number\" \n                            name=\"qty\" \n                            placeholder=\"1.0\"\n                            onChange={handleChange}/>\n                        </Form.Group>\n                    </Col>\n                    <Col sm>\n                        <Form.Group controlId=\"matter\">\n                            <Form.Label>Matter</Form.Label>\n                            <Form.Control \n                                as=\"select\"\n                                name=\"matter\" \n                                placeholder=\"Matter\"\n                                onChange={handleChange}>\n                            <option>Select a matter</option>\n                            {this.state.option}\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm>\n                        <Form.Group controlId=\"Description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control \n                            name=\"description\" \n                            as=\"textarea\" \n                            rows=\"3\"\n                            placeholder=\"Description\"\n                            onChange={handleChange} />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                \n                <Row>\n                    <Col sm>\n                        <Form.Group controlId=\"rate\">\n                            <Form.Label>Rate</Form.Label>\n                            <Form.Control \n                            required\n                            type=\"number\" \n                            name=\"rate\" \n                            placeholder=\"0.0 /h\"\n                            onChange={handleChange} />\n                        </Form.Group>\n                    </Col>\n                    <Col sm>\n                        <Form.Group controlId=\"date\">\n                            <Form.Label>Date</Form.Label>\n                            <Form.Control \n                            required\n                            type=\"date\" \n                            name=\"date\" \n                            placeholder=\"Date\" \n                            onChange={handleChange}/>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                \n                    {\n                        /*\n                            <Form.Group controlId=\"invoiceStatus\">\n                    <Form.Label>Invoice Status</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name=\"invoiceStatus\"\n                        onChange={handleChange} >\n                    <option>Unbilled</option>\n                    <option>Billed</option>\n                    </Form.Control>\n                </Form.Group>\n                        */\n                    }\n              \n                \n              \n                <Form.Check \n                      type=\"checkbox\"\n                      id=\"billable\"\n                      name=\"billable\"\n                      label=\"Billable\"\n                      onChange={handleChange}\n                  /><br></br>\n            \n                    {\n                        /*\n                        <Form.Check \n                      type=\"checkbox\"\n                      id=\"nonBillable\"\n                      name=\"nonBillable\"\n                      label=\"Non-billable\"\n                      defaultChecked = {!this.props.record.billable}\n                      onChange={handleChange}\n                  />\n                        */\n                    }\n                  \n\n          </Form>\n\n        </Modal>\n        <Modal\n          title=\"Edit Expense\"\n          visible={this.state.EditExpense}\n          onOk={() => this.handleOk('expense')}\n          onCancel={() => this.handleCancel('expense')}\n          afterClose={() => this.handleCancel('expense')}\n          footer={[\n            <Button  onClick={() => this.handleCancel('expense')}>\n              Cancel\n            </Button>,\n            <Button type=\"primary\" disabled = {this.state.disableExpense} onClick={() => this.handleOk('expense')}>\n              Update Entry\n            </Button>,\n          ]}\n        >\n          <Form  id='myForm'\n          className=\"form\"\n          ref={ form => this.messageForm = form }>\n        <Row>\n            <Col sm>\n                <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control \n                    type=\"number\" \n                    name=\"qty\" \n                    defaultValue = {this.state.data.qty}\n                    onChange={handleChange}/>\n                </Form.Group>\n            </Col>\n            <Col sm>\n            <Form.Group controlId=\"matter\">\n                                    <Form.Label>Matter</Form.Label>\n                                    <Form.Control \n                                        as=\"select\"\n                                        name=\"matter\" \n                                        value = {this.state.data.matter ? this.state.data.matter.matterDescription : \"\"}\n                                        onChange={handleChange}>\n                                    <option>Select a matter</option>\n                                    {this.state.option}\n                                    </Form.Control>\n                                </Form.Group>\n            </Col>\n    </Row>\n    <Row>\n        <Col sm>\n        <Form.Group controlId=\"Description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control \n                name=\"description\" \n                as=\"textarea\" \n                rows=\"3\"\n                defaultValue = {this.state.data.description}\n                onChange={handleChange} />\n            </Form.Group>\n        </Col>\n    </Row>\n    <Row>\n        <Col sm>\n            <Form.Group controlId=\"date\">\n                <Form.Label>Date</Form.Label>\n                <Form.Control \n                required\n                type=\"date\" \n                name=\"date\" \n                defaultValue = {this.state.data.date}\n                onChange={handleChange}/>\n            </Form.Group>\n        </Col>\n        <Col sm>\n            <Form.Group controlId=\"rate\">\n                <Form.Label>Rate</Form.Label>\n                <Form.Control \n                required\n                type=\"number\" \n                name=\"rate\" \n                defaultValue = {this.state.data.rate}\n                onChange={handleChange} />\n            </Form.Group>\n        </Col>\n    </Row>\n           <Form.Check \n               type=\"checkbox\"\n               id=\"billable\"\n               name=\"billable\"\n               label=\"Billable\"\n               defaultChecked = {this.state.data.billable===\"Yes\"? true : false}\n               onChange={handleChange}\n           /><br></br>\n    </Form>\n        </Modal>\n      </div>\n   \n      </Spin>\n       );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userId: state.user.token.user._id,\n});\n\nexport default connect(mapStateToProps)(Activity);\n"],"sourceRoot":""}