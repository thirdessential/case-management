{"version":3,"sources":["App/containers/Billings/ExcelExport.js","App/containers/ContactManagement/ViewContact/Views/ExportCommunications.js","App/containers/ContactManagement/ViewContact/Views/Communication.js","App/containers/ContactManagement/ViewContact/Views/bills.js","App/containers/ContactManagement/ViewContact/Views/docs.js","App/containers/ContactManagement/ViewContact/Views/ExportExcel.js","App/containers/ContactManagement/ViewContact/Views/Notes.js","App/containers/ContactManagement/ViewContact/ViewContact.js"],"names":["ExportExcel","Component","constructor","props","super","console","log","dataSource","render","this","id","className","map","value","index","key","lastSeen","status","dueDate","client","matter","issueDate","balance","table","filename","sheet","buttonText","addTime","logType","time","date","subject","from","to","timeError","matters","communication","contact","option","optns","matterkey","fromKey","toKey","user","JSON","parse","window","localStorage","getItem","name","token","firstName","lastName","Communication","React","convertTime","serverdate","toutc","Date","toUTCString","showModal","type","setState","secure","email","phone","handleOk","notification","destroy","error","message","state","data","body","disable","editEmail","editPhone","fromId","toId","userId","api","post","then","res","componentDidMount","success","catch","err","ReactDOM","findDOMNode","messageForm","reset","billable","nonBillable","qty","rate","invoice","setTimeout","handleSecure","editSecure","getHours","getMinutes","_id","get","emailAddress","length","number","text","sms","mobile","content","smsres","handleCancel","tableData","loading","emailData","phoneData","completeData","val","matterDescription","contacts","temp","matterDesc","substring","push","handleChange","e","persist","touched","target","selectedIndex","newData","timeValue","indexOf","sHours","split","sMinutes","sSecs","isNaN","parseInt","handleEdit","record","handleDelete","setTableData","columns","title","dataIndex","_","variant","onClick","onConfirm","okText","cancelText","danger","size","spinning","doc","jsPDF","setFontSize","td","startY","head","autoTable","save","bodyStyle","style","visible","onOk","onCancel","footer","disabled","Form","ref","form","Row","Col","sm","Group","Label","Control","as","placeholder","onChange","controlId","rows","defaultValue","required","connect","TabPane","Tabs","billing","handelBills","history","draftBills","unpaidBills","paidBills","cancel","invoiceId","parseFloat","toFixed","handelAction","newState","splice","columnsforDraft","Check","unpaidColumns","paidColumns","handleRecordPayment","handleBills","defaultActiveKey","tab","Option","Select","Documents","useState","docs","setDocs","useSelector","documents","setTemplateTable","setTemplateModal","document","category","setTemplateData","Disable","setDisable","viewUpload","setViewUpload","Loading","setLoading","CatagoryData","setCatagoryData","CatagoryTable","setCatagoryTable","cataoryModal","setcataoryModal","uploadData","setUploadData","modalFor","setModalFor","setMatters","Category","setCategory","setValue","dataSrc","setDataSrc","showNameInput","setShowNameInput","columnsForDocuments","SearchOutlined","paddingLeft","paddingTop","filteredData","filter","item","toLowerCase","includes","highlightStyle","backgroundColor","padding","searchWords","autoEscape","textToHighlight","toString","sortDirections","sorter","a","b","receivedDate","lastEdit","editHandler","deleteHandler","downloadHandler","icon","DownloadOutlined","handleInput","files","getMatterById","getDocuments","tempDocs","template","undefined","getISTDate","updated_at","created_at","__v","image","customFields","Email","address","website","company","handleSubmit","warning","docFormData","FormData","set","headers","response","open","docId","formData","newUploadData","columnsForCatagory","editCategory","deleteCategory","getCategory","tempCatagory","AddCategory","EditCategory","layout","labelCol","span","wrapperCol","dateInUTC","toLocaleString","matterId","useEffect","menu","Item","ButtonForDocument","overlay","trigger","preventDefault","DownOutlined","ButtonForCatagory","ButtonForTemplate","operations","setoperations","tabBarExtraContent","htmlType","fields","label","rules","showSearch","width","optionFilterProp","filterOption","input","children","CatagoryForm","p","hours","notes","Notes","setVisible","setdata","setdisable","settableData","editMode","seteditMode","setrecord","editModal","seteditModal","formRef","useRef","fetchNotes","valid","notess","current","columnsNotes","unit","orientation","marginLeft","CompanyView","url","setUrl","setAddress","Title","setTitle","ID","setID","cId","setcId","Website","setWebsite","setEmail","Number","setNumber","Rate","setRate","editableData","setEditableData","location","fetchData","ttl","URL","idx","billingClientId","rte","billingCustomRate","adrs","street","city","zipCode","country","Web","websiteType","mail","emailType","Num","phoneType","extra","height","src","alt"],"mappings":"mIAAA,sCAGO,MAAMA,UAAoBC,YAC/BC,YAAYC,GACVC,MAAMD,GACNE,QAAQC,IAAI,gBAAiBH,EAAMI,YAGrCC,SAEE,OADAH,QAAQC,IAAIG,KAAKN,OAEf,6BACE,2BAAOO,GAAG,SAASC,UAAU,UAC3B,+BACE,4BACE,oCACA,yCACA,sCACA,wCACA,kCACA,sCACA,sCACA,0CACA,yCAIJ,+BACGF,KAAKN,MAAMI,WAAWK,IAAI,CAACC,EAAOC,IAE/B,wBAAIC,IAAKD,GACP,4BAAKA,EAAQ,GACb,4BAAKD,EAAMG,UACX,4BAAKH,EAAMI,QACX,4BAAKJ,EAAMK,SACX,4BAAML,EAAMH,IACZ,4BAAKG,EAAMM,QACX,4BAAKN,EAAMO,QACX,4BAAKP,EAAMQ,WACX,4BAAKR,EAAMS,aAOrB,kBAAC,IAAD,CACEX,UAAU,8CACVY,MAAM,SACNC,SAAS,QACTC,MAAM,QACNC,WAAW,sBAON1B,O,iRCxDR,MAAMA,UAAoBC,YAC/BC,YAAYC,GACVC,MAAMD,GACNE,QAAQC,IAAI,gBAAiBH,EAAMI,YAGrCC,SAEE,OADAH,QAAQC,IAAIG,KAAKN,OAEf,6BACE,2BAAOO,GAAG,SAASC,UAAU,UAC3B,+BACE,4BACE,oCACA,qCACA,oCACA,oCACA,oCACA,uCACA,sCACA,oCACA,oCAIJ,+BACGF,KAAKN,MAAMI,WAAWK,IAAI,CAACC,EAAOC,IAE/B,wBAAIC,IAAKD,GACP,4BAAKA,EAAQ,GACb,4BAAKD,EAAMc,SACX,4BAAKd,EAAMe,SACX,4BAAKf,EAAMgB,MACX,4BAAKhB,EAAMiB,MACX,4BAAMjB,EAAMkB,SACZ,4BAAKlB,EAAMO,QACX,4BAAKP,EAAMmB,MACX,4BAAKnB,EAAMoB,QAOrB,kBAAC,IAAD,CACEtB,UAAU,8CACVY,MAAM,SACNC,SAAS,iBACTC,MAAM,QACNC,WAAW,sBAON1B,QChDb,IAAIkC,EAAY,GACZC,EAAU,GACVC,EAAgB,GAChBC,EAAU,GACVC,EAAS,KACTC,EAAQ,KACRC,EAAY,KACZC,EAAU,KACVC,EAAQ,KACZ,MAAMC,EAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAC9CC,EAAON,EAAKO,MAAMP,KAAKQ,UAAY,IAAMR,EAAKO,MAAMP,KAAKS,SAC/D/C,QAAQC,IAAIqC,EAAKO,MAAMP,MAEvB,MAAMU,UAAsBC,IAAMrD,UAC9BC,YAAYC,GACRC,MAAMD,GADQ,KAyBlBoD,YAAeC,IACb,IAEIC,EAFO,IAAIC,KAAKF,GAEHG,cAGjB,OADa,IAAID,KAAKD,EAAQ,SA9Bd,KAuHlBG,UAAaC,IACD,WAAPA,EACDpD,KAAKqD,SAAS,CACVC,QAAS,IAGH,UAAPF,EACCpD,KAAKqD,SAAS,CACVE,OAAQ,IAGN,UAAPH,GACCpD,KAAKqD,SAAS,CACVG,OAAQ,KApIF,KA0IhBC,SAAWL,IAET,GADAM,IAAaC,UACK,KAAdlC,EACFiC,IAAaE,MAAM,CAAEC,QAAS,mEAEhC,GAA8B,IAA3B7D,KAAK8D,MAAMC,KAAKzC,QACfoC,IAAaE,MAAM,CAACC,QAAU,8BAElC,GAA2B,IAAxB7D,KAAK8D,MAAMC,KAAKC,KACfN,IAAaE,MAAM,CAACC,QAAU,2BAM9B,GAJF7D,KAAKqD,SAAS,CACZY,SAAU,IAGPjE,KAAK8D,MAAMI,WAAalE,KAAK8D,MAAMK,UAAU,CAE9C,IAAIJ,EAAO/D,KAAK8D,MAAMC,KACtBnE,QAAQC,IAAIkE,GAEE,MAAX/B,IACD+B,EAAKxC,KAAOwC,EAAKK,QAEP,MAATnC,IACD8B,EAAKvC,GAAKuC,EAAKM,MAEP,UAATjB,GACDW,EAAK5C,QAAU,QACfnB,KAAKqD,SAAS,CAACE,OAAQ,KAEb,UAATH,IACDW,EAAK5C,QAAU,QACfnB,KAAKqD,SAAS,CAACG,OAAQ,KAEzBO,EAAKO,OAAStE,KAAKN,MAAM4E,OACzB1E,QAAQC,IAAIkE,GACZQ,IACGC,KAAK,uBAAwBxE,KAAK8D,MAAMC,KAAK9D,GAAI8D,GACjDU,KAAMC,IACL9E,QAAQC,IAAI6E,GACZ1E,KAAK2E,oBACL3E,KAAKqD,SAAS,CACZY,SAAU,IAGZP,IAAakB,QAAQ,CAAEf,QAAS,mBAEjCgB,MAAOC,IACNpB,IAAaE,MAAM,CAAEC,QAAS,aAE/BY,KAAK,KACJM,IAASC,YAAYhF,KAAKiF,aAAaC,QACvCnD,EAAY,KACZC,EAAU,KACVC,EAAQ,KAERjC,KAAKqD,SAAS,CACZc,WAAY,EACZD,WAAW,EACXD,SAAU,EACVF,KAAM,CACJoB,UAAU,EACVC,aAAa,EACb/D,KAAM,GAENgE,IAAK,MACLC,KAAM,GACNC,QAAS,cAKbC,WAAW,OAER,YAIF,CACH,IAAIzB,EAAO/D,KAAK8D,MAAMC,KACZ,UAATX,GACDW,EAAK5C,QAAU,QACfnB,KAAKqD,SAAS,CAACE,OAAQ,KAEb,UAATH,IACDW,EAAK5C,QAAU,QACfnB,KAAKqD,SAAS,CAACG,OAAQ,KAEzBO,EAAKO,OAAStE,KAAKN,MAAM4E,OACzB1E,QAAQC,IAAIkE,GACZQ,IACGC,KAAK,wBAAyBT,GAC9BU,KAAMC,IACL9E,QAAQC,IAAI6E,GACZ1E,KAAKqD,SAAS,CACZY,SAAU,IAEZjE,KAAK2E,oBACLjB,IAAakB,QAAQ,CAAEf,QAAS,kBAEjCgB,MAAOC,IACNpB,IAAaE,MAAM,CAAEC,QAAS,aAC7BY,KAAK,KAENM,IAASC,YAAYhF,KAAKiF,aAAaC,YAlPjC,KA0PhBO,aAAe,KAEb,GADA/B,IAAaC,UACY,IAAtB3D,KAAK8D,MAAMC,KAAKvC,GACjBkC,IAAaE,MAAM,CAACC,QAAU,8CAEhC,GAA8B,IAA3B7D,KAAK8D,MAAMC,KAAKzC,QACfoC,IAAaE,MAAM,CAACC,QAAU,8BAElC,GAA2B,IAAxB7D,KAAK8D,MAAMC,KAAKC,KACfN,IAAaE,MAAM,CAACC,QAAU,2BAM9B,GAJF7D,KAAKqD,SAAS,CACZY,SAAU,IAGPjE,KAAK8D,MAAM4B,WAAW,CAEvB,IAAI3B,EAAO/D,KAAK8D,MAAMC,KACtBA,EAAK5C,QAAU,SACf4C,EAAKO,OAAStE,KAAKN,MAAM4E,OAC3B1E,QAAQC,IAAIkE,GACZQ,IACGC,KAAK,uBAAwBxE,KAAK8D,MAAMC,KAAK9D,GAAI8D,GACjDU,KAAMC,IACL9E,QAAQC,IAAI6E,GACZ1E,KAAK2E,oBACL3E,KAAKqD,SAAS,CACZY,SAAU,IAGZP,IAAakB,QAAQ,CAAEf,QAAS,mBAEjCgB,MAAOC,IACNpB,IAAaE,MAAM,CAAEC,QAAS,aAE/BY,KAAK,KACJM,IAASC,YAAYhF,KAAKiF,aAAaC,QAEvClF,KAAKqD,SAAS,CACZqC,YAAa,EACbpC,QAAQ,EACRW,SAAU,EACVF,KAAM,CACJoB,UAAU,EACVC,aAAa,EACb/D,KAAM,GACNG,GAAK,GACL6D,IAAK,MACLC,KAAM,GACNC,QAAS,cAKbC,WAAW,OAER,YAIF,CACH,IAAIzB,EAAO/D,KAAK8D,MAAMC,KACtBA,EAAK5C,QAAU,SACf4C,EAAKO,OAAStE,KAAKN,MAAM4E,OACzBP,EAAK3C,MAAO,IAAI6B,MAAO0C,WAAa,KAAM,IAAI1C,MAAO2C,aACrD7B,EAAKxC,KAAOW,EAAKO,MAAMP,KAAK2D,IAC5BjG,QAAQC,IAAIkE,GAEZQ,IAAIuB,IAAJ,wBAAyB/B,EAAKvC,KAAMiD,KAAMC,IACxC9E,QAAQC,IAAI6E,GACZ,IAAIqB,EAAoD,GAArCrB,EAAIX,KAAKA,KAAKgC,aAAaC,OAActB,EAAIX,KAAKA,KAAKgC,aAAa,GAAGA,aAAe,GACrGE,EAAuC,GAA9BvB,EAAIX,KAAKA,KAAKP,MAAMwC,OAActB,EAAIX,KAAKA,KAAKP,MAAM,GAAGA,MAAQ,GAC9E5D,QAAQC,IAAIkE,GACZ,IAAIR,EAAQ,CACV/B,GAAIuE,EACJzE,QAAUyC,EAAKzC,QACf4E,KAAOnC,EAAKC,KACZ3C,KAAQ,IAAI4B,MAGVkD,EAAM,CACRC,OAASH,EACTI,QAAUtC,EAAKC,MAEjBpE,QAAQC,IAAI0D,GACZ3D,QAAQC,IAAIsG,GACE,KAAXF,GACD1B,IAAIC,KAAJ,yBAAmC2B,GAAM1B,KAAM6B,IAC7C1G,QAAQC,IAAIyG,GACZ5C,IAAakB,QAAQ,CACnBf,QAAU,eAGXgB,MAAOC,IACRlF,QAAQC,IAAIiF,GACZpB,IAAaE,MAAM,CAACC,QAAU,6BAKd,KAAjBkC,GACDxB,IAAIC,KAAJ,2BAAqCjB,GAAQkB,KAAMlB,IACjD3D,QAAQC,IAAI0D,GACZG,IAAakB,QAAQ,CACnBf,QAAU,eAEZU,IACCC,KAAK,wBAAyBT,GAC9BU,KAAMC,IACL9E,QAAQC,IAAI6E,GACZ1E,KAAK2E,oBACLjB,IAAakB,QAAQ,CAAEf,QAAS,kBAEjCgB,MAAOC,IACNpB,IAAaE,MAAM,CAAEC,QAAS,aAC7BY,KAAK,KACNzE,KAAKqD,SAAS,CACZY,SAAU,EACVX,QAAS,EACToC,YAAa,IAEfX,IAASC,YAAYhF,KAAKiF,aAAaC,YAExCL,MAAOC,IACRlF,QAAQC,IAAIiF,GACZpB,IAAaE,MAAM,CAACC,QAAU,mCAvX5B,KAqYhB0C,aAAenD,IAEbrB,EAAY,KACZC,EAAU,KACVC,EAAQ,KACE,WAAPmB,GACDpD,KAAKqD,SAAS,CACVC,QAAS,EACToC,YAAa,EACbzB,SAAU,EACVF,KAAO,CACLzC,QAAU,GACV0C,KAAO,GACPxC,GAAI,GACJD,KAAOiB,KAIX5C,QAAQC,IAAIG,KAAK8D,QAEX,UAAPV,GACCpD,KAAKqD,SAAS,CACVE,OAAQ,EACRC,OAAQ,EACRS,SAAU,EACVC,WAAW,EACXwB,YAAY,EACZpC,QAAS,EACTS,KAAO,CACLzC,QAAU,GACV0C,KAAO,GACPxC,GAAK,GACLD,KAAOiB,KAIX5C,QAAQC,IAAIG,KAAK8D,QAEb,UAAPV,IACCpD,KAAKqD,SAAS,CACVG,OAAQ,EACRD,OAAQ,EACRY,WAAW,EACXF,SAAU,EACVF,KAAO,CACLzC,QAAU,GACV0C,KAAO,GACPxC,GAAK,GACLD,KAAOiB,KAGX5C,QAAQC,IAAIG,KAAK8D,QAIvB0B,WAAW,OAER,MA5bHxF,KAAK8D,MAAQ,CACTN,OAAQ,EACRD,OAAQ,EACRD,QAAS,EACTkD,UAAY,GACZzC,KAAO,CACHzC,QAAU,GACV0C,KAAO,GACPxC,GAAK,GACLD,KAAOW,EAAKO,MAAMP,KAAK2D,KAE3BY,SAAU,EACVC,UAAY,GACZC,UAAY,GACZC,aAAe,GACfJ,UAAY,GACZtC,WAAY,EACZC,WAAY,EACZuB,YAAa,EACbzB,SAAU,GAYlBU,oBAECJ,IAAIuB,IAAI,uBAAwB9F,KAAKN,MAAM4E,QAAQG,KAAMC,IACvDhD,EAAUgD,EACL7C,EAAS6C,EAAIX,KAAKA,KAAK5D,IAAI,CAAC0G,EAAKxG,IACrB,4BAAQD,MAASyG,EAAIhB,KAAMgB,EAAIC,sBAE3CrC,KAAK,KACJ7E,QAAQC,IAAIgC,GACZ7B,KAAKqD,SAAS,CAACxB,OAASA,MAG/B0C,IAAIuB,IAAI,wBAAwB9F,KAAKN,MAAM4E,QAAQG,KAAMC,IACvD9C,EAAU8C,EACR5C,EAAQ4C,EAAIX,KAAKA,KAAK5D,IAAI,CAACC,EAAOC,IAEvB,4BAAQJ,GAAII,GAAQD,EAAMsC,UAAY,IAAMtC,EAAMuC,aAE7D8B,KAAK,KAAKzE,KAAKqD,SAAS,CAAC0D,SAAWjF,MAEvCyC,IAAIuB,IAAI,iCAAmC9F,KAAKN,MAAM4E,OAAS,IAAMtE,KAAKN,MAAMO,IAAIwE,KAAMC,IACzF/C,EAAgB+C,EAAIX,KAAKA,KAC1BnE,QAAQC,IAAI8B,GAEX,IAAI+E,EAAY,GACZC,EAAY,GACZC,EAAe,GAEnBlC,EAAIX,KAAKA,KAAK5D,IAAI,CAAC0G,EAAKxG,KAEtB,MAAM2G,EAAO,CACX1G,IAAKD,EACLc,QAAS0F,EAAI1F,QACbiC,KAAMyD,EAAI1F,QACVlB,GAAI4G,EAAIhB,IACR3E,QAAU2F,EAAI3F,QAAU2F,EAAI3F,QAAU,IACtCE,KAAMyF,EAAIzF,KAAOyF,EAAIzF,KAAO,GAC5B6F,WAAYJ,EAAIlG,OAASkG,EAAIlG,OAAOmG,kBAAoB,IACxDnG,OAASkG,EAAIlG,OAASkG,EAAIlG,OAAOkF,IAAM,GACvCtE,KAAMsF,EAAItF,KAAOsF,EAAItF,KAAKmB,UAAY,IAAMmE,EAAItF,KAAKoB,SAAY,IACjEyB,OAASyC,EAAItF,KAAOsF,EAAItF,KAAKsE,IAAM,GACnCrE,GAAIqF,EAAIrF,GAAKqF,EAAIrF,GAAGkB,UAAY,IAAMmE,EAAIrF,GAAGmB,SAAY,IACzD0B,KAAOwC,EAAIrF,GAAKqF,EAAIrF,GAAGqE,IAAM,GAC7BvE,QAASuF,EAAIvF,QAAUuF,EAAIvF,QAAU,IACrC0C,KAAM6C,EAAI7C,KACV3C,KAAMwF,EAAIxF,KAAOwF,EAAIxF,KAAK6F,UAAU,EAAE,IAAM,KAE1B,UAAhBL,EAAI1F,SAAuC,WAAhB0F,EAAI1F,SACjCuF,EAAUS,KAAKH,GAEI,WAAhBH,EAAI1F,UACP6F,EAAKzF,KAAOiB,EACZwE,EAAK5D,KAAO,SACZ4D,EAAK7F,QAAU,QACfuF,EAAUS,KAAKH,IAEG,UAAhBH,EAAI1F,SACNwF,EAAUQ,KAAKH,GAGjBJ,EAAaO,KAAKH,KAEpBhH,KAAKqD,SAAS,CACZuD,aAAcA,EACdD,UAAWA,EACXD,UAAWA,EACXF,UAAWI,EACXH,SAAU,MAgWhB1G,SACE,MAAMqH,EAAgBC,IACpBA,EAAEC,UACFtH,KAAKqD,SAAS,CAAEkE,SAAS,IAFC,QAGiBF,EAAEG,OAArChF,EAHkB,EAGlBA,KAAUpC,GAHQ,EAGZH,GAHY,EAGRG,OAAOqH,EAHC,EAGDA,cACzB,IAAIC,EAAU1H,KAAK8D,MAAMC,KAEzB,GAAa,WAATvB,EAEEiF,GAAiB,GACnB1F,EAAY,GAEZ2F,EAAQlF,GAAQpC,GAGhBsH,EAAQlF,GAAQ,QAKpB,GAAa,OAATA,GAA0B,SAATA,EACnB5C,QAAQC,IAAI6B,GACR+F,GAAiB,GACV,OAATjF,EAAgBP,EAAQ,GAAKD,EAAU,GACvC0F,EAAQlF,GAAQZ,EAAQmC,KAAKA,KAAK0D,EAAgB,GAAG5B,KAErD6B,EAAQlF,GAAQ,QAInB,GAAa,YAATA,EAAoB,CACvBf,EAAY,GACZ,IAAIkG,EAAYvH,EAChB,GAAiB,IAAbuH,GAAmBA,EAAUC,QAAQ,KAAO,EAC9CnG,EAAY,eACZ7B,QAAQC,IAAI4B,OACP,CACL,IAAIoG,EAASF,EAAUG,MAAM,KAAK,GAC9BC,EAAWJ,EAAUG,MAAM,KAAK,GAChCE,EAAQL,EAAUG,MAAM,KAAK,GACjClI,QAAQC,IAAImI,GACE,IAAVH,GAAgBI,MAAMJ,IACxBpG,EAAY,eACZ7B,QAAQC,IAAI4B,IACiB,GAApByG,SAASL,KAAcA,EAAS,MAG3B,IAAZE,GAAkBE,MAAMF,IAAaG,SAASH,GAAY,IAC5DtG,EAAY,eACZ7B,QAAQC,IAAI4B,IACmB,GAAtByG,SAASH,KAAgBA,EAAW,MAGlC,IAATC,GAAeC,MAAMD,IACvBvG,EAAY,eACZ7B,QAAQC,IAAI4B,IACgB,GAAnByG,SAASF,KAAaA,EAAQ,MAEzCL,EAAYE,EAAS,IAAME,EAAU,IAAMC,EAE7CN,EAAQlF,GAAQmF,EAChB3H,KAAKqD,SAAS,CAAEU,KAAM2D,SAIpB9H,QAAQC,IAAI,eACZ6H,EAAQlF,GAAQpC,EAChBJ,KAAKqD,SAAS,CAAEU,KAAM2D,IAG1B9H,QAAQC,IAAIG,KAAK8D,QAEXqE,EAAaC,IAShBxI,QAAQC,IAAIuI,GACS,UAAjBA,EAAOjH,SACW,WAAhBiH,EAAOhF,MACRpD,KAAKqD,SAAS,CACZqC,YAAa,IAGjB1F,KAAKqD,SAAS,CACZa,WAAY,EACVH,KAAOqE,KAGO,UAAjBA,EAAOjH,SACRnB,KAAKqD,SAAS,CACZc,WAAY,EACVJ,KAAOqE,IAGbxI,QAAQC,IAAIuI,IAINC,EAAeD,IAEnB7D,IAAIuB,IAAI,yBAAyBsC,EAAOnI,IAAIwE,KAAMC,IAChD1E,KAAK2E,oBACLjB,IAAakB,QAAQ,CAACf,QAAU,kBAChC2B,WAAW,OAET,QACDX,MAAOC,IAERpB,IAAaE,MAAM,CAACC,QAAU,wBAIhCyE,EAAgBlF,IACR,UAAPA,EACDpD,KAAKqD,SAAS,CACZmD,UAAWxG,KAAK8D,MAAM4C,YAGjB,UAAPtD,EACFpD,KAAKqD,SAAS,CACZmD,UAAWxG,KAAK8D,MAAM6C,YAGd,QAAPvD,GACDpD,KAAKqD,SAAS,CACZmD,UAAWxG,KAAK8D,MAAM8C,gBAIxB2B,EAAU,CACZ,CACIC,MAAO,QACPC,UAAW,UACXnI,IAAK,WAET,CACEkI,MAAO,OACPC,UAAW,UACXnI,IAAK,WAEP,CACEkI,MAAO,OACPC,UAAW,OACXnI,IAAK,QAEP,CACEkI,MAAO,OACPC,UAAW,OACXnI,IAAK,QAEP,CACEkI,MAAO,UACPC,UAAW,UACXnI,IAAK,WAEP,CACIkI,MAAO,SACPC,UAAW,aACXnI,IAAK,cAET,CACEkI,MAAO,OACPC,UAAW,OACXnI,IAAK,QAEL,CACEkI,MAAO,KACPC,UAAW,KACXnI,IAAK,MAGP,CACEkI,MAAM,OACNC,UAAW,OACXnI,IAAK,MACLP,OAAO,CAAC2I,EAAEN,IAEF,kBAAC,IAAD,CAAQO,QAAQ,SAASC,QAAS,IAAIT,EAAWC,IAAjD,SAOV,CACII,MAAM,SACNC,UAAW,SACXnI,IAAK,MACLP,OAAO,CAAC2I,EAAEN,IAEJ,kBAAC,IAAD,CACEI,MAAM,gCACNK,UAAW,IAAIR,EAAaD,GAC5BU,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CAAQC,QAAM,GAAd,aAiDlB,OAAO,kBAAC,IAAD,CAAMC,KAAO,QAAQC,SAAUlJ,KAAK8D,MAAM2C,SAC/C,yBAAKvG,UAAU,QACf,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,qBACb,8CAEF,yBAAKA,UAAU,0BACb,4BACIA,UAAU,oCACV0I,QAjDQ,KAChB,MAKMO,EAAM,IAAIC,IAHI,WAFP,KACA,MAMbD,EAAIE,YAAY,IAKhB,IAAItF,EAAO,GAGX/D,KAAK8D,MAAM0C,UAAUrG,IAAI,CAAC0G,EAAKxG,KAC7B,MAAMiJ,EAAK,CACTzC,EAAI3F,QACJ2F,EAAI1F,QACJ0F,EAAIzF,KACJyF,EAAI5D,KACH4D,EAAIvF,QACJuF,EAAIlG,OACJkG,EAAItF,KACJsF,EAAIrF,IACPuC,EAAKoD,KAAKmC,KAIZ,IAAIjD,EAAU,CACZkD,OAAQ,GACRC,KArBc,CAAC,CAAC,QAAS,OAAO,OAAO,OAAO,UAAU,SAAS,OAAQ,OAsBzExF,KAAMD,GAGRoF,EAAIjD,KA1BU,gBALK,GA+BS,IAC5BiD,EAAIM,UAAUpD,GACd8C,EAAIO,KAAK,wBASL,iBAOA,kBAAC,EAAD,CAAa5J,WAAYE,KAAK8D,MAAM0C,WAAa,KACjD,4BACItG,UAAU,oCACV0I,QAAS,IAAI5I,KAAKmD,UAAU,WAFhC,sBAMA,4BACIjD,UAAU,oCACV0I,QAAS,IAAI5I,KAAKmD,UAAU,UAFhC,iBAOA,4BACIjD,UAAU,oCACV0I,QAAS,IAAI5I,KAAKmD,UAAU,UAFhC,mBASJ,kBAAC,IAAD,CAAMwG,UAAW,CAAC,QAAW,uBACzB,yBAAKC,MAAO,CAAC,QAAW,OAAQ,YAAa,OAAQ,kBAAmB,kBACtE,yBAAK1J,UAAU,QACf,kBAAC,IAAD,CAAS0I,QAAS,IAAIN,EAAa,QAAnC,OACA,kBAAC,IAAD,CAAQM,QAAS,IAAIN,EAAa,UAAlC,SACA,kBAAC,IAAD,CAAQM,QAAS,IAAIN,EAAa,UAAlC,YAIN,kBAAC,IAAD,CAAMqB,UAAW,CAAC,QAAW,OAAQzJ,UAAU,iBAC7C,kBAAC,IAAD,CAAOqI,QAASA,EAASzI,WAAYE,KAAK8D,MAAM0C,aAElD,kBAAC,IAAD,CACIgC,MAAOxI,KAAK8D,MAAMR,OAAS,sBAAwB,qBACnDuG,QAAS7J,KAAK8D,MAAMR,OACpBwG,KAAM9J,KAAKyF,aACXsE,SAAU,IAAI/J,KAAKuG,aAAa,UAChCyD,OAAQ,CACN,kBAAC,IAAD,CAASpB,QAAS,IAAI5I,KAAKuG,aAAa,WAAxC,UAGA,kBAAC,IAAD,CAAQnD,KAAK,UAAU6G,SAAYjK,KAAK8D,MAAMG,QAAS2E,QAAS5I,KAAKyF,cAClEzF,KAAK8D,MAAM4B,WAAa,aAAe,UAMtC,kBAACwE,EAAA,EAAD,CACAjK,GAAG,SACHC,UAAU,OACViK,IAAMC,GAAQpK,KAAKiF,YAAcmF,GAChC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACC,kBAACN,EAAA,EAAKO,MAAN,eACE,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,SACLoI,YAAY,SACZC,SAAUzD,GACd,mDACCpH,KAAK8D,MAAMjC,WAMpB,kBAACwI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,IAAE,GACR,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,OACLoI,YAAY,mBACZC,SAAUzD,GACf,gCAAS5E,MAMb,kBAAC8H,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,WACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,KACLoI,YAAY,mBACZC,SAAUzD,GACV,oDACCpH,KAAK8D,MAAMiD,aAOzB,kBAACmD,EAAA,EAAKM,MAAN,CAAYM,UAAU,WACb,kBAACZ,EAAA,EAAKO,MAAN,gBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,UACLuI,KAAK,IACLH,YAAY,UACZC,SAAUzD,KAId,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,QAClB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,OACLmI,GAAG,WACHI,KAAK,IACLH,YAAY,OACZC,SAAUzD,OAS7B,kBAAC,IAAD,CACIoB,MAAOxI,KAAK8D,MAAMI,UAAY,iBAAmB,kBACjD2F,QAAS7J,KAAK8D,MAAMI,UACpB4F,KAAM,IAAI9J,KAAKyD,SAAS,SACxBsG,SAAU,IAAI/J,KAAKuG,aAAa,SAChCyD,OAAQ,CACN,kBAAC,IAAD,CAASpB,QAAS,IAAI5I,KAAKuG,aAAa,UAAxC,UAGA,kBAAC,IAAD,CAAQnD,KAAK,UAAU6G,SAAYjK,KAAK8D,MAAMG,QAAS2E,QAAS,IAAI5I,KAAKyD,SAAS,UAC/EzD,KAAK8D,MAAMI,UAAY,WAAa,cAKnClE,KAAK8D,MAAMI,UACX,kBAACgG,EAAA,EAAD,CACAjK,GAAG,SACHC,UAAU,OACViK,IAAMC,GAAQpK,KAAKiF,YAAcmF,GAChC,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACJ,kBAACN,EAAA,EAAKO,MAAN,eACO,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,SACLwI,aAAgBhL,KAAK8D,MAAMC,KAAKpD,OAChCkK,SAAUzD,GACd,mDACCpH,KAAK8D,MAAMjC,WAMpB,kBAACwI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,OACLwI,aAAgBhL,KAAK8D,MAAMC,KAAKxC,KAChCsJ,SAAUzD,GACV,oDAEHpH,KAAK8D,MAAM4B,WAAa,gCAASlD,GAAiBxC,KAAK8D,MAAMiD,YAMnE,kBAACuD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,WACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,KACLwI,aAAgBhL,KAAK8D,MAAMC,KAAKvC,GAChCqJ,SAAUzD,GACV,oDACCpH,KAAK8D,MAAMiD,aAKxB,kBAACsD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLwI,aAAgBhL,KAAK8D,MAAMC,KAAK3C,KAChCyJ,SAAUzD,MAGb,kBAACkD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLwI,aAAgBhL,KAAK8D,MAAMC,KAAK1C,KAChCwJ,SAAUzD,OAMlB,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,WACb,kBAACZ,EAAA,EAAKO,MAAN,gBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,UACLuI,KAAK,IACLC,aAAgBhL,KAAK8D,MAAMC,KAAKzC,QAChCuJ,SAAUzD,KAId,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,QAClB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,OACLmI,GAAG,WACHI,KAAK,IACLC,aAAgBhL,KAAK8D,MAAMC,KAAKC,KAChC6G,SAAUzD,MAOnB,MAGV,kBAAC,IAAD,CACIoB,MAAOxI,KAAK8D,MAAMI,UAAY,iBAAmB,kBACjD2F,QAAS7J,KAAK8D,MAAMP,MACpBuG,KAAM,IAAI9J,KAAKyD,SAAS,SACxBsG,SAAU,IAAI/J,KAAKuG,aAAa,SAChCyD,OAAQ,CACN,kBAAC,IAAD,CAASpB,QAAS,IAAI5I,KAAKuG,aAAa,UAAxC,UAGA,kBAAC,IAAD,CAAQnD,KAAK,UAAU6G,SAAYjK,KAAK8D,MAAMG,QAAS2E,QAAS,IAAI5I,KAAKyD,SAAS,UAC/EzD,KAAK8D,MAAMI,UAAY,aAAe,cAMrC,kBAACgG,EAAA,EAAD,CACAjK,GAAG,SACHC,UAAU,OACViK,IAAMC,GAAQpK,KAAKiF,YAAcmF,GAChC,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,eACC,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,SACLoI,YAAY,SACZC,SAAUzD,GACd,mDACCpH,KAAK8D,MAAMjC,WAMpB,kBAACwI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,IAAE,GACR,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,OACLoI,YAAY,mBACZC,SAAUzD,GACf,oDAEEpH,KAAK8D,MAAMiD,YAQjB,kBAACuD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,WACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,KACLoI,YAAY,mBACZC,SAAUzD,GACV,oDACCpH,KAAK8D,MAAMiD,aAKxB,kBAACsD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLoI,YAAY,OACZC,SAAUzD,MAGb,kBAACkD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLoI,YAAY,OACZC,SAAUzD,OAMlB,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,WACb,kBAACZ,EAAA,EAAKO,MAAN,gBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,UACLuI,KAAK,IACLH,YAAY,UACZC,SAAUzD,KAId,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,QAClB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,OACLmI,GAAG,WACHI,KAAK,IACLH,YAAY,OACZC,SAAUzD,OAQ7B,kBAAC,IAAD,CACIoB,MAAOxI,KAAK8D,MAAMK,UAAY,iBAAmB,kBACjD0F,QAAS7J,KAAK8D,MAAMK,UACpB2F,KAAM,IAAI9J,KAAKyD,SAAS,SACxBsG,SAAU,IAAI/J,KAAKuG,aAAa,SAChCyD,OAAQ,CACN,kBAAC,IAAD,CAASpB,QAAS,IAAI5I,KAAKuG,aAAa,UAAxC,UAGA,kBAAC,IAAD,CAAQnD,KAAK,UAAU6G,SAAYjK,KAAK8D,MAAMG,QAAS2E,QAAS,IAAI5I,KAAKyD,SAAS,UAC/EzD,KAAK8D,MAAMK,UAAY,WAAa,cAMvC,kBAAC+F,EAAA,EAAD,CACAjK,GAAG,SACHC,UAAU,OACViK,IAAMC,GAAQpK,KAAKiF,YAAcmF,GAChC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,YACnB,kBAACZ,EAAA,EAAKO,MAAN,iBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAtH,KAAK,OACLZ,KAAK,UACLwI,aAAgBhL,KAAK8D,MAAMC,KAAK7C,QAChC2J,SAAUzD,MAGb,kBAACkD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACJ,kBAACN,EAAA,EAAKO,MAAN,eACO,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,SACLwI,aAAgBhL,KAAK8D,MAAMC,KAAKpD,OAChCkK,SAAUzD,GACd,mDACCpH,KAAK8D,MAAMjC,WAMpB,kBAACwI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,IAAE,GACR,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,OACLwI,aAAgBhL,KAAK8D,MAAMC,KAAKxC,KAChCsJ,SAAUzD,GACV,oDACHpH,KAAK8D,MAAMiD,YAKjB,kBAACuD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,WACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,KACLwI,aAAgBhL,KAAK8D,MAAMC,KAAKvC,GAChCqJ,SAAUzD,GACV,oDACCpH,KAAK8D,MAAMiD,aAKxB,kBAACsD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLwI,aAAgBhL,KAAK8D,MAAMC,KAAK3C,KAChCyJ,SAAUzD,MAGb,kBAACkD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLwI,aAAgBhL,KAAK8D,MAAMC,KAAK1C,KAChCwJ,SAAUzD,OAMlB,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,WACb,kBAACZ,EAAA,EAAKO,MAAN,gBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,UACLuI,KAAK,IACLC,aAAgBhL,KAAK8D,MAAMC,KAAKzC,QAChCuJ,SAAUzD,KAId,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,QAClB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,OACLmI,GAAG,WACHI,KAAK,IACLC,aAAgBhL,KAAK8D,MAAMC,KAAKC,KAChC6G,SAAUzD,OAUzB,kBAAC,IAAD,CACIoB,MAAOxI,KAAK8D,MAAMK,UAAY,iBAAmB,kBACjD0F,QAAS7J,KAAK8D,MAAMN,MACpBsG,KAAM,IAAI9J,KAAKyD,SAAS,SACxBsG,SAAU,IAAI/J,KAAKuG,aAAa,SAChCyD,OAAQ,CACN,kBAAC,IAAD,CAASpB,QAAS,IAAI5I,KAAKuG,aAAa,UAAxC,UAGA,kBAAC,IAAD,CAAQnD,KAAK,UAAU6G,SAAYjK,KAAK8D,MAAMG,QAAS2E,QAAS,IAAI5I,KAAKyD,SAAS,UAC/EzD,KAAK8D,MAAMK,UAAY,aAAe,cAMzC,kBAAC+F,EAAA,EAAD,CACAjK,GAAG,SACQC,UAAU,OACViK,IAAMC,GAAQpK,KAAKiF,YAAcmF,GAC3C,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,YACnB,kBAACZ,EAAA,EAAKO,MAAN,iBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAtH,KAAK,OACLZ,KAAK,UACLoI,YAAY,WACZC,SAAUzD,MAGb,kBAACkD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACJ,kBAACN,EAAA,EAAKO,MAAN,eACO,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,SACLoI,YAAY,SACZC,SAAUzD,GACd,mDACCpH,KAAK8D,MAAMjC,WAMpB,kBAACwI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,IAAE,GACR,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,OACLoI,YAAY,mBACZC,SAAUzD,GACf,oDACApH,KAAK8D,MAAMiD,YAKf,kBAACuD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,KACK,kBAACN,EAAA,EAAKO,MAAN,WACA,kBAACP,EAAA,EAAKQ,QAAN,CACIC,GAAG,SACHnI,KAAK,KACLoI,YAAY,mBACZC,SAAUzD,GACV,oDACCpH,KAAK8D,MAAMiD,aAKxB,kBAACsD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLoI,YAAY,OACZC,SAAUzD,MAGb,kBAACkD,EAAA,EAAD,CAAKC,IAAE,GACP,kBAACL,EAAA,EAAKM,MAAN,CAAYM,UAAU,QACnB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAO,UAAQ,EACR7H,KAAK,OACLZ,KAAK,OACLoI,YAAY,OACZC,SAAUzD,OAMlB,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,WACb,kBAACZ,EAAA,EAAKO,MAAN,gBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,UACLuI,KAAK,IACLH,YAAY,UACZC,SAAUzD,KAId,kBAAC8C,EAAA,EAAKM,MAAN,CAAYM,UAAU,QAClB,kBAACZ,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,OACLmI,GAAG,WACHI,KAAK,IACLH,YAAY,OACZC,SAAUzD,UAkBtB8D,kBAJUpH,IAAD,CACtBQ,OAAQR,EAAM5B,KAAKO,MAAMP,KAAK2D,MAGjBqF,CAAyBtI,G,wBCv1ChCuI,EAAYC,IAAZD,QAER,MAAME,UAAgBxI,IAAMrD,UAC1BC,cACEE,QADW,KAWb2L,YAAelI,IACA,WAATA,GACFpD,KAAKN,MAAM6L,QAAQpE,KAAK,2BAX1BnH,KAAK8D,MAAQ,CACX0C,UAAY,GACZgF,WAAa,GACbC,YAAc,GACdC,UAAY,GACZlL,QAAS,EACTiG,SAAU,GASdkF,OAAOtE,GACLxD,IAAQD,MAAM,YAKhBe,oBAEEJ,IAAIuB,IAAI,gCAAgC9F,KAAKN,MAAM4E,OAAO,IAAKtE,KAAKN,MAAMO,IAAIwE,KAAMC,IAClF9E,QAAQC,IAAI6E,EAAIX,KAAKA,MACrB,IAAIyC,EAAY,GACZkF,EAAY,GACZD,EAAc,GACdD,EAAa,GACjB9G,EAAIX,KAAKA,KAAK5D,IAAI,CAACC,EAAQC,KAGzB,MAAM2G,EAAO,CACX1G,IAAMD,EACNwF,IAAMzF,EAAMyF,IACZtF,SAAWH,EAAMG,SAAWH,EAAMG,SAAS2G,UAAU,EAAE,IAAM,IAC7D1G,OAASJ,EAAMI,OACfC,QAAUL,EAAMK,QAAQyG,UAAU,EAAE,IACpCjH,GAAKG,EAAMwL,UAAYxL,EAAMwL,UAAY,IACzClL,OAASN,EAAMM,OAASN,EAAMM,OAAOgC,UAAY,IAAMtC,EAAMM,OAAOiC,SAAW,IAC/EhC,OAASP,EAAMO,OAASP,EAAMO,OAAOmG,kBAAoB,IACzDlG,UAAYR,EAAMQ,UAAUsG,UAAU,EAAE,IACxCrG,QAAUgL,WAAWzL,EAAMS,SAASiL,QAAQ,MAE7B,QAAd1L,EAAMI,QACPkL,EAAUvE,KAAKH,GAEA,UAAd5G,EAAMI,QACPiL,EAAYtE,KAAKH,GAEF,SAAd5G,EAAMI,QACPgL,EAAWrE,KAAKH,GAElBR,EAAUW,KAAKH,KAEjBhH,KAAKqD,SAAS,CACZmD,UAAaA,EACZkF,UAAYA,EACXD,YAAcA,EACbD,WAAYA,EACX/E,SAAU,MAIpB1G,SACE,MACMgM,EAAe,CAAC3D,EAAQhF,KAC5B,MAAMW,EAAOqE,SACNrE,EAAKpD,cACLoD,EAAKrD,OACA,cAAT0C,EACDW,EAAKvD,OAAS,SAGJ,eAAT4C,IACDW,EAAKvD,OAAS,QAEhB+D,IAAIC,KAAK,sBAAsB4D,EAAOvC,IAAM9B,GAAMU,KAAMC,IAEtD,GADA9E,QAAQC,IAAI6E,GACH,aAANtB,EAAkB,CACnB,MAAM4I,EAAWhM,KAAK8D,MACtBkI,EAASR,WAAWS,OAAO7D,EAAO9H,IAAK,GACvC0L,EAASP,YAAYtE,KAAKzC,EAAIX,KAAKA,MAErC,GAAS,cAANX,EAAmB,CACpB,MAAM4I,EAAWhM,KAAK8D,MACtBkI,EAASP,YAAYQ,OAAO7D,EAAO9H,IAAK,GACxC0L,EAASN,UAAUvE,KAAKzC,EAAIX,KAAKA,MAGnCL,IAAakB,QAAQ,CAACf,QAAU,YAChC2B,WAAW,KAETxF,KAAK2E,qBACL,OAEDE,MAAOC,IACRlF,QAAQC,IAAIiF,GACZpB,IAAaE,MAAM,aAIjByE,EAAgBD,IACpB7D,IACGuB,IAAI,wBAA0BsC,EAAOvC,KACrCpB,KAAMC,IACL9E,QAAQC,IAAI6E,GACZ1E,KAAK2E,oBACLjB,IAAakB,QAAQ,CAAEf,QAAS,oBAChC2B,WAAW,OAER,QAEJX,MAAOC,IACNpB,IAAaE,MAAM,CAAEC,QAAS,wBAI9BqI,EAAkB,CACtB,CACE1D,MAAO,SACPC,UAAW,SACXnI,IAAK,SACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACEI,MAAM,0BACNK,UAAW,IAAMkD,EAAa3D,EAAQ,aACtC2B,SAAU/J,KAAK2L,OACf7C,OAAO,MACPC,WAAW,MAEX,kBAACmB,EAAA,EAAKiC,MAAN,CAAY/I,KAAK,eAKzB,CACEoF,MAAO,YACPC,UAAW,WACXnI,IAAK,YAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,WACPC,UAAW,UACXnI,IAAK,WAEP,CACEkI,MAAO,KACPC,UAAW,KACXnI,IAAK,MAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,aACPC,UAAW,YACXnI,IAAK,aAEP,CACEkI,MAAO,UACPC,UAAW,UACXnI,IAAK,WAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,SACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACEI,MAAM,8CACNK,UAAW,IAAMR,EAAaD,GAC9B2B,SAAU/J,KAAK2L,OACf7C,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CAAQC,QAAM,GAAd,aASJoD,EAAe,CACnB,CACE5D,MAAO,SACPC,UAAW,SACXnI,IAAK,SACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACEI,MAAM,eACNK,UAAW,IAAMkD,EAAa3D,EAAQ,cACtC2B,SAAU/J,KAAK2L,OACf7C,OAAO,MACPC,WAAW,MAEX,kBAACmB,EAAA,EAAKiC,MAAN,CAAY/I,KAAK,eAMzB,CACEoF,MAAO,YACPC,UAAW,WACXnI,IAAK,YAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,WACPC,UAAW,UACXnI,IAAK,WAEP,CACEkI,MAAO,KACPC,UAAW,KACXnI,IAAK,MAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,aACPC,UAAW,YACXnI,IAAK,aAEP,CACEkI,MAAO,UACPC,UAAW,UACXnI,IAAK,WAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,SACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACEI,MAAM,8CACNK,UAAW,IAAMR,EAAaD,GAC9B2B,SAAU/J,KAAK2L,OACf7C,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CAAQC,QAAM,GAAd,aASJqD,EAAa,CAEjB,CACE7D,MAAO,YACPC,UAAW,WACXnI,IAAK,YAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,WACPC,UAAW,UACXnI,IAAK,WAEP,CACEkI,MAAO,KACPC,UAAW,KACXnI,IAAK,MAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,UAEP,CACEkI,MAAO,aACPC,UAAW,YACXnI,IAAK,aAEP,CACEkI,MAAO,UACPC,UAAW,UACXnI,IAAK,WAEP,CACEkI,MAAO,SACPC,UAAW,SACXnI,IAAK,SACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACEI,MAAM,8CACNK,UAAW,IAAMR,EAAaD,GAC9B2B,SAAU/J,KAAK2L,OACf7C,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CAAQC,QAAM,GAAd,aAqDV,OACE,kBAAC,IAAD,CAAMC,KAAM,QAAQC,SAAYlJ,KAAK8D,MAAM2C,SACzC,yBAAKvG,UAAU,QACb,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,qBACb,wCAEF,yBAAKA,UAAU,0BACb,4BACIA,UAAU,oCACV0I,QApDE,KAChB,MAKMO,EAAM,IAAIC,IAHI,WAFP,KACA,MAMbD,EAAIE,YAAY,IAgBhB,IAAItF,EAAO,GACL/D,KAAK8D,MAAM0C,UAAUrG,IAAI,CAAC0G,EAAKxG,KAC7B,MAAMiJ,EAAI,CAACzC,EAAItG,SAAUsG,EAAIrG,OAASqG,EAAIpG,QAAUoG,EAAI5G,GAAI4G,EAAInG,OAASmG,EAAIlG,OAASkG,EAAIjG,UAAYiG,EAAIhG,SAC1GkD,EAAKoD,KAAKmC,KAIlB,IAAIjD,EAAU,CACZkD,OAAQ,GACRC,KAtBc,CACd,CACE,YACA,SACA,WACA,KACA,SACA,SACA,aACA,YAcFxF,KAAMD,GAGRoF,EAAIjD,KA3BU,QALK,GAgCS,IAC5BiD,EAAIM,UAAUpD,GACd8C,EAAIO,KAAK,cAWC,iBAMA,kBAAC,IAAD,CAAa5J,WAAYE,KAAK8D,MAAM0C,WAAa,KACjD,4BACEtG,UAAU,oCACV0I,QAAS5I,KAAKN,MAAM4M,qBAFtB,kBAME,4BACIpM,UAAU,oCACV0I,QAAS5I,KAAKN,MAAM6M,aAFxB,eAQV,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAMC,iBAAiB,IAAI3B,SAnWhB,QAqWT,kBAACM,EAAD,CAASsB,IAAI,QAAQnM,IAAI,KACvB,kBAAC,IAAD,CAAOJ,UAAU,mBAAmBJ,WAAYE,KAAK8D,MAAM0H,WAAYjD,QAAS2D,KAGnF,kBAACf,EAAD,CAASsB,IAAI,MAAMnM,IAAI,KACpB,kBAAC,IAAD,CAAOJ,UAAU,mBAAmBJ,WAAYE,KAAK8D,MAAM0C,UAAW+B,QAAS8D,KAEjF,kBAAClB,EAAD,CAASsB,IAAI,SAASnM,IAAI,KACxB,kBAAC,IAAD,CAAOJ,UAAU,mBAAmBJ,WAAYE,KAAK8D,MAAM2H,YAAalD,QAAS6D,KAEnF,kBAACjB,EAAD,CAASsB,IAAI,OAAOnM,IAAI,KACtB,kBAAC,IAAD,CAAOJ,UAAU,mBAAmBJ,WAAYE,KAAK8D,MAAM4H,UAAWnD,QAAS8D,UAe9EnB,kBAJSpH,IAAK,CAC3BQ,OAAQR,EAAM5B,KAAKO,MAAMP,KAAK2D,MAGjBqF,CAAyBG,G,sHCtbhCqB,GAAWC,IAAXD,OACAvB,GAAYC,IAAZD,QA+9BOyB,OAz9BIlN,IAAW,MAAD,EAEHmN,mBAAS,IAFN,mBAEpBC,EAFoB,KAEdC,EAFc,KAGrBzI,EAAS0I,YAAalJ,GAAUA,EAAM5B,KAAKO,MAAMP,KAAK2D,KAHjC,EAKWgH,oBAAS,GALpB,gCAMWA,mBAAS,KANpB,gCAOSA,mBAAS,CAC3CrK,KAAO,GACP8B,OAAS,GACT2I,UAAY,MAVa,gCAYeJ,mBAAS,KAZxB,mBAYLK,GAZK,aAaeL,oBAAS,GAbxB,mBAaLM,GAbK,aAcaN,mBAAS,CAC7CrK,KAAO,GACP8B,OAASA,EACT8I,SAAW,GACXC,SAAW,KAlBY,mBAcNC,GAdM,aAoBGT,oBAAS,GApBZ,mBAoBpBU,EApBoB,KAoBXC,EApBW,OAqBSX,oBAAS,GArBlB,mBAqBpBY,EArBoB,KAqBRC,EArBQ,OAsBCb,mBAAS,YAtBV,gCAuBGA,oBAAS,IAvBZ,mBAuBpBc,EAvBoB,KAuBXC,GAvBW,QAyBaf,mBAAS,CAC/CrK,KAAO,GACP8B,OAASA,IA3BgB,qBAyBpBuJ,GAzBoB,MAyBNC,GAzBM,SA6BejB,oBAAS,GA7BxB,qCA8BKA,mBAAS,CACvCO,SAAU,GACVvH,IAAK,GACLrD,KAAM,GACN7B,OAAQ,GACRiB,QAAS,GACTyL,SAAU,GACV/I,OAASA,KArCgB,qCAuCeuI,mBAAS,KAvCxB,qBAuCpBkB,GAvCoB,MAuCLC,GAvCK,SAwCanB,oBAAS,GAxCtB,qBAwCpBoB,GAxCoB,MAwCNC,GAxCM,SAyCSrB,mBAAS,CAC3CO,SAAU,GACVvH,IAAK,GACLrD,KAAM,GACN7B,OAAQ,GACRiB,QAAS,GACTyL,SAAU,KA/Ce,qBAyCpBc,GAzCoB,MAyCRC,GAzCQ,SAiDKvB,mBAAS,UAjDd,qBAiDpBwB,GAjDoB,MAiDVC,GAjDU,SAkDGzB,mBAAS,IAlDZ,qBAkDpBnL,GAlDoB,MAkDX6M,GAlDW,SAmDK1B,mBAAS,IAnDd,qBAmDpB2B,GAnDoB,MAmDVC,GAnDU,SAoDD5B,mBAAS,IApDR,qBAoDpBzM,GApDoB,MAoDbsO,GApDa,SAqDG7B,mBAAS,IArDZ,qBAqDpB8B,GArDoB,MAqDXC,GArDW,SAsDe/B,oBAAS,GAtDxB,qBAsDpBgC,GAtDoB,MAsDLC,GAtDK,SAuDWjC,mBAAS,IAvDpB,qCAwDeA,mBAAS,KAxDxB,qCAyD2BA,oBAAS,IAzDpC,qBAgGrBkC,IAhGqB,YAgGC,CAC1B,CACEvG,MAAO,OACPC,UAAW,OACXnI,IAAK,KAGP,CACEkI,MA5CF,6BACE,kBAACwG,GAAA,EAAD,CACApF,MAAO,CAAC,iBAAkB,UACxBhB,QAAS,KAGDkG,IADc,IAAlBD,OAKN,0BAAMjF,MAAO,CAACqF,YAAc,QAA5B,UAECJ,IACC,yBAAKjF,MAAO,CAACsF,WAAa,SACxB,2BACEtE,YAAY,SACZxK,MAAOA,GACPyK,SAAWxD,IACT,IAAI8H,EACJT,GAASrH,EAAEG,OAAOpH,OACY,IAA1BiH,EAAEG,OAAOpH,MAAM4F,QAAmC,KAAnBqB,EAAEG,OAAOpH,OAC1C+O,EAAerC,EAAKsC,OAAQC,GAC1BA,EAAK7M,KACF8M,cACAC,SAASlI,EAAEG,OAAOpH,MAAMkP,gBAE7BV,GAAWO,IAEXP,GAAW9B,QAiBrBrE,UAAW,OACXnI,IAAK,IACLP,OAASmG,GACP,kBAAC,KAAD,CACEsJ,eAAgB,CAAEC,gBAAiB,UAAWC,QAAS,GACvDC,YAAa,CAACvP,IACdwP,YAAU,EACVC,gBAAiB3J,EAAOA,EAAK4J,WAAa,MAIhD,CACEtH,MAAO,SACPC,UAAW,SACXnI,IAAK,KAEP,CACEkI,MAAO,WACPC,UAAW,WACXnI,IAAK,KAEP,CACEkI,MAAO,gBACPC,UAAW,eACXnI,IAAK,IACLyP,eAAgB,CAAC,UAAW,UAC5BC,OAAQ,CAACC,EAAGC,IAAMD,EAAEE,aAAeD,EAAEC,cAEvC,CACE3H,MAAO,YACPC,UAAW,WACXnI,IAAK,IACLyP,eAAgB,CAAC,UAAW,UAC5BC,OAAQ,CAACC,EAAGC,IAAMD,EAAEG,SAAWF,EAAEE,UAGnC,CACE5H,MAAO,OACPC,UAAW,OACXnI,IAAK,IACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACElI,UAAU,oBACV0I,QAAS,KACPyH,GAAYjI,EAAOvC,OAHvB,SAWN,CACE2C,MAAO,SACPC,UAAW,SACXnI,IAAK,IACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACUI,MAAM,qCACNK,UAAW,IAAIyH,GAAclI,EAAOvC,KACpCkE,SAAU,OACVjB,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CACE7I,UAAU,wBADZ,YAUhB,CACEsI,MAAO,WACPC,UAAW,WACXnI,IAAK,IACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACElI,UAAU,uBACV0I,QAAS,KACP2H,GAAgBnI,IAElBoI,KAAM,kBAACC,GAAA,EAAD,OALR,eAaFC,GAAerB,GAAUhI,IAE7BzH,QAAQC,IAAIwP,GACZzP,QAAQC,IAAIwH,GACC,aAATgI,GACFhI,EAAEC,UACF8G,GAAc,2BAAKD,IAAN,IAAkBf,SAAU/F,EAAEG,OAAOmJ,MAAM,OAG9C,aAATtB,GACDlB,GAAW,GAAD,OAAIkB,IAAUhI,EACxB+G,GAAc,eAAKD,MAGN,WAATkB,EACc,WAAbhB,IACDzO,QAAQC,IAAI,oBACZsO,GAAW,GAAD,OAAIkB,IAAUhI,EACxB+G,GAAc,eAAKD,KACnByC,GAAcvJ,KAEdzH,QAAQC,IAAI,kBACZ0E,IAAIuB,IAAJ,uBAAwBuB,IAAK5C,KAAMC,IACjCyJ,GAAW,GAAD,OAAIkB,IAAU3K,EAAIX,KAAKA,KACjCqK,GAAc,eAAKD,KACnByC,GAAcvJ,OAIlB8G,GAAW,GAAD,OAAIkB,IAAUhI,EAAEG,OAAOpH,MACjCgO,GAAc,eAAKD,MAGvBvO,QAAQC,IAAIsO,KAsCR0C,GAAY,uCAAG,8BAAAZ,EAAA,6DACfa,EAAW,GACXC,EAAW,GAFI,SAGbxM,IAAIuB,IAAI,4BAA8BxB,EAAS,IAAM5E,EAAMO,IAAIwE,KAAMC,IACzE9E,QAAQC,IAAI6E,EAAIX,KAAKA,MACrBW,EAAIX,KAAKA,KAAK5D,IAAI,CAACkP,EAAMhP,KACvB,QAAkB2Q,GAAf3B,EAAK1O,OAAoB,CAC1B,MAAMoD,EAAO,CACX8B,IAAMwJ,EAAKxJ,IACXvF,IAAMD,EACN+M,SAAWiC,EAAKjC,SAChBC,SAAWgC,EAAKhC,SAChB7K,KAAO6M,EAAK7M,MAEduO,EAAS5J,KAAKpD,OAGA,UAAbsL,EAAKjM,OACN0N,EAAW,IACNA,EADM,2BAGJzB,GAHI,IAIPjM,KAAO,OACP9C,IAAK+O,EAAKxJ,IACVlF,OAAwB,OAAhB0O,EAAK1O,OAAkB0O,EAAK1O,OAAOmG,kBAAoB,IAC/DqJ,aAAcc,GAAW5B,EAAKc,cAC9BC,SAAUa,GAAW5B,EAAKe,kBA1BjB,cAgCnBrD,EAAQ+D,GACR5D,EAAiB6D,GACjBnD,IAAW,GACXkD,EAAW,GAnCQ,UAoCbvM,IAAIuB,IAAJ,8BAA+BxB,IAAUG,KAAMC,IACnDA,EAAIX,KAAKA,KAAK5D,IAAKkP,IACjByB,EAAW,IACNA,EADM,2BAGJzB,GAHI,IAIP/O,IAAK+O,EAAKxJ,IACVnF,OACkB,OAAhB2O,EAAK3O,OACD,CACEmF,IAAK,GACLqL,WAAY,GACZC,WAAY,IACZ7M,OAAQ,IACRkE,MAAO,IACP7F,SAAU,IACVD,UAAW,GACX0O,IAAK,EACLC,MAAO,GACPC,aAAc,CACZ,CACEC,MAAO,MAGXC,QAAS,GACTC,QAAS,GACTjO,MAAO,GACPuC,aAAc,GACd2L,QAAS,CAAC,MAEZrC,EAAK3O,cAlEA,QAuEnB6N,GAAWuC,GAvEQ,4CAAH,qDA0EZa,GAAY,uCAAG,4BAAA1B,EAAA,sDAEQ,KAAxB9B,GAAWd,SACZ3J,IAAakO,QAAQ,CACnB/N,QAAU,+BAGY,KAAvBsK,GAAWvM,QACZ8B,IAAakO,QAAQ,CACnB/N,QAAU,8BAGa,KAAxBsK,GAAWf,SACZ1J,IAAakO,QAAQ,CACnB/N,QAAU,+BAGW,KAAtBsK,GAAWxN,OACZ+C,IAAakO,QAAQ,CACnB/N,QAAU,6BAGS,KAApBsK,GAAW3L,KACZkB,IAAakO,QAAQ,CACnB/N,QAAU,4BAIZ2J,GAAW,IACPqE,EAAc,IAAIC,UACVC,IAAI,WAAY5D,GAAWf,UACvCyE,EAAYE,IAAI,OAAQ5D,GAAW3L,MACnCqP,EAAYE,IAAI,SAAU5D,GAAWxN,QACrCkR,EAAYE,IAAI,UAAW5D,GAAWvM,SACtCiQ,EAAYE,IAAI,WAAY5D,GAAWd,UACvCwE,EAAYE,IAAI,SAAUzN,GAC1B1E,QAAQC,IAAIgS,GACdtN,IACGC,KAAK,mCAAoCqN,EAAa,CACrDG,QAAS,CAAE,eAAgB,yBAE5BvN,MAAK,SAAUwN,GACdvO,IAAakB,QAAQ,CAAEf,QAAS,uBAChCgN,QAEDhM,OAAM,SAAUoN,GACfvO,IAAaE,MAAM,CAAEC,QAAS,+BAElC2B,WAAW,KACTkI,GAAc,GACdF,GAAW,IACV,MAnDgB,2CAAH,qDAyDZ+C,GAAe,uCAAG,WAAOnI,GAAP,SAAA6H,EAAA,sDACtB5N,OAAO6P,KAAK9J,EAAOgF,UADG,2CAAH,sDAIfkD,GAAa,uCAAG,WAAO6B,GAAP,SAAAlC,EAAA,sEACd1L,IACHuB,IADG,2BACqBqM,IACxB1N,KAAMC,IACL9E,QAAQC,IAAI6E,GACZhB,IAAakB,QAAQ,CAAEf,QAAS,mCAChCgN,OAEDhM,MAAOH,IACNhB,IAAaE,MAAM,CAAEC,QAAS,gCATd,2CAAH,sDAabwM,GAAW,uCAAG,WAAO8B,GAAP,SAAAlC,EAAA,6DAChB3B,GAAY,QACZZ,GAAc,GAFE,SAGVnJ,IAAIuB,IAAJ,yBAA0BqM,IAAS1N,KAAMwN,IAC7C7D,GAAc6D,EAASlO,KAAKA,MAC5BnE,QAAQC,IAAIsO,MALE,2CAAH,sDASVhG,GAAU,uCAAG,8BAAA8H,EAAA,yDACa,KAAxB9B,GAAWd,SADA,gBAEZ3J,IAAakO,QAAQ,CACnB/N,QAAU,+BAHA,0BAMY,KAAvBsK,GAAWvM,QANA,gBAOZ8B,IAAakO,QAAQ,CACnB/N,QAAU,8BARA,0BAWa,KAAxBsK,GAAWf,SAXA,iBAYZ1J,IAAakO,QAAQ,CACnB/N,QAAU,+BAbA,2BAgBW,KAAtBsK,GAAWxN,OAhBA,iBAiBZ+C,IAAakO,QAAQ,CACnB/N,QAAU,6BAlBA,2BAqBS,KAApBsK,GAAW3L,KArBA,iBAsBZkB,IAAakO,QAAQ,CACnB/N,QAAU,2BAvBA,+BA2Bd2J,GAAW,IACP4E,EAAW,IAAIN,UACVC,IAAI,WAAY5D,GAAWf,UACpCgF,EAASL,IAAI,SAAUzN,GACvBC,IACGC,KADH,yBAC0B2J,GAAWtI,KAAOuM,EAAS,CACjDJ,QAAS,CAAE,eAAgB,yBAC1BvN,KAAKC,IACN9E,QAAQC,IAAI6E,KAER2N,EAAgB,CACpBxM,IAAKsI,GAAWtI,IAChBrD,KAAM2L,GAAW3L,KACjB7B,OAAQwN,GAAWxN,OACnBiB,QAASuM,GAAWvM,QACpByL,SAAUc,GAAWd,UA1CX,UA4CR9I,IACHC,KADG,yBACoB2J,GAAWtI,KAAOwM,GACzC5N,MAAK,SAAUwN,GAEdrS,QAAQC,IAAIoS,GACZvO,IAAakB,QAAQ,CAAEf,QAAS,qBAEhCgN,QAEDhM,OAAM,SAAUoN,GACdrS,QAAQC,IAAIoS,GACbvO,IAAaE,MAAM,CAAEC,QAAS,+BAvDpB,QAyDd2B,WAAW,KACTgI,GAAW,GACXE,GAAc,IACb,KA5DW,4CAAH,qDAkEX4E,GAAqB,CAEzB,CACE9J,MAAO,gBACPC,UAAW,OACXnI,IAAK,KAIP,CACEkI,MAAO,OACPC,UAAW,OACXnI,IAAK,IACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACElI,UAAU,oBACV0I,QAAS,KACP2J,GAAanK,KAHjB,SAWN,CACEI,MAAO,SACPC,UAAW,SACXnI,IAAK,IACLP,OAAQ,CAAC2I,EAAGN,IAER,kBAAC,IAAD,CACUI,MAAM,qCACNK,UAAW,IAAI2J,GAAepK,EAAOvC,KACrCkE,SAAU,OACVjB,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CACE7I,UAAU,wBADZ,aAwBZsS,GAAc,uCAAG,WAAOL,GAAP,SAAAlC,EAAA,sEACf1L,IACHuB,IADG,oCAC8BqM,IACjC1N,KAAMC,IACLhB,IAAakB,QAAQ,CAAEf,QAAS,mCAChC4O,OAED5N,MAAOH,IACNhB,IAAaE,MAAM,CAAEC,QAAS,gCARb,2CAAH,sDAYd0O,GAAiBnK,IAErBkG,GAAY,QACZJ,IAAgB,GAChBJ,GAAgB1F,IAMZqK,GAAc,KAClB,IAAIC,EAAe,GACnBnO,IAAIuB,IAAJ,yCAA0CxB,IAAUG,KAAMC,IACxD+J,GAAY/J,EAAIX,KAAKA,MACrBnE,QAAQC,IAAI6E,GACZA,EAAIX,KAAKA,KAAK5D,IAAI,CAACkP,EAAMhP,KACvB,MAAM0D,EAAO,CACXvB,KAAO6M,EAAK7M,KACZlC,IAAMD,EACNwF,IAAMwJ,EAAKxJ,IACXvB,OAAQA,GAEVoO,EAAavL,KAAKpD,KAEpBiK,GAAiB0E,MAMfC,GAAc,KACO,KAAtB9E,GAAarL,KACdkB,IAAakO,QAAQ,CACnB/N,QAAU,4BAIZ2J,GAAW,GACX5N,QAAQC,IAAIgO,IACdtJ,IACGC,KAAK,6BAA+BqJ,IACpCpJ,MAAK,SAAUwN,GACdrS,QAAQC,IAAIoS,GACZQ,KACA/O,IAAakB,QAAQ,CAAEf,QAAS,yBAIjCgB,OAAM,SAAUoN,GACfvO,IAAaE,MAAM,CAAEC,QAAS,eAElC2B,WAAW,KACT0I,IAAgB,GAChBV,GAAW,IACV,OAICoF,GAAe,KACM,KAAtB/E,GAAarL,KACdkB,IAAakO,QAAQ,CACnB/N,QAAU,4BAIZ2J,GAAW,GACX5N,QAAQC,IAAIgO,IACdtJ,IACGC,KAAK,2BAA6BqJ,GAAahI,IAAMgI,IACrDpJ,MAAK,SAAUwN,GACdrS,QAAQC,IAAIoS,GACZQ,KACA/O,IAAakB,QAAQ,CAAEf,QAAS,wBAIjCgB,OAAM,SAAUoN,GACfvO,IAAaE,MAAM,CAAEC,QAAS,eAElC2B,WAAW,KACT0I,IAAgB,GAChBV,GAAW,GACX5N,QAAQC,IAAIkO,KACX,OAsDC8E,GAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAMJ9B,GAAcgC,GACF,IAAIhQ,KAAKgQ,GACRC,iBAEbtC,GAAa,uCAAG,WAAOuC,GAAP,SAAAlD,EAAA,sEACd1L,IAAIuB,IAAJ,uBAAwBqN,IAAY1O,KAAMC,IAC9C,IAAIX,EAAgC,OAAzBW,EAAIX,KAAKA,KAAKrD,OAAkBgE,EAAIX,KAAKA,KAAKrD,OAAOmF,IAAM,IACtEuI,GAAc,2BAAKD,IAAN,IAAkBvM,QAASmC,OAHtB,2CAAH,sDAUnBqP,oBAAU,KACRvC,KACA4B,MACC,IAEH,MA8IMY,GACJ,kBAAC,IAAD,KACE,kBAAC,IAAKC,KAAN,CACE1K,QAAS,KACPwF,GAAc,CACZhB,SAAU,GACVvH,IAAK,GACLrD,KAAM,GACN7B,OAAQ,GACR0M,SAAU,KAGZK,GAAc,GACdY,GAAY,WAEdhO,IAAI,KACJ,+CAMAiT,GACJ,yBAAKrT,UAAU,iCACb,kBAAC,IAAD,CAAUsT,QAASH,GAAMI,QAAS,CAAC,UACjC,kBAAC,IAAD,CAAQvT,UAAU,oBAAoB0I,QAASvB,GAAKA,EAAEqM,kBAAtD,UACS,kBAACC,GAAA,EAAD,SAMTC,GACJ,yBAAK1T,UAAU,iCACR,kBAAC,IAAD,CACC0I,QAAS,IAAIsF,IAAgB,IAD9B,iBAQH2F,GACJ,yBAAK3T,UAAU,iCACT,kBAAC,IAAD,CACE0I,QAAS,KACP0E,EAAgB,CACdF,SAAU,GACV5K,KAAM,GACN8B,OAASA,EACT+I,SAAU,KAGZF,GAAiB,GACjBmB,GAAY,YAVhB,WA15BmB,GA66BSzB,mBAAS0G,IA76BlB,qBA66BpBO,GA76BoB,MA66BRC,GA76BQ,MAw7B3B,OACE,kBAAC,IAAD,CAAM9K,KAAO,QAAQC,SAAUyE,GAE7B,kBAAC,IAAD,CACInB,iBAAiB,IACjBwH,mBAAoBF,GACpBjJ,SAhBWvK,IACjBV,QAAQC,IAAIS,GACF,GAAPA,EACDyT,GAAcR,IACA,GAAPjT,GACPyT,GAAcH,IACL,GAAPtT,GACFyT,GAAcF,KAUV3T,UAAU,0BAEV,kBAAC,GAAD,CAASuM,IAAI,WAAWnM,IAAI,KAhOlC,kBAAC,IAAD,CACEkI,MAAK,WAAM6F,GAAN,aACLxE,QAAS4D,EACT1D,SAAU,IAAM2D,GAAc,GAC9B1D,OAAQ,CACN,kBAAC,IAAD,CAAQ1J,IAAI,OAAOsI,QAAS,IAAM8E,GAAc,IAAhD,UAGA,kBAAC,IAAD,CACEpN,IAAI,SACJ8C,KAAK,UACL6Q,SAAS,SACThK,SAAUsD,EACV3E,QAAsB,WAAbyF,GAAwBsD,GAAexJ,IALlD,YAWF,kBAAC,IAAD,iBACM0K,GADN,CAEErQ,KAAK,QACL0R,OAAQ,CACN,CACE1R,KAAM,CAAC,QACPpC,MAAO+N,GAAW3L,MAEpB,CACEA,KAAM,CAAC,YACPpC,MAAO+N,GAAWd,UAEpB,CACE7K,KAAM,CAAC,UACPpC,MACe,SAAbiO,GAAsBF,GAAWxN,OAAOkF,IAAMsI,GAAWxN,QAE7D,CAEE6B,KAAM,CAAC,gBAKX,kBAAC,IAAK8Q,KAAN,CACEhT,IAAI,OACJ6T,MAAM,OACN3R,KAAK,OACL4R,MAAO,CACL,CACEnJ,UAAU,EACVpH,QAAS,wBAIb,kBAAC,IAAD,CAAOgH,SAAU6F,GAAY,QAAStQ,MAAO+N,GAAW3L,QAG1D,kBAAC,IAAK8Q,KAAN,CACEhT,IAAI,SACJ6T,MAAM,SACN3R,KAAK,SACL4R,MAAO,CACL,CACEnJ,UAAU,EACVpH,QAAS,yBAIb,kBAAC,IAAD,CACEwQ,YAAU,EACVzK,MAAO,CAAE0K,MAAO,KAChB1J,YAAY,kBACZ2J,iBAAiB,WACjB1J,SAAU6F,GAAY,UACtB8D,aAAc,CAACC,EAAO5S,IACpBA,EAAO6S,SAASpF,cAAc1H,QAAQ6M,EAAMnF,gBAAkB,GAG/D5N,GAAQvB,IAAI,CAACkP,EAAMhP,IAClB,kBAACqM,GAAD,CAAQpM,IAAKD,EAAOD,MAAOiP,EAAKxJ,KAC7BwJ,EAAKvI,sBAKd,kBAAC,IAAKwM,KAAN,CACEhT,IAAI,WACJ6T,MAAM,WACN3R,KAAK,WACL4R,MAAO,CACL,CACEnJ,UAAU,EACVpH,QAAS,2BAIb,kBAAC,IAAD,CACEwQ,YAAU,EACVzK,MAAO,CAAE0K,MAAO,KAChB1J,YAAY,oBACZ2J,iBAAiB,WACjB1J,SAAU6F,GAAY,YACtB8D,aAAc,CAACC,EAAO5S,IACpBA,EAAO6S,SAASpF,cAAc1H,QAAQ6M,EAAMnF,gBAAkB,GAG/Dd,GAASrO,IAAI,CAACkP,EAAMhP,IACnB,kBAACqM,GAAD,CAAQpM,IAAKD,EAAOD,MAAOiP,EAAK7M,MAC7B6M,EAAK7M,SAOZ,kBAAC,IAAK8Q,KAAN,CACEhT,IAAI,WACJ6T,MAAM,WACN3R,KAAK,WACL4R,MAAO,CACL,CACEnJ,UAAU,EACVpH,QAAS,6BAIb,kBAAC,IAAD,CACET,KAAK,OACLyH,SAAU6F,GAAY,iBAsGxB,kBAAC,IAAD,CACAxQ,UAAU,mBACVJ,WACqB,IAAnB6O,GAAQ3I,QAA0B,KAAV5F,GAAe0M,EAAO6B,GAEhDpG,QAASwG,MAEX,kBAAC,GAAD,CAAStC,IAAI,WAAWnM,IAAI,KA7Tf,MACnB,yBAAC,IAAD,CACEkI,MAAK,WAAM6F,GAAN,aACLxE,QAASoE,GACTlE,SAAU,IAAMmE,IAAgB,GAChClE,OAAQ,CACN,kBAAC,IAAD,CAAQ1J,IAAI,OAAOsI,QAAS,IAAMsF,IAAgB,IAAlD,UAGA,kBAAC,IAAD,CACE5N,IAAI,SACJ8C,KAAK,UACL6Q,SAAS,SACThK,SAAUsD,EACV3E,QAAsB,WAAbyF,GAAwBsE,GAAcC,IALjD,YAWF,kBAAC,IAAD,iBACMC,GADN,CAEErQ,KAAK,QACL0R,OAAQ,CACN,CACE1R,KAAM,CAAC,QACPpC,MAAOyN,GAAarL,SAKxB,kBAAC,IAAK8Q,KAAN,CACEhT,IAAI,OACJ6T,MAAM,OACN3R,KAAK,OACL4R,MAAO,CACL,CACEnJ,UAAU,EACVpH,QAAS,wBAIb,kBAAC,IAAD,CAAOgH,UAzJSwE,EAyJgB,OAzJNhI,IAChCzH,QAAQC,IAAI,UACZD,QAAQC,IAAIwP,GACZzP,QAAQC,IAAIwH,GAERwG,GAAa,GAAD,OAAIwB,IAAUhI,EAAEG,OAAOpH,MACnC0N,GAAgB,eAAKD,KAEzBjO,QAAQC,IAAIgO,MAiJmCzN,MAAOyN,GAAarL,UAzJ7C6M,OA6absF,GACF,kBAAC,IAAD,CAAOzU,UAAU,mBAAmBJ,WAAYiO,GAAexF,QAAS+J,SC1+B9E,MAAM/S,WAAoBC,YAC/BC,YAAYC,GACVC,MAAMD,GACNE,QAAQC,IAAI,gBAAiBH,EAAMI,YAGrCC,SACE,OACE,6BACE,2BAAOE,GAAG,MAAMC,UAAU,UACxB,+BACE,4BACE,qCACA,uCACA,oCACA,sCAIJ,+BACGF,KAAKN,MAAMI,WAAWK,IAAI,CAACyU,EAAGvU,IAG3B,wBAAIC,IAAKD,GACP,4BAAKuU,EAAEC,OACP,4BAAKD,EAAEtT,SACP,4BAAKsT,EAAEE,OACP,4BAAKF,EAAEvT,UAOjB,kBAAC,IAAD,CACEnB,UAAU,8CACVY,MAAM,MACNC,SAAS,QACTC,MAAM,QACNC,WAAW,sBAON1B,UCiWAwV,OAxYArV,IAAW,MAAD,EACSmN,oBAAS,GADlB,mBACdhD,EADc,KACLmL,EADK,OAEGnI,mBAAS,IAFZ,mBAEd9I,EAFc,KAERkR,EAFQ,OAGSpI,oBAAS,GAHlB,mBAGd5I,EAHc,KAGLiR,EAHK,KAIf5Q,EAAS0I,YAAalJ,GAAUA,EAAM5B,KAAKO,MAAMP,KAAK2D,KAJvC,EAKagH,mBAAS,IALtB,mBAKdrG,EALc,KAKH2O,EALG,OAMWtI,oBAAS,GANpB,mBAMduI,EANc,KAMJC,EANI,OAOOxI,mBAAS,IAPhB,mBAOdzE,EAPc,KAONkN,EAPM,OAQazI,oBAAS,GARtB,mBAQd0I,EARc,KAQHC,EARG,KASfC,EAAUC,iBAAO,MATF,EAUS7I,oBAAS,GAVlB,mBAUdc,EAVc,KAULC,EAVK,KAWrB,IAAInM,EAAY,GAEhB,MAAMkU,EAAa,KACf/V,QAAQC,IAAIH,GACZ6E,IAAIuB,IAAI,yBAAyBxB,EAAS,IAAM5E,EAAMO,IAAIwE,KAAMC,IAC5D9E,QAAQC,IAAI6E,GACZ,IAAIoQ,EAAQ,GACZpQ,EAAIX,KAAKA,KAAK5D,IAAI,CAACC,EAAQC,KACvB,MAAM2G,EAAO,CACTnB,IAAMzF,EAAMyF,IACZvF,IAAMD,EACNyU,MAAQ1U,EAAM0U,MACdxT,QAAUlB,EAAMkB,QAChBuT,MAAQzU,EAAMyU,MAAQzU,EAAMyU,MAAQ,IACpCxT,KAAOjB,EAAMiB,KAAOjB,EAAMiB,KAAK6F,UAAU,EAAE,IAAM,KAErD4N,EAAM3N,KAAKH,KAEfmO,EAAaL,GACblH,GAAW,MAGnBwF,oBAAU,KACNuC,KACD,IAEH,MAAMlS,EAAY4D,IACdA,EAAEC,UACF5D,IAAaC,UACb,IAAIiS,GAAQ,EAkBZ,GAjBkB,KAAdnU,GACAmU,GAAQ,EACRlS,IAAaE,MAAM,CAAEC,QAAS,+DAEd,KAAjBE,EAAKzC,cAAmC0P,IAAjBjN,EAAKzC,SAC7BsU,GAAQ,EACRlS,IAAakO,QAAQ,CACnB/N,QAAS,8BAGK,KAAfE,EAAK+Q,YAA+B9D,IAAfjN,EAAK+Q,QACzBc,GAAQ,EACRlS,IAAakO,QAAQ,CACnB/N,QAAS,2BAIZ+R,EAAM,CACLV,GAAW,GACX,IAAIW,EAAS9R,EACb8R,EAAOvR,OAASA,EAChBuR,EAAOjU,QAAUlC,EAAMO,GACpBmV,EACC7Q,IAAIC,KAAK,eAAiB4D,EAAOvC,IAAMgQ,GAAQpR,KAAMC,IACjD9E,QAAQC,IAAI6E,GACZiR,IACAjS,IAAakB,QAAQ,CAACf,QAAU,mBACjCgB,MAAOC,IACNpB,IAAaE,MAAM,CAACC,QAAU,cAC/BY,KAAK,KACJM,IAASC,YAAYyQ,EAAQK,SAAS5Q,QACtCmQ,GAAY,GACZG,GAAa,GACbP,EAAQ,IACRK,EAAU,IACVJ,GAAW,KAGf3Q,IAAIC,KAAK,gBAAiBqR,GAAQpR,KAAMC,IACpC9E,QAAQC,IAAI6E,GACZiR,IACAjS,IAAakB,QAAQ,CAACf,QAAU,oBACjCgB,MAAOC,IACNpB,IAAaE,MAAM,CAACC,QAAU,cAC/BY,KAAK,KACJM,IAASC,YAAYyQ,EAAQK,SAAS5Q,QACtC8P,GAAW,GACXC,EAAQ,IACRK,EAAU,IACVJ,GAAW,OAOrB3O,EAAgBc,IAElBgO,GAAY,GACZG,GAAa,GACbR,GAAW,GACXjQ,IAASC,YAAYyQ,EAAQK,SAAS5Q,SAwBpC6Q,GAAe,CACjB,CACIvN,MAAO,QACPC,UAAW,QACXnI,IAAK,KAET,CACIkI,MAAO,OACPC,UAAW,OACXnI,IAAK,KAET,CACIkI,MAAO,UACPC,UAAW,UACXnI,IAAK,KAET,CACIkI,MAAO,OACPC,UAAW,QACXnI,IAAK,KAET,CACIkI,MAAO,OACPC,UAAW,OACXnI,IAAK,IACLP,OAAO,CAAC2I,EAAEN,IAEF,kBAAC,IAAD,CAAQQ,QAAW,IAnCbR,KAClBiN,GAAY,GACZG,GAAa,GACbF,EAAUlN,GACV6M,EAAQ7M,GACRxI,QAAQC,IAAIuI,IA8BuBD,CAAWC,IAAlC,SAMZ,CACII,MAAO,SACPC,UAAW,SACXnI,IAAK,IACLP,OAAO,CAAC2I,EAAEN,IAEJ,kBAAC,IAAD,CACEI,MAAM,iCACNK,UAAW,IA9DNT,KACjB7D,IAAIuB,IAAI,iBAAmBsC,EAAOvC,KAAKpB,KAAMC,IAC7C9E,QAAQC,IAAI6E,GACViR,IACAjS,IAAakB,QAAQ,CAACf,QAAU,qBAE/BgB,MAAOC,IAERpB,IAAaE,MAAM,CAACC,QAAU,wBAsDHwE,CAAaD,GAC9BU,OAAO,MACPC,WAAW,MAEX,kBAAC,IAAD,CAAQC,QAAM,GAAd,aAUV5B,GAAcC,IAChBA,EAAEC,UADkB,QAEuBD,EAAEG,OAArChF,EAFY,EAEZA,KAAUpC,GAFE,EAENH,GAFM,EAEFG,OAFE,EAEMqH,cAC1B,IAAIC,EAAU3D,EACd,GAAa,UAATvB,EAAkB,CAClBf,EAAY,GACZ,IAAIkG,EAAYvH,EAChB,GAAiB,IAAbuH,GAAmBA,EAAUC,QAAQ,KAAO,EAC9CnG,EAAY,eACZ7B,QAAQC,IAAI4B,OACP,CACL,IAAIoG,EAASF,EAAUG,MAAM,KAAK,GAC9BC,EAAWJ,EAAUG,MAAM,KAAK,GAChCE,EAAQL,EAAUG,MAAM,KAAK,GACjClI,QAAQC,IAAImI,GACE,IAAVH,GAAgBI,MAAMJ,IACxBpG,EAAY,eACZ7B,QAAQC,IAAI4B,IACiB,GAApByG,SAASL,KAAcA,EAAS,MAG3B,IAAZE,GAAkBE,MAAMF,IAAaG,SAASH,GAAY,IAC5DtG,EAAY,eACZ7B,QAAQC,IAAI4B,IACmB,GAAtByG,SAASH,KAAgBA,EAAW,MAGlC,IAATC,GAAeC,MAAMD,IACvBvG,EAAY,eACZ7B,QAAQC,IAAI4B,IACgB,GAAnByG,SAASF,KAAaA,EAAQ,MAEzCL,EAAYE,EAAS,IAAME,EAAU,IAAMC,EAE7CN,EAAQlF,GAAQmF,OAGhBD,EAAQlF,GAAQpC,EAGpB6U,EAAQvN,GACR9H,QAAQC,IAAIkE,IAsChB,OACE,kBAAC,IAAD,CAAMmF,SAAUyE,EAAS1E,KAAO,SAC9B,6BACA,yBAAK/I,UAAU,sCACT,yBAAKA,UAAU,qBACb,sCAEF,yBAAKA,UAAU,0BACT,4BACIA,UAAU,oCACV0I,QA7CF,KAEhB,GADAhJ,QAAQC,IAAI2G,EAAUR,QACC,GAApBQ,EAAUR,OACXtC,IAAakO,QAAQ,CAAC/N,QAAU,0CAC7B,CACH,MAAMmS,EAAO,KACP/M,EAAO,KACPgN,EAAc,WAEdC,EAAa,GACb/M,EAAM,IAAIC,IAAM6M,EAAaD,EAAM/M,GAEzCE,EAAIE,YAAY,IAEhB,MAAMb,EAAQ,QACRwJ,EAAU,CAAC,CAAC,QAAQ,UAAW,OAAQ,SAE7C,IAAIjO,EAAO,GACXyC,EAAUrG,IAAI,CAAC0G,EAAKxG,KAClB,MAAMiJ,EAAK,CAACzC,EAAIgO,MAAOhO,EAAIvF,QAASuF,EAAIiO,MAAQjO,EAAIxF,MACpD0C,EAAKoD,KAAKmC,KAGZ,IAAIjD,EAAU,CACZkD,OAAQ,GACRC,KAAMwI,EACNhO,KAAMD,GAGRoF,EAAIjD,KAAKsC,EAAO0N,EAAY,IAC5B/M,EAAIM,UAAUpD,GACd8C,EAAIO,KAAK,gBAYG,iBAMA,kBAAC,GAAD,CAAa5J,WAAY0G,GAAa,KACtC,4BACItG,UAAU,oCACV0I,QAAS,IAAKoM,GAAW,IAF7B,eAQR,kBAAC,IAAD,CACI9U,UAAU,QAEV,kBAAC,IAAD,CAAOA,UAAU,mBAAmBJ,WAAY0G,EAAY+B,QAASwN,MAEzE,kBAAC,IAAD,CACIvN,MAAM,WACNqB,QAASA,EACTC,KAAMrG,EACNsG,SAAUxD,EACVyD,OAAQ,CACJ,kBAAC,IAAD,CAASpB,QAASrC,GAAlB,UAGA,kBAAC,IAAD,CAAQnD,KAAK,UAAU6G,SAAYhG,EAAS2E,QAASnF,GAArD,YAKJ,kBAACyG,EAAA,EAAD,CACCjK,GAAG,SACHC,UAAU,OACViK,IAAMsL,EACNvV,UAAU,gBACN,kBAACgK,EAAA,EAAKM,MAAN,CAAYM,UAAU,YACnB,kBAACZ,EAAA,EAAKO,MAAN,cACA,kBAACP,EAAA,EAAKQ,QAAN,CACAtH,KAAK,OACLZ,KAAK,QACLoI,YAAc,WAEdC,SAAUzD,MAEd,kBAAC8C,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,gBACA,kBAACP,EAAA,EAAKQ,QAAN,CACClI,KAAK,UACLY,KAAK,OACLwH,YAAc,UACdC,SAAUzD,MAEf,kBAAC8C,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,QACLmI,GAAG,WACHI,KAAK,IACLH,YAAc,OACdC,SAAUzD,MAEd,kBAAC8C,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,OACLY,KAAK,OACLyH,SAAUzD,QAItB,kBAAC,IAAD,CACIoB,MAAM,YACNqB,QAAS0L,EACTzL,KAAMrG,EACNsG,SAAUxD,EACVyD,OAAQ,CACJ,kBAAC,IAAD,CAASpB,QAASrC,GAAlB,UAGA,kBAAC,IAAD,CAAQnD,KAAK,UAAU6G,SAAYhG,EAAS2E,QAASnF,GAArD,UAKJ,kBAACyG,EAAA,EAAD,CACEjK,GAAG,SACHC,UAAU,OACViK,IAAMsL,EACNvV,UAAU,gBACN,kBAACgK,EAAA,EAAKM,MAAN,CAAYM,UAAU,YACpB,kBAACZ,EAAA,EAAKO,MAAN,iBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAtH,KAAK,OACLZ,KAAK,QACLwI,aAAgB5C,EAAOyM,MACvBhK,SAAUzD,MAEd,kBAAC8C,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,gBACA,kBAACP,EAAA,EAAKQ,QAAN,CACAlI,KAAK,UACLY,KAAK,OACL4H,aAAgB5C,EAAO9G,QACvBuJ,SAAUzD,MAEd,kBAAC8C,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CAAclI,KAAK,QAAQmI,GAAG,WAAWI,KAAK,IAAIC,aAAgB5C,EAAO0M,MAAOjK,SAAUzD,MAE9F,kBAAC8C,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,aACA,kBAACP,EAAA,EAAKQ,QAAN,CAAclI,KAAK,OAAOY,KAAK,OAAO4H,aAAgB5C,EAAO/G,KAAMwJ,SAAUzD,W,MCjY7F+D,GAAYC,IAAZD,QAuMOgL,UApMf,SAAqBzW,GACnB,IAAIuS,EAAW,GACXlO,EAAO,KAFe,QAGJ8I,mBAAS,IAHL,mBAGnBuJ,EAHmB,KAGdC,EAHc,OAIIxJ,oBAAS,GAJb,mBAInBc,EAJmB,KAIVC,EAJU,QAKXZ,YAAalJ,GAAUA,EAAM5B,KAAKO,MAAMP,KAAK2D,KAC9BgH,sBANJ,mBAMnB2E,EANmB,KAMV8E,EANU,OAOAzJ,qBAPA,mBAOnB0J,EAPmB,KAOZC,EAPY,OAQN3J,qBARM,mBAQnB4J,EARmB,KAQfC,EARe,OASJ7J,mBAAS,IATL,mBASnB8J,EATmB,KASdC,EATc,OAUI/J,qBAVJ,mBAUnBgK,EAVmB,KAUVC,EAVU,OAWAjK,qBAXA,mBAWnB0E,EAXmB,KAWZwF,EAXY,OAYElK,qBAZF,mBAYnBmK,EAZmB,KAYXC,EAZW,QAaFpK,qBAbE,qBAanBqK,GAbmB,MAabC,GAba,SAcctK,mBAAS,IAdvB,qBAcnBuK,GAdmB,MAcLC,GAdK,MAe1BjE,oBAAU,KAAM,4CACd,sBAAAnD,EAAA,sEACQ1L,IAAIuB,IAAI,iBAAmBpG,EAAM4X,SAASxT,OAAOW,KAAMC,IAC3DuN,EAAWvN,EAAIX,KAAKA,KACpBnE,QAAQC,IAAIoS,GACZvD,KACA2I,GAAgBpF,KALpB,4CADc,sBASdrS,QAAQC,IAAIH,EAAM4X,SAASxT,OATZ,WAAD,wBAUdyT,IACC,IAEH,MAAM7I,GAAW,KACf,MAAM8I,EAAMvF,EAASvP,UAAY,IAAMuP,EAAStP,SAE1C8U,EAAMxF,EAASZ,MACrBtN,EAAOkO,EACP,MAAMyF,EAAMzF,EAAS0F,gBACfC,EAAM3F,EAAS4F,kBACfC,EAAO7F,EAAST,QAAQrR,IAAI,CAACC,EAAOC,IAEtC,yBAAKH,UAAU,mBAAmBI,IAAKD,GACrC,uBAAGuJ,MAAO,CAAE,YAAa,SAAWxJ,EAAMgD,MAC1C,2BAAIhD,EAAM2X,QACV,2BAAI3X,EAAM4X,MACV,2BAAI5X,EAAM0D,OACV,2BAAI1D,EAAM6X,SACV,2BAAI7X,EAAM8X,WAIVC,EAAMlG,EAASR,QAAQtR,IAAI,CAACC,EAAOC,IAErC,yBAAKH,UAAU,mBAAmBI,IAAKD,GACrC,2BACGD,EAAMgY,YADT,MACyBhY,EAAMqR,WAK/B4G,EAAOpG,EAASlM,aAAa5F,IAAI,CAACC,EAAOC,IAE3C,yBAAKH,UAAU,mBAAmBI,IAAKD,GACrC,2BACGD,EAAMkY,UADT,MACuBlY,EAAM2F,gBAK7BwS,EAAMtG,EAASzO,MAAMrD,IAAI,CAACC,EAAOC,IAEnC,yBAAKH,UAAU,mBAAmBI,IAAKD,GACrC,2BACGD,EAAMoY,UADT,MACuBpY,EAAMoD,SAKnC6S,EAAOoB,GACPnB,EAAWwB,GACXpB,EAAMgB,GACNP,GAAQS,GACRpB,EAASgB,GACTT,EAASsB,GACTpB,EAAUsB,GACVzB,EAAWqB,GACXvB,EAAO3E,EAASpM,KAChB+H,GAAW,IAWb,OACE,oCACE,kBAAC,IAAD,CAAM3E,KAAK,QAAQC,SAAUyE,GAC7B,kBAAC,IAAD,CAAMnB,iBAAiB,KACrB,kBAAC,GAAD,CAASC,IAAI,YAAYnM,IAAI,IAAIsJ,MAAO,CAAE8F,QAAS,QACjD,yBAAKxP,UAAU,yBACb,6BACE,4BAAKqW,IAEP,yBAAKrW,UAAU,cACb,uCAGJ,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEuY,MACE,kBAAC,IAAD,CACErV,KAAK,OACLwF,QAAS,IACPlJ,EAAM6L,QAAQpE,KAAK,gBAAiBiQ,KAHxC,QASF5O,MAAM,kBACNtI,UAAU,gBAEV,kBAACmK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,IAAE,GACD,yBACEmO,OAAO,MACPpE,MAAM,MACNqE,IAAKvC,EACLwC,IAAI,eAId,kBAACvO,EAAA,EAAD,CAAKnK,UAAU,QACb,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,mBAAhB,SACR,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,oBAAoBqW,KAE9C,kBAAClM,EAAA,EAAD,CAAKnK,UAAU,QACb,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,mBAAhB,kBACR,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,oBAAoBqR,KAE9C,kBAAClH,EAAA,EAAD,CAAKnK,UAAU,QACb,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,mBAAhB,iBACR,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,oBAAoB8W,KAE9C,kBAAC3M,EAAA,EAAD,CAAKnK,UAAU,QACb,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,mBAAhB,YACR,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,oBAAoB2W,KAE9C,kBAACxM,EAAA,EAAD,CAAKnK,UAAU,QACb,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,mBAAhB,YACR,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,oBAAoBsR,MAIhD,kBAAC,IAAD,CAAMhJ,MAAM,sBAAsBtI,UAAU,gBAC1C,kBAACmK,EAAA,EAAD,CAAKnK,UAAU,QACb,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,mBAAhB,OACR,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,oBAAoBuW,KAE9C,kBAACpM,EAAA,EAAD,CAAKnK,UAAU,QACb,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,mBAAhB,SACR,kBAACoK,EAAA,EAAD,CAAKC,IAAE,GAAC,0BAAMrK,UAAU,oBAAoBgX,SAMpD,kBAAC,GAAD,CAASzK,IAAI,gBAAgBnM,IAAI,KAC/B,kBAAC,EAAD,CAAeL,GAAM0W,KAGvB,kBAAC,GAAD,CAASlK,IAAI,QAAQnM,IAAI,KACvB,kBAAC,GAAD,CAAQL,GAAM0W,KAEhB,kBAAC,GAAD,CAASlK,IAAI,WAAWnM,IAAI,KAGxB,kBAAC,GAAD,CACAL,GAAM0W,EACNjV,QAAShC,EAAM4X,SAASxT,MAAMpC,QAC9B4C,OAAQ5E,EAAM4X,SAASxT,MAAMQ,OAC7B6O,SAAUzT,EAAM4X,SAASxT,MAAM7D,MAInC,kBAAC,GAAD,CAASwM,IAAI,QAAQnM,IAAI,KACvB,kBAAC,EAAD,CAAOgM,oBA/Fa,KAC1B5M,EAAM6L,QAAQpE,KAAK,2BA8FoCoF,YApG9BlF,IACzBzH,QAAQC,IAAIH,GACZA,EAAM6L,QAAQpE,KAAK,kBAkGuElH,GAAM0W,KAG5F,kBAAC,GAAD,CAASlK,IAAI,eAAenM,IAAI","file":"static/js/50.7897d8d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nexport class ExportExcel extends Component {\n  constructor(props) {\n    super(props);\n    console.log('data in excel', props.dataSource);\n  }\n  \n  render() {\n    console.log(this.props)\n    return (\n      <div>\n        <table id=\"matter\" className=\"d-none\">\n          <thead>\n            <tr>\n              <th>S.No</th>\n              <th>Last Seen</th>\n              <th>Status</th>\n              <th>Due Date</th>\n              <th>ID</th>\n              <th>Client</th>\n              <th>Matter</th>\n              <th>Issue Date</th>\n              <th>Balance</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.props.dataSource.map((value, index) => {\n              return (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{value.lastSeen}</td>\n                  <td>{value.status}</td>\n                  <th>{value.dueDate}</th>\n                  <th>{ value.id }</th>\n                  <th>{value.client}</th>\n                  <th>{value.matter}</th>\n                  <th>{value.issueDate}</th>\n                  <th>{value.balance}</th>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <ReactHTMLTableToExcel\n          className=\"btn btn-outline-primary btn-sm excel-button\"\n          table=\"matter\"\n          filename=\"Bills\"\n          sheet=\"Sheet\"\n          buttonText=\"Export to Excel\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExportExcel;\n","import React, { Component } from 'react';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nexport class ExportExcel extends Component {\n  constructor(props) {\n    super(props);\n    console.log('data in excel', props.dataSource);\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <div>\n        <table id=\"matter\" className=\"d-none\">\n          <thead>\n            <tr>\n              <th>S.No</th>\n              <th>Hours</th>\n              <th>type</th>\n              <th>Time</th>\n              <th>Date</th>\n              <th>Subject</th>\n              <th>Matter</th>\n              <th>from</th>\n              <th>to</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.props.dataSource.map((value, index) => {\n              return (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{value.addTime}</td>\n                  <td>{value.logType}</td>\n                  <td>{value.time}</td>\n                  <td>{value.date}</td>\n                  <td>{ value.subject }</td>\n                  <td>{value.matter}</td>\n                  <td>{value.from}</td>\n                  <td>{value.to}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <ReactHTMLTableToExcel\n          className=\"btn btn-outline-primary btn-sm excel-button\"\n          table=\"matter\"\n          filename=\"Communications\"\n          sheet=\"Sheet\"\n          buttonText=\"Export to Excel\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExportExcel;\n","  import React from 'react'\n  import { Table , Button, Modal , Card, notification, Space, Popconfirm, Spin } from 'antd'\n  import { useSelector, connect } from 'react-redux';\n  import jsPDF from \"jspdf\";\n  import \"jspdf-autotable\";\n  import api from '../../../../../resources/api'\n  import { Form, Col, Row } from 'react-bootstrap'\n  import ReactDOM from 'react-dom'\n  import ExportExcel from './ExportCommunications'\n  \n  \n  let timeError = \"\" ;\n  let matters = {};\n  let communication = {};\n  let contact = {}\n  let option = null\n  let optns = null\n  let matterkey = null\n  let fromKey = null\n  let toKey = null\n  const user = JSON.parse(window.localStorage.getItem('Case.user'))\n  const name = user.token.user.firstName + \" \" + user.token.user.lastName;\n  console.log(user.token.user)\n  \n  class Communication extends React.Component{\n      constructor(props){\n          super(props)\n          this.state = {\n              phone : false,\n              email : false,\n              secure : false,\n              tableData : [],\n              data : {\n                  subject : \"\",\n                  body : \"\",\n                  to : \"\",\n                  from : user.token.user._id\n              },\n              loading : true,\n              emailData : [],\n              phoneData : [],\n              completeData : [],\n              tableData : [],\n              editEmail : false,\n              editPhone : false,\n              editSecure : false,\n              disable : false\n          \n          }\n      }\n      convertTime = (serverdate) => {\n        var date = new Date(serverdate);\n        // convert to utc time\n        var toutc = date.toUTCString();\n        //convert to local time\n        var locdat = new Date(toutc + ' UTC');\n        return locdat;\n      };\n      componentDidMount() {\n       \n       api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n         matters = res\n              option = res.data.data.map((val, index)=>{\n                   return <option value = {val._id}>{val.matterDescription}</option>\n               })\n           }).then(()=>{\n               console.log(option)\n               this.setState({option : option})\n           })\n  \n        api.get('/contact/viewforuser/'+this.props.userId).then((res)=>{\n          contact = res\n            optns = res.data.data.map((value, index)=>{\n    \n                return <option id={index}>{value.firstName + \" \" + value.lastName}</option>\n               })\n         }).then(()=>{this.setState({contacts : optns})})\n      \n         api.get('/communication/viewforcontact/' + this.props.userId + '/' + this.props.id).then((res)=>{\n          communication = res.data.data;\n         console.log(communication)\n  \n          let emailData = [];\n          let phoneData = [];\n          let completeData = [];\n          \n          res.data.data.map((val, index) => {\n          \n            const temp = {\n              key: index,\n              logType: val.logType,\n              type: val.logType,\n              id: val._id,\n              addTime : val.addTime ? val.addTime : \"-\",\n              time: val.time ? val.time : '',\n              matterDesc: val.matter ? val.matter.matterDescription : '-',\n              matter : val.matter ? val.matter._id : \"\",\n              from: val.from ? val.from.firstName + \" \" + val.from.lastName  : '-',\n              fromId : val.from ? val.from._id : \"\",\n              to: val.to ? val.to.firstName + \" \" + val.to.lastName  : '-',\n              toId : val.to ? val.to._id : \"\",\n              subject: val.subject ? val.subject : '-',\n              body: val.body,\n              date: val.date ? val.date.substring(0,10) : \"-\"      \n            };\n            if (val.logType === 'email' || val.logType === \"secure\") {\n              emailData.push(temp);\n            }\n            if ( val.logType === \"secure\") {\n              temp.from = name\n              temp.type = \"secure\"\n              temp.logType = \"email\"\n              emailData.push(temp);\n            }\n            if (val.logType === 'phone') {\n              phoneData.push(temp);\n            }\n            \n            completeData.push(temp);\n          });\n          this.setState({\n            completeData: completeData,\n            phoneData: phoneData,\n            emailData: emailData,\n            tableData: completeData,\n            loading : false\n          });\n        });\n        /*\n        const time = window.localStorage.getItem('timer');\n        let hours = Math.floor(time / 3600);\n        let minutes = Math.floor(time / 60);\n        if (minutes >= 59) {\n          minutes = minutes % 60;\n        }\n    \n        //   const Seconds = time % 60;\n        const data = this.state.data;\n        data.time = hours + ':' + minutes;\n        this.setState({ data: data, touched: true });\n        console.log(this.state);\n        */\n  \n      }\n      showModal = (type) => {\n        if(type===\"secure\"){\n          this.setState({\n              secure : true,\n            });\n          }else\n          if(type===\"email\"){\n              this.setState({\n                  email : true,\n                });\n          }else\n          if(type===\"phone\"){\n              this.setState({\n                  phone : true,\n                });\n          }\n        \n        };\n      \n        handleOk = type => {    \n          notification.destroy()\n          if (timeError !== '') {\n            notification.error({ message: 'Invalid time,  Please enter time in the format : HH:MM:SS' });\n          }else\n          if(this.state.data.subject == \"\"){\n              notification.error({message : \"Please add a subject\"})\n          }else\n          if(this.state.data.body == \"\"){\n              notification.error({message : \"Please add a body\"})\n          }else{\n            this.setState({\n              disable : true\n            })\n             \n              if(this.state.editEmail || this.state.editPhone){\n  \n                let data = this.state.data\n                console.log(data)\n                \n                if(fromKey == null){\n                  data.from = data.fromId\n                }\n                if(toKey == null){\n                  data.to = data.toId\n                }\n              if(type === \"email\"){\n                data.logType = \"email\"\n                this.setState({email : false})\n              }else\n              if(type === \"phone\"){\n                data.logType = \"phone\"\n                this.setState({phone : false})\n              }\n              data.userId = this.props.userId;\n              console.log(data)\n              api\n                .post('/communication/edit/'+ this.state.data.id, data)\n                .then((res) => {\n                  console.log(res)\n                  this.componentDidMount()            \n                  this.setState({\n                    disable : false\n                    \n                  })\n                  notification.success({ message: 'Log Edited !' });\n                })\n                .catch((err) => {\n                  notification.error({ message: 'Failed' });\n                })\n                .then(() => {\n                  ReactDOM.findDOMNode(this.messageForm).reset()\n                  matterkey = null\n                  fromKey = null\n                  toKey = null\n                  \n                  this.setState({\n                    editPhone : false,\n                    editEmail: false,\n                    disable : false,\n                    data: {\n                      billable: true,\n                      nonBillable: false,\n                      date: '',\n  \n                      qty: '1.0',\n                      rate: '',\n                      invoice: 'Unbilled',\n                    },\n                  });\n                  \n                 \n                  setTimeout(() => {\n                    //window.location.reload();\n                  }, 1500)\n                });\n    \n  \n              }else{\n                let data = this.state.data\n              if(type === \"email\"){\n                data.logType = \"email\"\n                this.setState({email : false})\n              }else\n              if(type === \"phone\"){\n                data.logType = \"phone\"\n                this.setState({phone : false})\n              }\n              data.userId = this.props.userId;\n              console.log(data)\n              api\n                .post('/communication/create', data)\n                .then((res) => {\n                  console.log(res)\n                  this.setState({\n                    disable : false\n                  })\n                  this.componentDidMount()\n                  notification.success({ message: 'Log Added !' });\n                })\n                .catch((err) => {\n                  notification.error({ message: 'Failed' });\n                }).then(()=>{\n                  \n                  ReactDOM.findDOMNode(this.messageForm).reset()\n                })\n               \n    \n              }\n          }   \n        };\n  \n        handleSecure = () => {    \n          notification.destroy()\n          if(this.state.data.to == \"\"){\n            notification.error({message : \"Please add a contact to send message\"})\n          }else\n          if(this.state.data.subject == \"\"){\n              notification.error({message : \"Please add a subject\"})\n          }else\n          if(this.state.data.body == \"\"){\n              notification.error({message : \"Please add a body\"})\n          }else{\n            this.setState({\n              disable : true\n            })\n             \n              if(this.state.editSecure){\n  \n                let data = this.state.data\n                data.logType = \"secure\"\n                data.userId = this.props.userId;\n              console.log(data)\n              api\n                .post('/communication/edit/'+ this.state.data.id, data)\n                .then((res) => {\n                  console.log(res)\n                  this.componentDidMount()            \n                  this.setState({\n                    disable : false\n                    \n                  })\n                  notification.success({ message: 'Log Edited !' });\n                })\n                .catch((err) => {\n                  notification.error({ message: 'Failed' });\n                })\n                .then(() => {\n                  ReactDOM.findDOMNode(this.messageForm).reset()\n                  \n                  this.setState({\n                    editSecure : false,\n                    secure: false,\n                    disable : false,\n                    data: {\n                      billable: true,\n                      nonBillable: false,\n                      date: '',\n                      to : \"\",\n                      qty: '1.0',\n                      rate: '',\n                      invoice: 'Unbilled',\n                    },\n                  });\n                  \n                 \n                  setTimeout(() => {\n                    //window.location.reload();\n                  }, 1500)\n                });\n    \n  \n              }else{\n                let data = this.state.data\n                data.logType = \"secure\"\n                data.userId = this.props.userId;\n                data.time = new Date().getHours() + \":\" + new Date().getMinutes()\n                data.from = user.token.user._id\n                console.log(data)\n  \n                api.get(`/contact/view/${data.to}`).then((res)=>{\n                  console.log(res)\n                  let emailAddress = res.data.data.emailAddress.length != 0 ? res.data.data.emailAddress[0].emailAddress : \"\"\n                  let number = res.data.data.phone.length != 0 ? res.data.data.phone[0].phone : \"\"\n                  console.log(data)\n                  let email = {\n                    to: emailAddress,\n                    subject : data.subject,\n                    text : data.body,\n                    date  : new Date()\n  \n                  }\n                  let sms = {\n                    mobile : number,\n                    content : data.body\n                  }\n                  console.log(email)\n                  console.log(sms)\n                  if(number !== \"\"){\n                    api.post(`/communication/sendsms`, sms ).then((smsres)=>{\n                      console.log(smsres)\n                      notification.success({\n                        message : \"SMS Sent\"\n                      })\n                    \n                    }).catch((err)=>{\n                      console.log(err)\n                      notification.error({message : \"Failed to send the sms\"})\n                    })\n                  }\n  \n                  \n                  if(emailAddress !== \"\"){\n                    api.post(`/communication/sendemail`, email ).then((email)=>{\n                      console.log(email)\n                      notification.success({\n                        message : \"Email Sent\"\n                      })\n                      api\n                      .post('/communication/create', data)\n                      .then((res) => {\n                        console.log(res)              \n                        this.componentDidMount()\n                        notification.success({ message: 'Log Added !' });\n                      })\n                      .catch((err) => {\n                        notification.error({ message: 'Failed' });\n                      }).then(()=>{\n                        this.setState({\n                          disable : false,\n                          secure : false,\n                          editSecure : false\n                        })\n                        ReactDOM.findDOMNode(this.messageForm).reset()\n                      })\n                    }).catch((err)=>{\n                      console.log(err)\n                      notification.error({message : \"Failed to send the email\"})\n                    })\n                  }\n                  \n                 \n           \n                })\n               /* \n                  */\n    \n              }\n          }   \n        };\n      \n        handleCancel = type => {\n         // ReactDOM.findDOMNode(this.messageForm).reset()\n          matterkey = null\n          fromKey = null\n          toKey = null\n          if(type===\"secure\"){\n            this.setState({\n                secure : false,\n                editSecure : false,\n                disable : false,\n                data : {\n                  subject : \"\",\n                  body : \"\",\n                  to: \"\",\n                  from : name\n              },\n         \n              });\n              console.log(this.state)\n        }else\n          if(type===\"email\"){\n              this.setState({\n                  email : false,\n                  phone : false,\n                  disable : false,\n                  editEmail: false,\n                  editSecure :false,\n                  secure : false,\n                  data : {\n                    subject : \"\",\n                    body : \"\",\n                    to : \"\",\n                    from : name\n                },\n           \n                });\n                console.log(this.state)\n          }else\n          if(type===\"phone\"){\n              this.setState({\n                  phone : false,\n                  email : false,\n                  editPhone: false,\n                  disable : false,\n                  data : {\n                    subject : \"\",\n                    body : \"\",\n                    to : \"\",\n                    from : name\n                },\n                });\n                console.log(this.state)\n          \n          }\n          \n          setTimeout(() => {\n          //  window.location.reload();\n          }, 500);\n          \n         \n        \n        };\n  \n      render(){\n        const handleChange = (e) => {\n          e.persist();\n          this.setState({ touched: false });\n          const { name, id, value, selectedIndex } = e.target;\n          let newData = this.state.data;\n  \n          if (name === 'matter') {\n  \n            if (selectedIndex >= 1) {\n              matterkey = \"\"\n             // console.log(matters.data.data[selectedIndex - 1]._id)\n              newData[name] = value;\n            //  console.log(\"inside matter > 1 \")\n            } else {\n              newData[name] = '';\n            //  console.log(\"inside matte.....r\")\n            }\n  \n          }else\n          if (name === 'to' || name === 'from') {\n            console.log(matters)\n            if (selectedIndex >= 1) {\n              name === 'to' ? toKey = \"\" : fromKey = \"\"\n              newData[name] = contact.data.data[selectedIndex - 1]._id;\n            } else {\n              newData[name] = '';\n            }\n  \n          } else \n           if (name === 'addTime') {\n            timeError = '';\n            var timeValue = value;\n            if (timeValue == '' || timeValue.indexOf(':') < 0) {\n              timeError = 'Inavlid Time';\n              console.log(timeError);\n            } else {\n              var sHours = timeValue.split(':')[0];\n              var sMinutes = timeValue.split(':')[1];\n              var sSecs = timeValue.split(':')[2];\n              console.log(sSecs)\n              if (sHours == '' || isNaN(sHours) /*|| parseInt(sHours)>23 */) {\n                timeError = 'Inavlid Time';\n                console.log(timeError);\n              } else if (parseInt(sHours) == 0) sHours = '00';\n             // else if (sHours < 10) sHours = '0' + sHours;\n    \n              if (sMinutes == '' || isNaN(sMinutes) || parseInt(sMinutes) > 59) {\n                timeError = 'Inavlid Time';\n                console.log(timeError);\n              } else if (parseInt(sMinutes) == 0) sMinutes = '00';\n             // else if (sMinutes < 10) sMinutes = '0' + sMinutes;\n    \n              if (sSecs == '' || isNaN(sSecs) /*|| parseInt(sHours)>23 */) {\n                timeError = 'Inavlid Time';\n                console.log(timeError);\n              } else if (parseInt(sSecs) == 0) sSecs = '00';\n             // else if (sSecs < 10) sSecs = '0' + sSecs;\n              timeValue = sHours + ':' + sMinutes +':' + sSecs;\n            }\n            newData[name] = timeValue;\n            this.setState({ data: newData });\n          } \n          else \n          {\n              console.log(\"inside last\")\n              newData[name] = value;\n              this.setState({ data: newData });\n            }\n      \n          console.log(this.state);\n        };\n          const handleEdit = record => {\n            /*\n              if(record.type===\"secure\"){\n                this.setState({\n                  editSecure : true,\n                    data : record ,\n                  });\n              }else\n              */\n             console.log(record)\n              if(record.logType===\"email\"){\n                if(record.type === \"secure\"){\n                  this.setState({\n                    editSecure : true\n                    });\n                }\n                this.setState({\n                  editEmail : true,\n                    data : record ,\n                  });\n              }else\n              if(record.logType===\"phone\"){\n                this.setState({\n                  editPhone : true,\n                    data : record  \n                  });\n              }\n              console.log(record)\n                  \n            }\n              \n              const handleDelete = record => {\n              \n                api.get('/communication/delete/'+record.id).then((res)=>{\n                  this.componentDidMount()\n                  notification.success({message : \"Log Deleted !\"})\n                  setTimeout(()=>{\n                    //window.location.reload()\n                  },1500)\n                }).catch((err)=>{\n      \n                  notification.error({message : \"Failed to delete\"})\n                })\n                \n              }\n          const setTableData = (type)=>{\n              if(type===\"email\"){\n                this.setState({\n                  tableData: this.state.emailData,\n                });\n             }else\n             if(type===\"phone\"){\n              this.setState({\n                tableData: this.state.phoneData,\n              });\n              }else\n              if(type===\"all\"){\n                this.setState({\n                  tableData: this.state.completeData,\n                });\n              }\n            }\n          const columns = [\n              {\n                  title: 'Hours',\n                  dataIndex: 'addTime',\n                  key: 'addTime',\n                },\n              {\n                title: 'Type',\n                dataIndex: 'logType',\n                key: 'logType',\n              },\n              {\n                title: 'Time',\n                dataIndex: 'time',\n                key: 'time',\n              },\n              {\n                title: 'Date',\n                dataIndex: 'date',\n                key: 'date',\n              },\n              {\n                title: 'Subject',\n                dataIndex: 'subject',\n                key: 'subject',\n              },\n              {\n                  title: 'Matter',\n                  dataIndex: 'matterDesc',\n                  key: 'matterDesc',\n                },\n              {\n                title: 'From',\n                dataIndex: 'from',\n                key: 'from',\n              },\n                {\n                  title: 'To',\n                  dataIndex: 'to',\n                  key: 'to',\n                },\n              \n                {\n                  title:'Edit',\n                  dataIndex: \"edit\",\n                  key: \"_id\",\n                  render:(_,record)=>{\n                      return (\n                          <Button variant='danger' onClick={()=>handleEdit(record)}>\n                              Edit\n                          </Button>\n                      )\n                  }\n              },\n                \n                {\n                    title:'Delete',\n                    dataIndex: \"delete\",\n                    key: \"_id\",\n                    render:(_,record)=>{\n                        return (\n                          <Popconfirm\n                            title=\"Are you sure delete this Log?\"\n                            onConfirm={()=>handleDelete(record)}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                          >\n                            <Button danger>\n                                Delete\n                            </Button>\n                          </Popconfirm>\n                            \n                        )\n                    }\n                },\n            ];\n            const exportPDF = () => {\n              const unit = \"pt\";\n              const size = \"A4\"; // Use A1, A2, A3 or A4\n              const orientation = \"portrait\"; // portrait or landscape\n          \n              const marginLeft = 40;\n              const doc = new jsPDF(orientation, unit, size);\n          \n              doc.setFontSize(15);\n          \n              const title = \"communication\";\n              const headers = [[\"Hours\", \"Type\",\"Time\",\"Date\",\"Subject\",\"Matter\",\"From\", \"To\"] ];\n             \n              let data = []\n              \n            \n              this.state.tableData.map((val, index)=>{\n                const td = [\n                  val.addTime,\n                  val.logType , \n                  val.time ,\n                  val.Date,\n                   val.subject, \n                   val.matter, \n                   val.from, \n                   val.to]\n                data.push(td)\n              })\n            \n          \n              let content = {\n                startY: 50,\n                head: headers,\n                body: data\n              };\n          \n              doc.text(title, marginLeft, 40);\n              doc.autoTable(content);\n              doc.save(\"communications.pdf\")\n            }\n          return <Spin size = \"large\" spinning={this.state.loading}>\n            <div className='p-2 '>\n            <div className=\"d-flex mb-2 title-component-header\">\n                <div className=\"title-header-name\">\n                  <h5>Communication</h5>\n                </div>\n                <div className=\"d-flex extra-iteam-div\">\n                  <button\n                      className=\"btn  btn-outline-primary   btn-sm\"\n                      onClick={exportPDF}\n                  >\n                      Export to PDF\n                  </button>\n                  \n                  <ExportExcel dataSource={this.state.tableData || []} />\n                  <button\n                      className=\"btn  btn-outline-primary   btn-sm\"\n                      onClick={()=>this.showModal(\"secure\")}\n                  >\n                    New secure message\n                  </button>\n                  <button\n                      className=\"btn  btn-outline-primary   btn-sm\"\n                      onClick={()=>this.showModal(\"email\")}\n                  >\n                      New Email Log\n                  </button>\n                  \n                  <button\n                      className=\"btn  btn-outline-primary   btn-sm\"\n                      onClick={()=>this.showModal(\"phone\")}\n                  >\n                      New Phone Log\n                  </button>\n                </div>\n            </div>\n              \n              <Card bodyStyle={{\"padding\": \"14px 10px 0px 10px\"}}>\n                  <div style={{\"display\": \"flex\", \"flex-wrap\": \"wrap\", \"justify-content\": \"space-between\" }}>\n                    <div className=\"mb-2\">\n                    <Button  onClick={()=>setTableData(\"all\")}>All</Button>\n                    <Button onClick={()=>setTableData(\"email\")}>Email</Button>\n                    <Button onClick={()=>setTableData(\"phone\")}>Phone</Button>\n                    </div>\n                  </div>\n              </Card>\n              <Card bodyStyle={{\"padding\": \"0px\"}} className=\"overflow-auto\">                \n                <Table columns={columns} dataSource={this.state.tableData}  />\n              </Card>\n              <Modal\n                  title={this.state.secure ? \"Edit Secure message\" : \"New Secure Message\"}\n                  visible={this.state.secure}\n                  onOk={this.handleSecure}\n                  onCancel={()=>this.handleCancel(\"secure\")}\n                  footer={[\n                    <Button  onClick={()=>this.handleCancel(\"secure\")}>\n                      Cancel\n                    </Button>,\n                    <Button type=\"primary\" disabled = {this.state.disable} onClick={this.handleSecure}>\n                      {this.state.editSecure ? \"Update Log\" : \"Send\"}\n                    </Button>,\n                  ]}\n                  >\n                    {           \n          \n                        <Form  \n                        id='myForm'\n                        className=\"form\"\n                        ref={ form => this.messageForm = form }>\n                         <Row>\n                             <Col sm>\n                             <Form.Group>\n                              <Form.Label>Matter</Form.Label>\n                                <Form.Control \n                                    as=\"select\"\n                                    name=\"matter\" \n                                    placeholder=\"Matter\"\n                                    onChange={handleChange}>\n                                <option>Select a matter</option>\n                                {this.state.option}\n                                </Form.Control>\n                         </Form.Group>\n                             </Col>\n                         </Row>\n                       \n                        <Row>\n                            <Col  sm>\n                            <Form.Group>\n                                 <Form.Label>From</Form.Label>\n                                 <Form.Control \n                                     as=\"select\"\n                                     name=\"from\" \n                                     placeholder=\"Select a contact\"\n                                     onChange={handleChange}>\n                                <option>{name}</option>    \n                               \n                                 </Form.Control>\n                                 </Form.Group>\n                            </Col>\n                            \n                            <Col sm>\n                            <Form.Group >\n                                 <Form.Label>To</Form.Label>\n                                 <Form.Control \n                                     as=\"select\"\n                                     name=\"to\" \n                                     placeholder=\"Select a contact\"\n                                     onChange={handleChange}>\n                                     <option>Select a contact</option>\n                                     {this.state.contacts}\n                                 </Form.Control>\n                                 </Form.Group>\n                            </Col>\n                        </Row>\n                         \n                       \n                        <Form.Group controlId=\"subject\">\n                                 <Form.Label>Subject</Form.Label>\n                                 <Form.Control \n                                 name=\"subject\" \n                                 rows=\"3\"\n                                 placeholder=\"subject\"\n                                 onChange={handleChange} />\n                             </Form.Group>  \n                     \n                        \n                             <Form.Group controlId=\"body\">\n                                 <Form.Label>Body</Form.Label>\n                                 <Form.Control \n                                 name=\"body\" \n                                 as=\"textarea\" \n                                 rows=\"3\"\n                                 placeholder=\"body\"\n                                 onChange={handleChange} />\n                             </Form.Group>\n                        \n                     \n                    </Form>    \n                     \n                    }\n              </Modal>\n              \n              <Modal\n                  title={this.state.editEmail ? \"Edit email log\" : \"Add a email log\"}\n                  visible={this.state.editEmail}\n                  onOk={()=>this.handleOk(\"email\")}\n                  onCancel={()=>this.handleCancel(\"email\")}\n                  footer={[\n                    <Button  onClick={()=>this.handleCancel(\"email\")}>\n                      Cancel\n                    </Button>,\n                    <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"email\")}>\n                      {this.state.editEmail ? \"Edit Log\" : \"Save Log\"}\n                    </Button>,\n                  ]}\n                  >\n                    {\n                        this.state.editEmail ?\n                        <Form \n                        id='myForm'\n                        className=\"form\"\n                        ref={ form => this.messageForm = form }>\n                         <Row>\n                             \n                             <Col sm>\n                             <Form.Group>\n                         <Form.Label>Matter</Form.Label>\n                                <Form.Control \n                                    as=\"select\"\n                                    name=\"matter\" \n                                    defaultValue = {this.state.data.matter}\n                                    onChange={handleChange}>\n                                <option>Select a matter</option>\n                                {this.state.option}\n                                </Form.Control>\n                         </Form.Group>\n                             </Col>\n                         </Row>\n                       \n                        <Row>\n                            <Col sm>\n                            <Form.Group>\n                                 <Form.Label>From</Form.Label>\n                                 <Form.Control \n                                     as=\"select\"\n                                     name=\"from\" \n                                     defaultValue = {this.state.data.from}\n                                     onChange={handleChange}>\n                                     <option>Select a contact</option>    \n                                     {\n                                  this.state.editSecure ? <option>{name}</option>:  this.state.contacts\n                                     } \n                                 </Form.Control>\n                                 </Form.Group>\n                            </Col>\n                            \n                            <Col sm>\n                            <Form.Group >\n                                 <Form.Label>To</Form.Label>\n                                 <Form.Control \n                                     as=\"select\"\n                                     name=\"to\" \n                                     defaultValue = {this.state.data.to}\n                                     onChange={handleChange}>\n                                     <option>Select a contact</option>\n                                     {this.state.contacts}\n                                 </Form.Control>\n                                 </Form.Group>\n                            </Col>\n                        </Row>\n                         <Row>\n                             <Col sm>\n                             <Form.Group controlId=\"date\">\n                                <Form.Label>Time</Form.Label>\n                                <Form.Control \n                                required\n                                type=\"time\" \n                                name=\"time\" \n                                defaultValue = {this.state.data.time}\n                                onChange={handleChange}/>\n                            </Form.Group>\n                             </Col>\n                             <Col sm>\n                             <Form.Group controlId=\"date\">\n                                <Form.Label>Date</Form.Label>\n                                <Form.Control \n                                required\n                                type=\"date\" \n                                name=\"date\" \n                                defaultValue = {this.state.data.date} \n                                onChange={handleChange}/>\n                            </Form.Group>\n                             </Col>\n                 \n                         </Row>\n                       \n                        <Form.Group controlId=\"subject\">\n                                 <Form.Label>Subject</Form.Label>\n                                 <Form.Control \n                                 name=\"subject\" \n                                 rows=\"3\"\n                                 defaultValue = {this.state.data.subject}\n                                 onChange={handleChange} />\n                             </Form.Group>  \n                     \n                        \n                             <Form.Group controlId=\"body\">\n                                 <Form.Label>Body</Form.Label>\n                                 <Form.Control \n                                 name=\"body\" \n                                 as=\"textarea\" \n                                 rows=\"3\"\n                                 defaultValue = {this.state.data.body}\n                                 onChange={handleChange} />\n                             </Form.Group>\n                        \n                     \n                       </Form>    \n                    \n                        :\n                        null\n                    }\n              </Modal>\n              <Modal\n                  title={this.state.editEmail ? \"Edit email log\" : \"Add a email log\"}\n                  visible={this.state.email}\n                  onOk={()=>this.handleOk(\"email\")}\n                  onCancel={()=>this.handleCancel(\"email\")}\n                  footer={[\n                    <Button  onClick={()=>this.handleCancel(\"email\")}>\n                      Cancel\n                    </Button>,\n                    <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"email\")}>\n                      {this.state.editEmail ? \"Update Log\" : \"Save Log\"}\n                    </Button>,\n                  ]}\n                  >\n                    {           \n          \n                        <Form  \n                        id='myForm'\n                        className=\"form\"\n                        ref={ form => this.messageForm = form }>\n                         <Row>\n                             \n                             <Col sm>\n                             <Form.Group>\n                               <Form.Label>Matter</Form.Label>\n                                <Form.Control \n                                    as=\"select\"\n                                    name=\"matter\" \n                                    placeholder=\"Matter\"\n                                    onChange={handleChange}>\n                                <option>Select a matter</option>\n                                {this.state.option}\n                                </Form.Control>\n                         </Form.Group>\n                             </Col>\n                         </Row>\n                       \n                        <Row>\n                            <Col  sm>\n                            <Form.Group>\n                                 <Form.Label>From</Form.Label>\n                                 <Form.Control \n                                     as=\"select\"\n                                     name=\"from\" \n                                     placeholder=\"Select a contact\"\n                                     onChange={handleChange}>\n                                <option>Select a contact</option>\n                                {\n                                  this.state.contacts\n                                } \n                         \n                              \n                                 </Form.Control>\n                                 </Form.Group>\n                            </Col>\n                            \n                            <Col sm>\n                            <Form.Group >\n                                 <Form.Label>To</Form.Label>\n                                 <Form.Control \n                                     as=\"select\"\n                                     name=\"to\" \n                                     placeholder=\"Select a contact\"\n                                     onChange={handleChange}>\n                                     <option>Select a contact</option>\n                                     {this.state.contacts}\n                                 </Form.Control>\n                                 </Form.Group>\n                            </Col>\n                        </Row>\n                         <Row>\n                             <Col sm>\n                             <Form.Group controlId=\"date\">\n                                <Form.Label>Time</Form.Label>\n                                <Form.Control \n                                required\n                                type=\"time\" \n                                name=\"time\" \n                                placeholder=\"Time\" \n                                onChange={handleChange}/>\n                            </Form.Group>\n                             </Col>\n                             <Col sm>\n                             <Form.Group controlId=\"date\">\n                                <Form.Label>Date</Form.Label>\n                                <Form.Control \n                                required\n                                type=\"date\" \n                                name=\"date\" \n                                placeholder=\"Date\" \n                                onChange={handleChange}/>\n                            </Form.Group>\n                             </Col>\n                 \n                         </Row>\n                       \n                        <Form.Group controlId=\"subject\">\n                                 <Form.Label>Subject</Form.Label>\n                                 <Form.Control \n                                 name=\"subject\" \n                                 rows=\"3\"\n                                 placeholder=\"subject\"\n                                 onChange={handleChange} />\n                             </Form.Group>  \n                     \n                        \n                             <Form.Group controlId=\"body\">\n                                 <Form.Label>Body</Form.Label>\n                                 <Form.Control \n                                 name=\"body\" \n                                 as=\"textarea\" \n                                 rows=\"3\"\n                                 placeholder=\"body\"\n                                 onChange={handleChange} />\n                             </Form.Group>\n                        \n                     \n                    </Form>    \n                     \n                    }\n              </Modal>\n              <Modal\n                  title={this.state.editPhone ? \"Edit phone log\" : \"Add a phone log\"}\n                  visible={this.state.editPhone}\n                  onOk={()=>this.handleOk(\"phone\")}\n                  onCancel={()=>this.handleCancel(\"phone\")}\n                  footer={[\n                    <Button  onClick={()=>this.handleCancel(\"phone\")}>\n                      Cancel\n                    </Button>,\n                    <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"phone\")}>\n                      {this.state.editPhone ? \"Edit Log\" : \"Save Log\"}\n                    </Button>,\n                  ]}\n                  >\n                  {\n                  \n                    <Form \n                    id='myForm'\n                    className=\"form\"\n                    ref={ form => this.messageForm = form }>\n                     <Row>\n                         <Col sm>\n                         <Form.Group controlId=\"duration\">\n                            <Form.Label>Duration</Form.Label>\n                            <Form.Control \n                            type=\"text\" \n                            name=\"addTime\" \n                            defaultValue = {this.state.data.addTime}\n                            onChange={handleChange}/>\n                        </Form.Group>\n                         </Col>\n                         <Col sm>\n                         <Form.Group>\n                     <Form.Label>Matter</Form.Label>\n                            <Form.Control \n                                as=\"select\"\n                                name=\"matter\" \n                                defaultValue = {this.state.data.matter}\n                                onChange={handleChange}>\n                            <option>Select a matter</option>\n                            {this.state.option}\n                            </Form.Control>\n                     </Form.Group>\n                         </Col>\n                     </Row>\n                   \n                    <Row>\n                        <Col  sm>\n                        <Form.Group>\n                             <Form.Label>From</Form.Label>\n                             <Form.Control \n                                 as=\"select\"\n                                 name=\"from\" \n                                 defaultValue = {this.state.data.from}\n                                 onChange={handleChange}>\n                                 <option>Select a contact</option> \n                             {this.state.contacts}\n                             </Form.Control>\n                             </Form.Group>\n                        </Col>\n                        \n                        <Col sm>\n                        <Form.Group >\n                             <Form.Label>To</Form.Label>\n                             <Form.Control \n                                 as=\"select\"\n                                 name=\"to\" \n                                 defaultValue = {this.state.data.to}\n                                 onChange={handleChange}>\n                                 <option>Select a contact</option>\n                                 {this.state.contacts}\n                             </Form.Control>\n                             </Form.Group>\n                        </Col>\n                    </Row>\n                     <Row>\n                         <Col sm>\n                         <Form.Group controlId=\"date\">\n                            <Form.Label>Time</Form.Label>\n                            <Form.Control \n                            required\n                            type=\"time\" \n                            name=\"time\" \n                            defaultValue = {this.state.data.time}\n                            onChange={handleChange}/>\n                        </Form.Group>\n                         </Col>\n                         <Col sm>\n                         <Form.Group controlId=\"date\">\n                            <Form.Label>Date</Form.Label>\n                            <Form.Control \n                            required\n                            type=\"date\" \n                            name=\"date\" \n                            defaultValue = {this.state.data.date} \n                            onChange={handleChange}/>\n                        </Form.Group>\n                         </Col>\n             \n                     </Row>\n                   \n                    <Form.Group controlId=\"subject\">\n                             <Form.Label>Subject</Form.Label>\n                             <Form.Control \n                             name=\"subject\" \n                             rows=\"3\"\n                             defaultValue = {this.state.data.subject}\n                             onChange={handleChange} />\n                         </Form.Group>  \n                 \n                    \n                         <Form.Group controlId=\"body\">\n                             <Form.Label>Body</Form.Label>\n                             <Form.Control \n                             name=\"body\" \n                             as=\"textarea\" \n                             rows=\"3\"\n                             defaultValue = {this.state.data.body}\n                             onChange={handleChange} />\n                         </Form.Group>\n                    \n                 \n                    </Form>    \n                \n                 \n                  }\n                    \n              </Modal>\n              <Modal\n                  title={this.state.editPhone ? \"Edit phone log\" : \"Add a phone log\"}\n                  visible={this.state.phone}\n                  onOk={()=>this.handleOk(\"phone\")}\n                  onCancel={()=>this.handleCancel(\"phone\")}\n                  footer={[\n                    <Button  onClick={()=>this.handleCancel(\"phone\")}>\n                      Cancel\n                    </Button>,\n                    <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"phone\")}>\n                      {this.state.editPhone ? \"Update Log\" : \"Save Log\"}\n                    </Button>,\n                  ]}\n                  >\n                  {\n                   \n                    <Form \n                    id='myForm'\n                               className=\"form\"\n                               ref={ form => this.messageForm = form }>\n                     <Row>\n                         <Col sm>\n                         <Form.Group controlId=\"duration\">\n                            <Form.Label>Duration</Form.Label>\n                            <Form.Control \n                            type=\"text\" \n                            name=\"addTime\" \n                            placeholder=\"hh:mm:ss\" \n                            onChange={handleChange}/>\n                        </Form.Group>\n                         </Col>\n                         <Col sm>\n                         <Form.Group>\n                     <Form.Label>Matter</Form.Label>\n                            <Form.Control \n                                as=\"select\"\n                                name=\"matter\" \n                                placeholder=\"Matter\"\n                                onChange={handleChange}>\n                            <option>Select a matter</option>\n                            {this.state.option}\n                            </Form.Control>\n                     </Form.Group>\n                         </Col>\n                     </Row>\n                   \n                    <Row>\n                        <Col  sm>\n                        <Form.Group>\n                             <Form.Label>From</Form.Label>\n                             <Form.Control \n                                 as=\"select\"\n                                 name=\"from\" \n                                 placeholder=\"Select a contact\"\n                                 onChange={handleChange}>\n                            <option>Select a contact</option>     \n                           {this.state.contacts}\n                             </Form.Control>\n                             </Form.Group>\n                        </Col>\n                        \n                        <Col sm>\n                        <Form.Group >\n                             <Form.Label>To</Form.Label>\n                             <Form.Control \n                                 as=\"select\"\n                                 name=\"to\" \n                                 placeholder=\"Select a contact\"\n                                 onChange={handleChange}>\n                                 <option>Select a contact</option>\n                                 {this.state.contacts}\n                             </Form.Control>\n                             </Form.Group>\n                        </Col>\n                    </Row>\n                     <Row>\n                         <Col sm>\n                         <Form.Group controlId=\"date\">\n                            <Form.Label>Time</Form.Label>\n                            <Form.Control \n                            required\n                            type=\"time\" \n                            name=\"time\" \n                            placeholder=\"Time\" \n                            onChange={handleChange}/>\n                        </Form.Group>\n                         </Col>\n                         <Col sm>\n                         <Form.Group controlId=\"date\">\n                            <Form.Label>Date</Form.Label>\n                            <Form.Control \n                            required\n                            type=\"date\" \n                            name=\"date\" \n                            placeholder=\"Date\" \n                            onChange={handleChange}/>\n                        </Form.Group>\n                         </Col>\n             \n                     </Row>\n                   \n                    <Form.Group controlId=\"subject\">\n                             <Form.Label>Subject</Form.Label>\n                             <Form.Control \n                             name=\"subject\" \n                             rows=\"3\"\n                             placeholder=\"subject\"\n                             onChange={handleChange} />\n                         </Form.Group>  \n                 \n                    \n                         <Form.Group controlId=\"body\">\n                             <Form.Label>Body</Form.Label>\n                             <Form.Control \n                             name=\"body\" \n                             as=\"textarea\" \n                             rows=\"3\"\n                             placeholder=\"body\"\n                             onChange={handleChange} />\n                         </Form.Group>\n                    \n                 \n                </Form>    \n                  }\n                    \n              </Modal>\n          </div>\n          \n          </Spin>\n          }\n  }\n  \n  const mapStateToProps = (state) => ({\n    userId: state.user.token.user._id,\n  });\n  \n  export default connect(mapStateToProps)(Communication);\n  ","  import React from 'react';\n  import { Tabs, Card, Table, Button, Popconfirm, message, notification, Spin } from 'antd';\n  import { Form } from 'react-bootstrap';\n  import jsPDF from 'jspdf';\n  import 'jspdf-autotable';\n  import api from '../../../../../resources/api';\n  import { connect } from 'react-redux'\n  import ExportExcel from '../../../Billings/ExcelExport'\n  const { TabPane } = Tabs;\n  \n  class billing extends React.Component {\n    constructor(){\n      super()\n      this.state = {\n        tableData : [],\n        draftBills : [],\n        unpaidBills : [],\n        paidBills : [],\n        status : false,\n        loading : true\n      }\n    }\n    handelBills = (type) => {\n      if (type === 'record') {\n        this.props.history.push('/manage/billing/record');\n      }\n    };\n  \n    cancel(e) {\n      message.error('Canceled');\n    }\n  \n    \n  \n    componentDidMount(){\n     \n      api.get('/billing/bill/viewforcontact/'+this.props.userId+'/'+ this.props.id).then((res)=>{\n        console.log(res.data.data)\n        let tableData = []\n        let paidBills = []\n        let unpaidBills = []\n        let draftBills = []\n        res.data.data.map((value , index)=>{\n       \n      //    const issueDate = today.getDate() + \"/\" + today.getMonth() + \"/\" + today.getFullYear()\n          const temp = {\n            key : index ,\n            _id : value._id,\n            lastSeen : value.lastSeen ? value.lastSeen.substring(0,10) : \"-\",\n            status : value.status,\n            dueDate : value.dueDate.substring(0,10),\n            id : value.invoiceId ? value.invoiceId : '-' ,\n            client : value.client ? value.client.firstName + \" \" + value.client.lastName : \"-\",\n            matter : value.matter ? value.matter.matterDescription : \"-\",\n            issueDate : value.issueDate.substring(0,10) ,\n            balance : parseFloat(value.balance).toFixed('2')\n          }\n          if(value.status==\"Paid\"){\n            paidBills.push(temp)\n          }\n          if(value.status==\"Unpaid\"){\n            unpaidBills.push(temp)\n          }\n          if(value.status==\"draft\"){\n            draftBills.push(temp)\n          }\n          tableData.push(temp)\n        })\n        this.setState({\n          tableData :  tableData,\n           paidBills : paidBills ,\n            unpaidBills : unpaidBills,\n             draftBills: draftBills,\n              loading : false})\n      })\n    }\n  \n    render() {\n      const callback = () => {};\n      const handelAction = (record, type) => {\n        const data = record\n        delete data.matter\n        delete data.client\n        if(type === \"fromDraft\"){\n          data.status = \"Unpaid\"\n          \n        }else\n        if(type === \"fromUnpaid\"){\n          data.status = \"Paid\"\n        }\n        api.post('/billing/bill/edit/'+record._id , data).then((res)=>{\n          console.log(res)\n          if(type==\"fromDraft\"){\n            const newState = this.state\n            newState.draftBills.splice(record.key, 1)\n            newState.unpaidBills.push(res.data.data)\n          }\n          if(type==\"fromUnpaid\"){\n            const newState = this.state\n            newState.unpaidBills.splice(record.key, 1)\n            newState.paidBills.push(res.data.data)\n          }\n  \n          notification.success({message : \"Success\"})\n          setTimeout(()=>{\n          //  window.location.reload()\n            this.componentDidMount()\n          },1000)\n  \n        }).catch((err)=>{\n          console.log(err)\n          notification.error(\"Failed\")\n        })\n        \n      }\n      const handleDelete = (record) => {\n        api\n          .get('/billing/bill/delete/' + record._id)\n          .then((res) => {\n            console.log(res)\n            this.componentDidMount()\n            notification.success({ message: 'Bills Deleted !' });\n            setTimeout(() => {\n              //window.location.reload();\n            }, 1500);\n          })\n          .catch((err) => {\n            notification.error({ message: 'Failed to delete' });\n          });\n      };\n  \n      const columnsforDraft = [\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          key: 'action',\n          render: (_, record) => {\n            return (\n              <Popconfirm\n                title=\"Approve this draft bill\"\n                onConfirm={() => handelAction(record, \"fromDraft\")}\n                onCancel={this.cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <Form.Check type=\"checkbox\"  />\n              </Popconfirm>\n            );\n          },\n        },\n        {\n          title: 'Last Seen',\n          dataIndex: 'lastSeen',\n          key: 'lastSeen',\n        },\n        {\n          title: 'Status',\n          dataIndex: 'status',\n          key: 'status',\n        },\n        {\n          title: 'Due Date',\n          dataIndex: 'dueDate',\n          key: 'dueDate',\n        },\n        {\n          title: 'ID',\n          dataIndex: 'id',\n          key: 'id',\n        },\n        {\n          title: 'Client',\n          dataIndex: 'client',\n          key: 'client',\n        },\n        {\n          title: 'Matter',\n          dataIndex: 'matter',\n          key: 'matter',\n        },\n        {\n          title: 'Issue Date',\n          dataIndex: 'issueDate',\n          key: 'issueDate',\n        },\n        {\n          title: 'Balance',\n          dataIndex: 'balance',\n          key: 'balance',\n        },\n        {\n          title: 'Delete',\n          dataIndex: 'Delete',\n          key: 'Delete',\n          render: (_, record) => {\n            return (\n              <Popconfirm\n                title=\"Are you sure you want to delete this bill ?\"\n                onConfirm={() => handleDelete(record)}\n                onCancel={this.cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <Button danger>\n                  Delete\n                </Button>\n              </Popconfirm>\n            );\n          },\n        }\n      ];\n  \n      const unpaidColumns= [\n        {\n          title: 'Action',\n          dataIndex: 'action',\n          key: 'action',\n          render: (_, record) => {\n            return (\n              <Popconfirm\n                title=\"Mark as Paid\"\n                onConfirm={() => handelAction(record, \"fromUnpaid\")}\n                onCancel={this.cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <Form.Check type=\"checkbox\"  />\n              </Popconfirm>\n            );\n          },\n        },\n       \n        {\n          title: 'Last Seen',\n          dataIndex: 'lastSeen',\n          key: 'lastSeen',\n        },\n        {\n          title: 'Status',\n          dataIndex: 'status',\n          key: 'status',\n        },\n        {\n          title: 'Due Date',\n          dataIndex: 'dueDate',\n          key: 'dueDate',\n        },\n        {\n          title: 'ID',\n          dataIndex: 'id',\n          key: 'id',\n        },\n        {\n          title: 'Client',\n          dataIndex: 'client',\n          key: 'client',\n        },\n        {\n          title: 'Matter',\n          dataIndex: 'matter',\n          key: 'matter',\n        },\n        {\n          title: 'Issue Date',\n          dataIndex: 'issueDate',\n          key: 'issueDate',\n        },\n        {\n          title: 'Balance',\n          dataIndex: 'balance',\n          key: 'balance',\n        },\n        {\n          title: 'Delete',\n          dataIndex: 'Delete',\n          key: 'Delete',\n          render: (_, record) => {\n            return (\n              <Popconfirm\n                title=\"Are you sure you want to delete this bill ?\"\n                onConfirm={() => handleDelete(record)}\n                onCancel={this.cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <Button danger>\n                  Delete\n                </Button>\n              </Popconfirm>\n            );\n          },\n        }\n       \n      ];\n      const paidColumns= [\n        \n        {\n          title: 'Last Seen',\n          dataIndex: 'lastSeen',\n          key: 'lastSeen',\n        },\n        {\n          title: 'Status',\n          dataIndex: 'status',\n          key: 'status',\n        },\n        {\n          title: 'Due Date',\n          dataIndex: 'dueDate',\n          key: 'dueDate',\n        },\n        {\n          title: 'ID',\n          dataIndex: 'id',\n          key: 'id',\n        },\n        {\n          title: 'Client',\n          dataIndex: 'client',\n          key: 'client',\n        },\n        {\n          title: 'Matter',\n          dataIndex: 'matter',\n          key: 'matter',\n        },\n        {\n          title: 'Issue Date',\n          dataIndex: 'issueDate',\n          key: 'issueDate',\n        },\n        {\n          title: 'Balance',\n          dataIndex: 'balance',\n          key: 'balance',\n        },\n        {\n          title: 'Delete',\n          dataIndex: 'Delete',\n          key: 'Delete',\n          render: (_, record) => {\n            return (\n              <Popconfirm\n                title=\"Are you sure you want to delete this bill ?\"\n                onConfirm={() => handleDelete(record)}\n                onCancel={this.cancel}\n                okText=\"Yes\"\n                cancelText=\"No\"\n              >\n                <Button danger>\n                  Delete\n                </Button>\n              </Popconfirm>\n            );\n          },\n        }\n       \n      ];\n  \n  \n      const exportPDF = () => {\n        const unit = 'pt';\n        const size = 'A4'; // Use A1, A2, A3 or A4\n        const orientation = 'portrait'; // portrait or landscape\n  \n        const marginLeft = 40;\n        const doc = new jsPDF(orientation, unit, size);\n  \n        doc.setFontSize(15);\n  \n        const title = 'Bills';\n        const headers = [\n          [\n            'Last Seen',\n            'Status',\n            'Due Date',\n            'ID',\n            'Client',\n            'Matter',\n            'Issue Date',\n            'Balance',\n          ],\n        ];\n      \n        let data = []\n              this.state.tableData.map((val, index)=>{\n                const td= [val.lastSeen, val.status , val.dueDate , val.id ,val.client , val.matter , val.issueDate , val.balance]\n                data.push(td)\n              })\n       \n  \n        let content = {\n          startY: 50,\n          head: headers,\n          body: data,\n        };\n  \n        doc.text(title, marginLeft, 40);\n        doc.autoTable(content);\n        doc.save('Bill.pdf');\n      };\n  \n      return (\n        <Spin size= \"large\" spinning = {this.state.loading}>\n          <div className=\"p-2 \">\n            <div className=\"d-flex mb-2 title-component-header\">\n                <div className=\"title-header-name\">\n                  <h5>Billing</h5>\n                </div>\n                <div className=\"d-flex extra-iteam-div\">\n                  <button\n                      className=\"btn  btn-outline-primary   btn-sm\"\n                      onClick={exportPDF}\n                  >\n                      Export to Pdf\n                  </button>\n                  <ExportExcel dataSource={this.state.tableData || []} />\n                  <button\n                    className=\"btn  btn-outline-primary   btn-sm\"\n                    onClick={this.props.handleRecordPayment}\n                    >\n                        Record Payment\n                    </button>\n                    <button\n                        className=\"btn  btn-outline-primary   btn-sm\"\n                        onClick={this.props.handleBills}\n                    >\n                        New Bills\n                    </button>\n              </div> \n              </div>\n          <Card\n          >\n            <Tabs defaultActiveKey=\"4\" onChange={callback}>\n           \n              <TabPane tab=\"Draft\" key=\"1\">\n                <Table className=\"table-responsive\" dataSource={this.state.draftBills} columns={columnsforDraft} />\n              </TabPane>\n            \n             <TabPane tab=\"All\" key=\"4\">\n                <Table className=\"table-responsive\" dataSource={this.state.tableData} columns={paidColumns} />\n              </TabPane>\n              <TabPane tab=\"Unpaid\" key=\"3\">\n                <Table className=\"table-responsive\" dataSource={this.state.unpaidBills} columns={unpaidColumns} />\n              </TabPane>\n              <TabPane tab=\"Paid\" key=\"2\">\n                <Table className=\"table-responsive\" dataSource={this.state.paidBills} columns={paidColumns} />\n              </TabPane>\n            </Tabs>\n          </Card>\n        </div>\n      \n        </Spin>\n        );\n    }\n  }\n  \n  const mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n  \n  export default connect(mapStateToProps)(billing)","  import React, { useState, useEffect } from 'react';\n  import {\n    Card,\n    Button,\n    Table,\n    notification,\n    Modal,\n    Input,\n    Form,\n    Select,\n    Popconfirm,\n    Spin,\n    Tabs,\n    Menu,\n    Dropdown,\n    Space\n  } from 'antd';\n  import { DownOutlined , FolderTwoTone, DownloadOutlined } from '@ant-design/icons';\n  import { useSelector } from 'react-redux';\n  import { SearchOutlined } from '@ant-design/icons';\n  import Highlighter from 'react-highlight-words';\n  import api from '../../../../../resources/api';\n  import { findLast } from 'lodash';\n  const { Option } = Select;\n  const { TabPane } = Tabs;\n  \n  //matters={props.location.state.matters}\n  // userId={props.location.state.userId}\n  // matterId={props.location.state.id}\n  \n  const Documents = (props) => {\n    \n    const [docs, setDocs] = useState([]);\n    const userId = useSelector((state) => state.user.token.user._id);\n  \n    const [FolderModal, setFolderModal] = useState(false)\n    const [FolderTable, setFolderTable] = useState([])\n    const [FolderData, setFolderData] = useState({\n      name : \"\",\n      userId : \"\",\n      documents : []\n    })\n    const [TemplateTable, setTemplateTable] = useState([])\n    const [TemplateModal, setTemplateModal] = useState(false)\n    const [TemplateData, setTemplateData] = useState({\n        name : \"\",\n        userId : userId,\n        document : \"\",\n        category : \"\"\n    })\n    const [Disable, setDisable] = useState(false)\n    const [viewUpload, setViewUpload] = useState(false);\n    const [tabFor, settabFor] = useState(\"Document\")\n    const [Loading, setLoading] = useState(true)\n  \n    const [CatagoryData, setCatagoryData] = useState({\n      name : '',\n      userId : userId\n    })\n    const [tempDocxModal, settempDocxModal] = useState(false)\n    const [tempDocx, settempDocx] = useState({\n      document: '',\n      _id: '',\n      name: '',\n      matter: '',\n      contact: '',\n      category: '',\n      userId : userId\n    });\n    const [CatagoryTable, setCatagoryTable] = useState([])\n    const [cataoryModal, setcataoryModal] = useState(false)\n    const [uploadData, setUploadData] = useState({\n      document: '',\n      _id: '',\n      name: '',\n      matter: '',\n      contact: '',\n      category: '',\n    });\n    const [modalFor, setModalFor] = useState('Upload');\n    const [matters, setMatters] = useState([]);\n    const [Category, setCategory] = useState([])\n    const [value, setValue] = useState('');\n    const [dataSrc, setDataSrc] = useState([]);\n    const [showNameInput, setShowNameInput] = useState(false);\n    const [foldervalue, setfolderValue] = useState('');\n    const [folderdataSrc, setfolderDataSrc] = useState([]);\n    const [showfolderNameInput, setShowfolderNameInput] = useState(false);\n    //funtions for document\n    const FilterByNameInput = (\n      <div>\n        <SearchOutlined\n        style={{\"vertical-align\": \"revert\"}}\n          onClick={() => {\n            var dump =\n              showNameInput === false\n                ? setShowNameInput(true)\n                : setShowNameInput(false);\n          }}\n        />\n        <span style={{paddingLeft : \"8px\"}}> Name </span>\n  \n        {showNameInput && (\n          <div style={{paddingTop : \"10px\"}}>\n            <input\n              placeholder=\"Search\"\n              value={value}\n              onChange={(e) => {\n                let filteredData;\n                setValue(e.target.value);\n                if (e.target.value.length !== 0 || e.target.value === '') {\n                  filteredData = docs.filter((item) =>\n                    item.name\n                      .toLowerCase()\n                      .includes(e.target.value.toLowerCase())\n                  );\n                  setDataSrc(filteredData);\n                } else {\n                  setDataSrc(docs);\n                }\n              }}\n            />\n          </div>\n        )}\n      </div>\n    );\n    const columnsForDocuments = [\n      {\n        title: 'Type',\n        dataIndex: 'type',\n        key: '0',\n      },\n      \n      {\n        title: FilterByNameInput,\n        dataIndex: 'name',\n        key: '1',\n        render: (text) => (\n          <Highlighter\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0}}\n            searchWords={[value]}\n            autoEscape\n            textToHighlight={text ? text.toString() : ''}\n          />\n        ),\n      },\n      {\n        title: 'Matter',\n        dataIndex: 'matter',\n        key: '2',\n      },\n      {\n        title: 'Category',\n        dataIndex: 'category',\n        key: '3',\n      },\n      {\n        title: 'Received Date',\n        dataIndex: 'receivedDate',\n        key: '4',\n        sortDirections: ['descend', 'ascend'],\n        sorter: (a, b) => a.receivedDate > b.receivedDate,\n      },\n      {\n        title: 'Last Edit',\n        dataIndex: 'lastEdit',\n        key: '5',\n        sortDirections: ['descend', 'ascend'],\n        sorter: (a, b) => a.lastEdit > b.lastEdit,\n      },\n  \n      {\n        title: 'Edit',\n        dataIndex: 'edit',\n        key: '6',\n        render: (_, record) => {\n          return (\n            <Button\n              className=\"btn-outline-info \"\n              onClick={() => {\n                editHandler(record._id);\n              }}\n            >\n              Edit\n            </Button>\n          );\n        },\n      },\n      {\n        title: 'Delete',\n        dataIndex: 'delete',\n        key: '7',\n        render: (_, record) => {\n          return (\n            <Popconfirm\n                      title=\"Are you sure delete this Document?\"\n                      onConfirm={()=>deleteHandler(record._id)}\n                      onCancel={()=>{}}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                    >\n                      <Button\n                        className=\" btn-outline-danger \"\n                      >\n                        Delete\n                      </Button>\n                    </Popconfirm>\n            \n          );\n        },\n      },\n      {\n        title: 'Download',\n        dataIndex: 'download',\n        key: '8',\n        render: (_, record) => {\n          return (\n            <Button\n              className=\"btn-outline-primary \"\n              onClick={() => {\n                downloadHandler(record);\n              }}\n              icon={<DownloadOutlined />}\n            >\n              Download\n            </Button>\n          );\n        },\n      },\n    ];\n    const handleInput = (item) => (e) => {\n  \n      console.log(item)\n      console.log(e)\n      if (item === 'document') {\n        e.persist()\n        setUploadData({ ...uploadData, document: e.target.files[0] });\n       \n      } else\n      if(item === \"category\"){\n        uploadData[`${item}`] = e;\n        setUploadData({ ...uploadData });\n      }\n      else {\n        if (item === 'matter') {\n          if(modalFor === \"Upload\"){\n            console.log(\"from the uploads\")\n            uploadData[`${item}`] = e;\n            setUploadData({ ...uploadData });\n            getMatterById(e);\n          }else{\n            console.log(\"from the edits\")\n            api.get(`/matter/view/${e}`).then((res) => {\n              uploadData[`${item}`] = res.data.data ;\n              setUploadData({ ...uploadData });\n              getMatterById(e);\n              });\n          }\n        } else {\n          uploadData[`${item}`] = e.target.value;\n          setUploadData({ ...uploadData });\n        }\n      }\n      console.log(uploadData)\n      \n    };\n  \n    const handleViaTemplate = (item) => (e) => {\n      console.log(item)\n      console.log(e)\n      if(item === \"category\" || item ===\"document\"){\n        tempDocx[`${item}`] = e;\n        settempDocx({ ...tempDocx });\n      }else\n      if(item === \"category\" || item ===\"document\"){\n        tempDocx[`${item}`] = e;\n        settempDocx({ ...tempDocx });\n      }\n      else {\n        if (item === 'matter') {\n          if(modalFor === \"Upload\"){\n            console.log(\"from the uploads\")\n            tempDocx[`${item}`] = e;\n            settempDocx({ ...tempDocx });\n            getMatterById(e);\n          }else{\n            console.log(\"from the edits\")\n            api.get(`/matter/view/${e}`).then((res) => {\n              tempDocx[`${item}`] = res.data.data ;\n              settempDocx({ ...tempDocx });\n              getMatterById(e);\n              });\n          }\n        } else {\n          tempDocx[`${item}`] = e.target.value;\n          settempDocx({ ...tempDocx });\n        }\n      }\n      console.log(tempDocx)\n    };\n  \n    const getDocuments = async () => {\n      let tempDocs = [];\n      let template = []\n      await api.get('/document/viewforcontact/' + userId + '/' + props.id).then((res) => {\n        console.log(res.data.data)\n        res.data.data.map((item, index) => {\n          if(item.matter == undefined){\n            const data = {\n              _id : item._id,\n              key : index,\n              document : item.document,\n              category : item.category,\n              name : item.name,\n            }\n            template.push(data)\n          }\n          else\n          if(item.type != \"folder\"){\n            tempDocs = [\n              ...tempDocs,\n              {\n                ...item,\n                type : \"File\",\n                key: item._id,\n                matter: item.matter !== null ? item.matter.matterDescription : '-',\n                receivedDate: getISTDate(item.receivedDate),\n                lastEdit: getISTDate(item.lastEdit),\n              },\n            ];\n          }\n        });\n      });\n      setDocs(tempDocs);\n      setTemplateTable(template)\n      setLoading(false)\n      tempDocs = [];\n      await api.get(`/matter/viewforuser/${userId}`).then((res) => {\n        res.data.data.map((item) => {\n          tempDocs = [\n            ...tempDocs,\n            {\n              ...item,\n              key: item._id,\n              client:\n                item.client === null\n                  ? {\n                      _id: '',\n                      updated_at: '',\n                      created_at: '-',\n                      userId: '-',\n                      title: '-',\n                      lastName: '-',\n                      firstName: '',\n                      __v: 0,\n                      image: '',\n                      customFields: [\n                        {\n                          Email: '-',\n                        },\n                      ],\n                      address: [],\n                      website: [],\n                      phone: [],\n                      emailAddress: [],\n                      company: ['-'],\n                    }\n                  : item.client,\n            },\n          ];\n        });\n      });\n      setMatters(tempDocs);\n    };\n  \n    const handleSubmit = async () => {\n      \n      if(uploadData.category === ''){\n        notification.warning({\n          message : \"Please provide a category.\"\n        })\n      }else\n      if(uploadData.contact === ''){\n        notification.warning({\n          message : \"Please provide a contact.\"\n        })\n      }else\n      if(uploadData.document === '' ){\n        notification.warning({\n          message : \"Please provide a document.\"\n        })\n      }else\n      if(uploadData.matter === '' ){\n        notification.warning({\n          message : \"Please provide a matter.\"\n        })\n      }else\n      if(uploadData.name === ''){\n        notification.warning({\n          message : \"Please provide a name.\"\n        })\n      }\n      else{\n        setDisable(true)\n        var docFormData = new FormData();\n        docFormData.set('document', uploadData.document);\n        docFormData.set('name', uploadData.name);\n        docFormData.set('matter', uploadData.matter);\n        docFormData.set('contact', uploadData.contact);\n        docFormData.set('category', uploadData.category);\n        docFormData.set('userId', userId);\n        console.log(docFormData)\n      api\n        .post('/document/upload/934894383948u43', docFormData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        })\n        .then(function (response) {\n          notification.success({ message: 'Document Uploaded.' });\n          getDocuments();\n        })\n        .catch(function (response) {\n          notification.error({ message: 'Document Upload Failed.' });\n        });\n      setTimeout(() => {\n        setViewUpload(false);\n        setDisable(false)\n      }, 600);\n      }\n      \n    };\n    \n  \n    const downloadHandler = async (record) => {\n      window.open(record.document);\n    };\n  \n    const deleteHandler = async (docId) => {\n      await api\n        .get(`/document/delete/${docId}`)\n        .then((res) => {\n          console.log(res)\n          notification.success({ message: 'Document Deleted SuccessFully.' });\n          getDocuments();\n        })\n        .catch((res) => {\n          notification.error({ message: 'Document Deletion Failed.' });\n        });\n    };\n  \n    const editHandler = async (docId) => {   \n        setModalFor('Edit');\n        setViewUpload(true);\n        await api.get(`/document/view/${docId}`).then((response) => {\n          setUploadData(response.data.data);\n          console.log(uploadData)\n        });\n    };\n  \n     const handleEdit = async () => {\n          if(uploadData.category === ''){\n            notification.warning({\n              message : \"Please provide a category.\"\n            })\n          }else\n          if(uploadData.contact === ''){\n            notification.warning({\n              message : \"Please provide a contact.\"\n            })\n          }else\n          if(uploadData.document === '' ){\n            notification.warning({\n              message : \"Please provide a document.\"\n            })\n          }else\n          if(uploadData.matter === '' ){\n            notification.warning({\n              message : \"Please provide a matter.\"\n            })\n          }else\n          if(uploadData.name === ''){\n            notification.warning({\n              message : \"Please provide a name.\"\n            })\n          }\n          else{\n          setDisable(true)\n          var formData = new FormData();\n          formData.set('document', uploadData.document);\n          formData.set('userId', userId);\n          api\n            .post(`/document/edit/${uploadData._id}`, formData,{\n              headers: { 'Content-Type': 'multipart/form-data' },\n            }).then(res=>{\n              console.log(res)\n            })\n            const newUploadData = {\n              _id: uploadData._id,\n              name: uploadData.name,\n              matter: uploadData.matter,\n              contact: uploadData.contact,\n              category: uploadData.category,\n            }\n          await api\n            .post(`/document/edit/${uploadData._id}`, newUploadData)\n            .then(function (response) {\n              \n              console.log(response)\n              notification.success({ message: 'Document edited.' });\n              \n              getDocuments();\n            })\n            .catch(function (response) {\n               console.log(response)\n              notification.error({ message: 'Document Upload Failed.' });\n            });\n          setTimeout(() => {\n            setDisable(false)\n            setViewUpload(false);\n          }, 600);\n        }\n    };\n  \n   \n    //funtions for category\n    const columnsForCatagory = [\n      \n      {\n        title: 'Category Name',\n        dataIndex: 'name',\n        key: '1',\n      },\n      \n  \n      {\n        title: 'Edit',\n        dataIndex: 'edit',\n        key: '6',\n        render: (_, record) => {\n          return (\n            <Button\n              className=\"btn-outline-info \"\n              onClick={() => {\n                editCategory(record);\n              }}\n            >\n              Edit\n            </Button>\n          );\n        },\n      },\n      {\n        title: 'Delete',\n        dataIndex: 'delete',\n        key: '7',\n        render: (_, record) => {\n          return (\n            <Popconfirm\n                      title=\"Are you sure delete this Catagory?\"\n                      onConfirm={()=>deleteCategory(record._id)}\n                      onCancel={()=>{}}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                    >\n                      <Button\n                        className=\" btn-outline-danger \"\n                      >\n                        Delete\n                      </Button>\n                    </Popconfirm>\n            \n          );\n        },\n      },\n      \n    ];\n    \n    const handleCategory = (item) => (e) => {\n      console.log(\"chnage\")\n      console.log(item)\n      console.log(e)\n    \n          CatagoryData[`${item}`] = e.target.value;\n          setCatagoryData({ ...CatagoryData });\n    \n      console.log(CatagoryData)\n    };\n  \n    const deleteCategory = async (docId) => {\n      await api\n        .get(`/document/category/delete/${docId}`)\n        .then((res) => {\n          notification.success({ message: 'Catagory Deleted SuccessFully.' });\n          getCategory();\n        })\n        .catch((res) => {\n          notification.error({ message: 'Catagory Deletion Failed.' });\n        });\n    };\n    \n    const editCategory =  (record) => {\n      \n      setModalFor('Edit');\n      setcataoryModal(true)\n      setCatagoryData(record)\n  \n  };\n    \n    \n  \n    const getCategory = ( ) =>{\n      let tempCatagory = [];\n      api.get(`/document/category/viewforuser/${userId}`).then((res) => {\n        setCategory(res.data.data)\n        console.log(res)\n        res.data.data.map((item, index) => {\n          const data = {\n            name : item.name,\n            key : index,\n            _id : item._id,\n            userId :userId\n          }\n          tempCatagory.push(data)\n        });\n        setCatagoryTable(tempCatagory);\n      });\n    \n     \n      //setLoading(false)\n    }\n    const AddCategory = ( ) =>{\n      if(CatagoryData.name === ''){\n        notification.warning({\n          message : \"Please provide a name.\"\n        })\n      }\n      else{\n        setDisable(true)\n        console.log(CatagoryData)\n      api\n        .post('/document/category/create/' , CatagoryData)\n        .then(function (response) {\n          console.log(response)\n          getCategory()\n          notification.success({ message: 'Category created.' });\n  \n          //getDocuments();\n        })\n        .catch(function (response) {\n          notification.error({ message: 'Failed.' });\n        });\n      setTimeout(() => {\n        setcataoryModal(false)\n        setDisable(false)\n      }, 600);\n      }\n      \n    }\n    const EditCategory = ( ) =>{\n      if(CatagoryData.name === ''){\n        notification.warning({\n          message : \"Please provide a name.\"\n        })\n      }\n      else{\n        setDisable(true)\n        console.log(CatagoryData)\n      api\n        .post('/document/category/edit/' + CatagoryData._id , CatagoryData)\n        .then(function (response) {\n          console.log(response)\n          getCategory()\n          notification.success({ message: 'Category Edited.' });\n  \n          //getDocuments();\n        })\n        .catch(function (response) {\n          notification.error({ message: 'Failed.' });\n        });\n      setTimeout(() => {\n        setcataoryModal(false)\n        setDisable(false)\n        console.log(CatagoryTable)\n      }, 600);\n      }\n      \n    }\n  \n    const CatagoryForm = () => (\n      <Modal\n        title={` ${modalFor} Catagory`}\n        visible={cataoryModal}\n        onCancel={() => setcataoryModal(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setcataoryModal(false)}>\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={Disable}\n            onClick={modalFor === 'Upload' ? AddCategory : EditCategory}\n          >\n            Submit\n          </Button>,\n        ]}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          fields={[\n            {\n              name: ['name'],\n              value: CatagoryData.name,\n            },\n            \n          ]}\n        >\n          <Form.Item\n            key=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input name!',\n              },\n            ]}\n          >\n            <Input onChange={handleCategory('name')} value={CatagoryData.name} />\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  \n    //common funtions\n    const layout = {\n      labelCol: {\n        span: 8,\n      },\n      wrapperCol: {\n        span: 16,\n      },\n    };\n    \n    \n    \n    const getISTDate = (dateInUTC) => {\n      var localDate = new Date(dateInUTC);\n      return localDate.toLocaleString();\n    };\n    const getMatterById = async (matterId) => {\n      await api.get(`/matter/view/${matterId}`).then((res) => {\n        let data = res.data.data.client !== null ? res.data.data.client._id : '-';\n        setUploadData({ ...uploadData, contact: data });\n      });\n    };\n    \n    \n    \n  \n    useEffect(() => {\n      getDocuments();\n      getCategory()\n    }, []);\n  \n    const uploadForm = () => (\n      <Modal\n        title={` ${modalFor} Document`}\n        visible={viewUpload}\n        onCancel={() => setViewUpload(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setViewUpload(false)}>\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={Disable}\n            onClick={modalFor === 'Upload' ? handleSubmit : handleEdit}\n          >\n            Submit\n          </Button>,\n        ]}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          fields={[\n            {\n              name: ['name'],\n              value: uploadData.name,\n            },\n            {\n              name: ['category'],\n              value: uploadData.category,\n            },\n            {\n              name: ['matter'],\n              value:\n                modalFor === 'Edit' ? uploadData.matter._id : uploadData.matter,\n            }, //todo\n            {\n    \n              name: ['document'],\n             // value: uploadData.document,\n            }\n          ]}\n        >\n          <Form.Item\n            key=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input name!',\n              },\n            ]}\n          >\n            <Input onChange={handleInput('name')} value={uploadData.name} />\n          </Form.Item>\n  \n          <Form.Item\n            key=\"matter\"\n            label=\"Matter\"\n            name=\"matter\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input matter',\n              },\n            ]}\n          >\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select a Matter\"\n              optionFilterProp=\"children\"\n              onChange={handleInput('matter')}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {matters.map((item, index) => (\n                <Option key={index} value={item._id}>\n                  {item.matterDescription}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            key=\"category\"\n            label=\"Category\"\n            name=\"category\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input category',\n              },\n            ]}\n          >\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select a Catagory\"\n              optionFilterProp=\"children\"\n              onChange={handleInput('category')}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {Category.map((item, index) => (\n                <Option key={index} value={item.name}>\n                  {item.name}\n                </Option>\n              ))}\n            </Select>\n          \n          </Form.Item>\n        \n            <Form.Item\n              key=\"document\"\n              label=\"Document\"\n              name=\"document\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your File!',\n                },\n              ]}\n            >\n              <Input\n                type=\"file\"\n                onChange={handleInput('document')}\n               // value={uploadData.document}\n              />\n            </Form.Item>\n        </Form>\n      </Modal>\n    );\n    \n    \n  \n   \n    \n    \n    const menu = (\n      <Menu>\n        <Menu.Item \n          onClick={() => {\n            setUploadData({\n              document: '',\n              _id: '',\n              name: '',\n              matter: '',\n              category: '',\n            }); //todo\n  \n            setViewUpload(true);\n            setModalFor('Upload');\n          }}\n          key=\"0\">\n          <span>Upload File</span>\n        </Menu.Item>\n  \n      </Menu>\n    );\n    \n    const ButtonForDocument = (\n      <div className=\"d-flex justify-content-center\">\n        <Dropdown overlay={menu} trigger={['click']}>\n          <Button className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n            Upload <DownOutlined />\n          </Button>\n        </Dropdown>\n      </div>\n    \n    );\n    const ButtonForCatagory = (\n      <div className=\"d-flex justify-content-center\">\n             <Button\n              onClick={()=>setcataoryModal(true)}\n            >\n              Add Category\n            </Button>\n        </div>\n    \n    );\n    const ButtonForTemplate = (\n      <div className=\"d-flex justify-content-center\">\n            <Button\n              onClick={() => {\n                setTemplateData({\n                  document: '',\n                  name :'',\n                  userId : userId,\n                  category: '',\n                }); //todo\n  \n                setTemplateModal(true);\n                setModalFor('Upload');\n              }}\n            >\n              Upload \n            </Button>\n        </div>\n    \n    );\n    \n    const [operations, setoperations] = useState(ButtonForDocument)\n    const callback = ( key ) => {\n      console.log(key);\n      if(key == 1){\n        setoperations(ButtonForDocument)\n      }else if(key == 2){\n        setoperations(ButtonForCatagory)\n      }if(key == 3){\n        setoperations(ButtonForTemplate)\n      }\n    }\n    return (\n      <Spin size = \"large\" spinning={Loading}>\n        \n        <Tabs\n            defaultActiveKey=\"1\"\n            tabBarExtraContent={operations}\n            onChange={callback}\n            className=\"card p-4 overflow-auto\"\n          >\n            <TabPane tab=\"Document\" key=\"1\">\n              {\n                uploadForm()\n              }\n    \n  \n              <Table \n              className=\"table-responsive\"\n              dataSource={\n                dataSrc.length === 0 && value === '' ? docs : dataSrc\n              }\n              columns={columnsForDocuments} />\n            </TabPane>\n            <TabPane tab=\"Category\" key=\"2\">\n              {CatagoryForm()}\n             <Table className=\"table-responsive\" dataSource={CatagoryTable} columns={columnsForCatagory} />\n            </TabPane>\n        </Tabs>\n       \n   \n      </Spin>\n       );\n  };\n  \n  export default Documents;\n  ","import React, { Component } from 'react';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport { Button } from 'antd';\n\nexport class ExportExcel extends Component {\n  constructor(props) {\n    super(props);\n    console.log('data in excel', props.dataSource);\n  }\n\n  render() {\n    return (\n      <div>\n        <table id=\"emp\" className=\"d-none\">\n          <thead>\n            <tr>\n              <th>Hours</th>\n              <th>Subject</th>\n              <th>Note</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.props.dataSource.map((p, index) => {\n              \n              return (\n                <tr key={index}>\n                  <td>{p.hours}</td>\n                  <td>{p.subject}</td>\n                  <td>{p.notes}</td>\n                  <td>{p.date}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <ReactHTMLTableToExcel\n          className=\"btn btn-outline-primary btn-sm excel-button\"\n          table=\"emp\"\n          filename=\"Notes\"\n          sheet=\"Sheet\"\n          buttonText=\"Export to Excel\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExportExcel;\n","import React, {useState, useEffect, useRef} from 'react';\nimport { Card, Button, Tabs, Table, Modal, notification, Space, Popconfirm, Spin  } from 'antd';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from '../../../../../resources/api';\nimport ReactDOM from 'react-dom'\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport ExportExcel from './ExportExcel';\n\n\nconst Notes = (props) => {\n    const [visible, setVisible] = useState(false)\n    const [data, setdata] = useState({})\n    const [disable, setdisable] = useState(false)\n    const userId = useSelector((state) => state.user.token.user._id);\n    const [tableData, settableData] = useState([])\n    const [editMode, seteditMode] = useState(false)\n    const [record, setrecord] = useState({})\n    const [editModal, seteditModal] = useState(false)\n    const formRef = useRef(null)\n    const [Loading, setLoading] = useState(true)\n    let timeError = \"\"\n  \n    const fetchNotes = ( ) => {\n        console.log(props)\n        api.get('/notes/viewforcontact/'+userId + '/' + props.id).then((res)=>{\n            console.log(res)\n            let notes = []\n            res.data.data.map((value , index)=>{\n                const temp = {\n                    _id : value._id,\n                    key : index,\n                    notes : value.notes,\n                    subject : value.subject,\n                    hours : value.hours ? value.hours : \"-\",\n                    date : value.date ? value.date.substring(0,10) : \"-\"\n                }\n                notes.push(temp)\n            })\n            settableData(notes)\n            setLoading(false)\n        })\n    }\n    useEffect(() => {\n        fetchNotes()\n    }, [])\n\n    const handleOk = (e) =>{\n        e.persist();\n        notification.destroy();\n        let valid = true\n        if (timeError !== '') {\n            valid = false\n            notification.error({ message: 'Invalid time,  Please enter time in the format : HH:MM:SS' });\n          }else\n        if(data.subject === '' || data.subject === undefined ){\n          valid = false\n          notification.warning({\n            message: 'Please provide a Subject',\n          });\n        }else\n        if(data.notes === '' || data.notes === undefined ){\n            valid = false\n            notification.warning({\n              message: 'Please provide a Note',\n            });\n          }\n\n        if(valid){\n            setdisable(true)\n            let notess = data;\n            notess.userId = userId\n            notess.contact = props.id\n            if(editMode){\n                api.post('/notes/edit/' + record._id , notess).then((res)=>{\n                    console.log(res)\n                    fetchNotes()\n                    notification.success({message : \"Note Edited.\"})\n                }).catch((err)=>{\n                    notification.error({message : \"Failure\"})\n                }).then(() => {\n                    ReactDOM.findDOMNode(formRef.current).reset()\n                    seteditMode(false)\n                    seteditModal(false)\n                    setdata({})\n                    setrecord({})\n                    setdisable(false)\n                 });\n            }else{\n                api.post('/notes/create', notess).then((res)=>{\n                    console.log(res)\n                    fetchNotes()\n                    notification.success({message : \"Note created.\"})\n                }).catch((err)=>{\n                    notification.error({message : \"Failure\"})\n                }).then(() => {\n                    ReactDOM.findDOMNode(formRef.current).reset()\n                    setVisible(false)\n                    setdata({})\n                    setrecord({})\n                    setdisable(false)\n                 });\n            }\n\n        }\n    }\n\n    const handleCancel = (e) =>{\n        \n        seteditMode(false)\n        seteditModal(false)\n        setVisible(false);\n        ReactDOM.findDOMNode(formRef.current).reset()\n    }\n\n    const handleDelete = record => {\n        api.get('/notes/delete/' + record._id).then((res)=>{\n        console.log(res)\n          fetchNotes()\n          notification.success({message : \"Note Deleted !\"})\n        \n        }).catch((err)=>{\n\n          notification.error({message : \"Failed to delete\"})\n        })\n        \n      }\n\n      const handleEdit = (record) => {\n        seteditMode(true)\n        seteditModal(true)\n        setrecord(record)\n        setdata(record)\n        console.log(record)\n      };\n\n    const columnsNotes = [\n        {\n            title: 'Hours',\n            dataIndex: 'hours',\n            key: '1',\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            key: '2',\n        },\n        {\n            title: 'Subject',\n            dataIndex: 'subject',\n            key: '3',\n        },\n        {\n            title: 'Note',\n            dataIndex: 'notes',\n            key: '4',\n        },\n        {\n            title: 'Edit',\n            dataIndex: 'edit',\n            key: '5',\n            render:(_,record)=>{\n                return (\n                    <Button onClick = {()=>handleEdit(record)} >\n                        Edit\n                    </Button>\n                )\n            }\n        },\n        {\n            title: 'Delete',\n            dataIndex: 'delete',\n            key: '5',\n            render:(_,record)=>{\n                return (\n                  <Popconfirm\n                    title=\"Are you sure delete this Note?\"\n                    onConfirm={() => handleDelete(record)}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Button danger>\n                        Delete\n                    </Button>\n                  </Popconfirm>\n                    \n                )\n            }\n        },\n    ]\n\n    const handleChange=(e)=>{\n        e.persist()\n        const { name, id, value , selectedIndex} = e.target\n        let newData = data\n        if (name === 'hours') {\n            timeError = '';\n            var timeValue = value;\n            if (timeValue == '' || timeValue.indexOf(':') < 0) {\n              timeError = 'Inavlid Time';\n              console.log(timeError);\n            } else {\n              var sHours = timeValue.split(':')[0];\n              var sMinutes = timeValue.split(':')[1];\n              var sSecs = timeValue.split(':')[2];\n              console.log(sSecs)\n              if (sHours == '' || isNaN(sHours) /*|| parseInt(sHours)>23 */) {\n                timeError = 'Inavlid Time';\n                console.log(timeError);\n              } else if (parseInt(sHours) == 0) sHours = '00';\n             // else if (sHours < 10) sHours = '0' + sHours;\n    \n              if (sMinutes == '' || isNaN(sMinutes) || parseInt(sMinutes) > 59) {\n                timeError = 'Inavlid Time';\n                console.log(timeError);\n              } else if (parseInt(sMinutes) == 0) sMinutes = '00';\n             // else if (sMinutes < 10) sMinutes = '0' + sMinutes;\n    \n              if (sSecs == '' || isNaN(sSecs) /*|| parseInt(sHours)>23 */) {\n                timeError = 'Inavlid Time';\n                console.log(timeError);\n              } else if (parseInt(sSecs) == 0) sSecs = '00';\n             // else if (sSecs < 10) sSecs = '0' + sSecs;\n              timeValue = sHours + ':' + sMinutes +':' + sSecs;\n            }\n            newData[name] = timeValue;\n            \n          }else{\n            newData[name] = value\n          }\n       \n        setdata(newData)\n        console.log(data)\n    }\n    \n    const exportPDF = () => {\n      console.log(tableData.length)\n      if(tableData.length == 0 ){\n        notification.warning({message : \"Please add notes before exporting\"})\n      }else{\n        const unit = 'pt';\n        const size = 'A4'; // Use A1, A2, A3 or A4\n        const orientation = 'portrait'; // portrait or landscape\n    \n        const marginLeft = 40;\n        const doc = new jsPDF(orientation, unit, size);\n    \n        doc.setFontSize(15);\n    \n        const title = 'Notes';\n        const headers = [['Hours','Subject', 'Note', 'Date']];\n    \n        let data = [];\n        tableData.map((val, index) => {\n          const td = [val.hours, val.subject, val.notes , val.date];\n          data.push(td);\n        });\n    \n        let content = {\n          startY: 50,\n          head: headers,\n          body: data,\n        };\n    \n        doc.text(title, marginLeft, 40);\n        doc.autoTable(content);\n        doc.save('notes.pdf');\n      }\n    };\n\n    return(\n      <Spin spinning={Loading} size = \"large\">\n        <div>\n        <div className=\"d-flex mb-2 title-component-header\">\n              <div className=\"title-header-name\">\n                <h5>Notes</h5>\n              </div>\n              <div className=\"d-flex extra-iteam-div\">\n                    <button\n                        className=\"btn  btn-outline-primary   btn-sm\"\n                        onClick={exportPDF}\n                    >\n                        Export to Pdf\n                    </button>\n                    <ExportExcel dataSource={tableData || []} />\n                    <button\n                        className=\"btn  btn-outline-primary   btn-sm\"\n                        onClick={()=> setVisible(true)}\n                    >\n                        Add Notes\n                    </button>\n                </div> \n            </div>\n            <Card\n                className=\"mb-4\"\n            >\n                <Table className=\"table-responsive\" dataSource={tableData}  columns={columnsNotes}/>\n            </Card>\n            <Modal\n                title=\"New Note\"\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                footer={[\n                    <Button  onClick={handleCancel}>\n                      Cancel\n                    </Button>,\n                    <Button type=\"primary\" disabled = {disable} onClick={handleOk}>\n                      Create\n                    </Button>,\n                  ]}\n            >\n                <Form\n                 id='myForm'\n                 className=\"form\"\n                 ref={ formRef } \n                 className=\"form-details\">\n                     <Form.Group controlId=\"duration\">\n                        <Form.Label>Hours</Form.Label>\n                        <Form.Control \n                        type=\"text\" \n                        name=\"hours\" \n                        placeholder = \"hh:mm:ss\"\n                        //defaultValue = {this.state.data.time}\n                        onChange={handleChange}/>\n                     </Form.Group>   \n                    <Form.Group>\n                        <Form.Label>Subject</Form.Label>\n                        <Form.Control\n                         name=\"subject\" \n                         type=\"text\"\n                         placeholder = \"Subject\"\n                         onChange={handleChange}/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Note</Form.Label>\n                        <Form.Control \n                        name=\"notes\" \n                        as=\"textarea\" \n                        rows=\"4\"\n                        placeholder = \"Note\"\n                        onChange={handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control \n                        name=\"date\" \n                        type=\"date\" \n                        onChange={handleChange} />\n                    </Form.Group>\n                </Form>\n            </Modal>\n            <Modal\n                title=\"Edit Note\"\n                visible={editModal}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                footer={[\n                    <Button  onClick={handleCancel}>\n                      Cancel\n                    </Button>,\n                    <Button type=\"primary\" disabled = {disable} onClick={handleOk}>\n                      Save\n                    </Button>,\n                  ]}\n            >\n                <Form \n                  id='myForm'\n                  className=\"form\"\n                  ref={ formRef }\n                  className=\"form-details\">\n                      <Form.Group controlId=\"duration\">\n                        <Form.Label>Duration</Form.Label>\n                        <Form.Control \n                        type=\"text\" \n                        name=\"hours\" \n                        defaultValue = {record.hours}\n                        onChange={handleChange}/>\n                     </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Subject</Form.Label>\n                        <Form.Control \n                        name=\"subject\" \n                        type=\"text\" \n                        defaultValue = {record.subject} \n                        onChange={handleChange}/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Note</Form.Label>\n                        <Form.Control name=\"notes\" as=\"textarea\" rows=\"4\" defaultValue = {record.notes} onChange={handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control name=\"date\" type=\"date\" defaultValue = {record.date} onChange={handleChange} />\n                    </Form.Group>\n                </Form>\n            </Modal>\n        </div>\n   \n      </Spin>\n         )\n}\nexport default Notes","import React, { useEffect, useState } from 'react';\r\nimport api from '../../../../resources/api';\r\nimport { Card, Button, Tabs, Spin } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Communication from './Views/Communication'\r\nimport Bills from './Views/bills'\r\nimport Documents from './Views/docs'\r\nimport Notes from './Views/Notes';\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nfunction CompanyView(props) {\r\n  let response = {};\r\n  let data = null;\r\n  const [url, setUrl] = useState('');\r\n  const [Loading, setLoading] = useState(true)\r\n  const userId = useSelector((state) => state.user.token.user._id);\r\n  const [address, setAddress] = useState();\r\n  const [Title, setTitle] = useState();\r\n  const [ID, setID] = useState();\r\n  const [cId, setcId] = useState(\"\")\r\n  const [Website, setWebsite] = useState();\r\n  const [Email, setEmail] = useState();\r\n  const [Number, setNumber] = useState();\r\n  const [Rate, setRate] = useState();\r\n  const [editableData, setEditableData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await api.get('/contact/view/' + props.location.state).then((res) => {\r\n        response = res.data.data;\r\n        console.log(response);\r\n        setValue();\r\n        setEditableData(response);\r\n      });\r\n    }\r\n    console.log(props.location.state);\r\n    fetchData();\r\n  }, []);\r\n\r\n  const setValue = () => {\r\n    const ttl = response.firstName + ' ' + response.lastName;\r\n  \r\n    const URL = response.image;\r\n    data = response;\r\n    const idx = response.billingClientId;\r\n    const rte = response.billingCustomRate;\r\n    const adrs = response.address.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p style={{ 'font-size': '15px' }}>{value.type}</p>\r\n          <p>{value.street}</p>\r\n          <p>{value.city}</p>\r\n          <p>{value.state}</p>\r\n          <p>{value.zipCode}</p>\r\n          <p>{value.country}</p>\r\n        </div>\r\n      );\r\n    });\r\n    const Web = response.website.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p>\r\n            {value.websiteType} : {value.website}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    const mail = response.emailAddress.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p>\r\n            {value.emailType} : {value.emailAddress}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    const Num = response.phone.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p>\r\n            {value.phoneType} : {value.phone}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    setUrl(URL);\r\n    setAddress(adrs);\r\n    setID(idx);\r\n    setRate(rte);\r\n    setTitle(ttl);\r\n    setEmail(mail);\r\n    setNumber(Num);\r\n    setWebsite(Web);\r\n    setcId(response._id)\r\n    setLoading(false)\r\n  };\r\n\r\n  const handleCreateBills = (e) =>{\r\n    console.log(props)\r\n    props.history.push('/create/bills')\r\n  }\r\n\r\n  const handleRecordPayment = ( ) => {\r\n    props.history.push('/manage/billing/record')\r\n  }\r\n  return (\r\n    <>\r\n      <Spin size=\"large\" spinning={Loading}>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"Dashboard\" key=\"1\" style={{ padding: '0px' }}>\r\n          <div className=\"d-flex flex-wrap mb-3\">\r\n            <div>\r\n              <h3>{Title}</h3>\r\n            </div>\r\n            <div className=\"green-span\">\r\n              <p>Client</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <Card\r\n              extra={\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={() =>\r\n                    props.history.push('/edit/contact', editableData)\r\n                  }\r\n                >\r\n                  Edit\r\n                </Button>\r\n              }\r\n              title=\"Contact Details\"\r\n              className=\"m-2 card-box\"\r\n            >\r\n              <Row>\r\n                <Col sm>\r\n                      <img\r\n                        height=\"200\"\r\n                        width=\"200\"\r\n                        src={url}\r\n                        alt=\"No image\"\r\n                      ></img>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"py-2\">\r\n                <Col sm><span className=\"table-span-dark\">Name</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{Title}</span></Col>\r\n              </Row>\r\n              <Row className=\"py-2\">\r\n                <Col sm><span className=\"table-span-dark\">Email Address</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{Email}</span></Col>\r\n              </Row>\r\n              <Row className=\"py-2\">\r\n                <Col sm><span className=\"table-span-dark\">Phone Number</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{Number}</span></Col>\r\n              </Row>\r\n              <Row className=\"py-2\">\r\n                <Col sm><span className=\"table-span-dark\">Website</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{Website}</span></Col>\r\n              </Row>\r\n              <Row className=\"py-2\">\r\n                <Col sm><span className=\"table-span-dark\">Address</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{address}</span></Col>\r\n              </Row>\r\n            </Card>\r\n\r\n            <Card title=\"Billing Information\" className=\"m-2 card-box\">\r\n              <Row className=\"py-2\">\r\n                <Col sm><span className=\"table-span-dark\">ID</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{ID}</span></Col>\r\n              </Row>\r\n              <Row className=\"py-2\">\r\n                <Col sm><span className=\"table-span-dark\">Rate</span></Col>\r\n                <Col sm><span className=\"table-span-light\">{Rate}</span></Col>\r\n              </Row>\r\n            </Card>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab=\"Communication\" key=\"4\">\r\n          <Communication id = {cId}></Communication>\r\n        </TabPane>\r\n        \r\n        <TabPane tab=\"Notes\" key=\"6\">\r\n          <Notes  id = {cId} />\r\n        </TabPane>\r\n        <TabPane tab=\"Document\" key=\"7\">\r\n\r\n          \r\n            <Documents\r\n            id = {cId}\r\n            matters={props.location.state.matters}\r\n            userId={props.location.state.userId}\r\n            matterId={props.location.state.id}\r\n          />\r\n     \r\n        </TabPane>\r\n        <TabPane tab=\"Bills\" key=\"9\">\r\n          <Bills handleRecordPayment={handleRecordPayment} handleBills = {handleCreateBills}  id = {cId}></Bills>\r\n        </TabPane>\r\n              \r\n        <TabPane tab=\"Transactions\" key=\"10\"></TabPane>\r\n      </Tabs>\r\n    \r\n      </Spin>\r\n    </>\r\n  );\r\n}\r\nexport default CompanyView;\r\n"],"sourceRoot":""}