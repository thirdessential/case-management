{"version":3,"sources":["Demo/Maps/GoogleMap/index.js"],"names":["polygon","lat","lng","GoogleMap","React","Component","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","this","setState","onInfoWindowClose","onMapClicked","componentDidMount","renderAutoComplete","componentDidUpdate","prevProps","map","onSubmit","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","render","xl","Header","Title","as","Body","style","height","width","centerAroundCurrentLocation","className","zoom","name","onClick","onClose","visible","Control","ref","type","placeholder","Append","center","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","path","GoogleApiWrapper","apiKey"],"mappings":"mIAAA,kGAMA,MAAMA,EAAU,CACZ,CAAEC,IAAK,WAAYC,IAAK,YACxB,CAAED,IAAK,WAAYC,IAAK,YACxB,CAAED,IAAK,WAAYC,IAAK,aAG5B,MAAMC,UAAkBC,IAAMC,UAAW,eAAD,oBAEpCC,MAAQ,CACJC,aAAc,GACdC,cAAe,GACfC,mBAAmB,EACnBC,SAAU,MANsB,KASpCC,cAAgB,CAACC,EAAOC,IACpBC,KAAKC,SAAS,CACVR,aAAcM,EACdL,cAAeI,EACfH,mBAAmB,IAbS,KAgBpCO,kBAAoB,IAChBF,KAAKC,SAAS,CACVR,aAAc,KACdE,mBAAmB,IAnBS,KAsBpCQ,aAAe,KACPH,KAAKR,MAAMG,mBACXK,KAAKC,SAAS,CACVR,aAAc,KACdE,mBAAmB,KAI/BS,oBACIJ,KAAKK,qBAGTC,mBAAmBC,GACXP,KAAKF,QAAUS,EAAUC,KAAKR,KAAKK,qBAG3CI,SAASC,GACLA,EAAEC,iBAGNN,qBAAsB,MAAD,EACOL,KAAKF,MAArBc,EADS,EACTA,OAAQJ,EADC,EACDA,IAEhB,IAAKI,IAAWJ,EAAK,OAErB,MAAMK,EAAe,IAAID,EAAOE,KAAKC,OAAOC,aAAahB,KAAKa,cAC9DA,EAAaI,OAAO,SAAUT,GAE9BK,EAAaK,YAAY,gBAAiB,KACtC,MAAMC,EAAQN,EAAaO,WAEtBD,EAAME,WAEPF,EAAME,SAASC,SAAUd,EAAIe,UAAUJ,EAAME,SAASC,WAEtDd,EAAIgB,UAAUL,EAAME,SAASI,UAC7BjB,EAAIkB,QAAQ,KAGhB1B,KAAKC,SAAS,CAAEL,SAAUuB,EAAME,SAASI,cAKjDE,SAAU,MACE/B,EAAaI,KAAKR,MAAlBI,SAER,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKgC,GAAI,GACL,kBAAC,IAAD,KACI,kBAAC,IAAKC,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,UAEJ,kBAAC,IAAKC,KAAN,KACI,yBAAKC,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjC,kBAAC,MAAD,CACIC,6BAA2B,EAC3BC,UAAU,MACVzB,OAAQZ,KAAKF,MAAMc,OACnB0B,KAAM,SAM1B,kBAAC,IAAD,CAAKV,GAAI,GACL,kBAAC,IAAD,KACI,kBAAC,IAAKC,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,mBAEJ,kBAAC,IAAKC,KAAN,KACI,yBAAKC,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjC,kBAAC,MAAD,CACIC,6BAA2B,EAC3BxB,OAAQZ,KAAKF,MAAMc,OACnByB,UAAU,MACVC,KAAM,IACN,kBAAC,SAAD,CACIC,KAAK,cACL3C,SAAU,CAAET,IAAK,WAAYC,IAAK,cAGtC,kBAAC,SAAD,CACImD,KAAK,cACL3C,SAAU,CAAET,IAAK,WAAYC,IAAK,cAGtC,kBAAC,SAAD,WAMpB,kBAAC,IAAD,CAAKwC,GAAI,GACL,kBAAC,IAAD,KACI,kBAAC,IAAKC,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,uBAEJ,kBAAC,IAAKC,KAAN,KACI,yBAAKC,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjC,kBAAC,MAAD,CACIC,6BAA2B,EAC3BC,UAAU,MACVzB,OAAQZ,KAAKF,MAAMc,OACnB4B,QAASxC,KAAKG,aACdmC,KAAM,IAEN,kBAAC,SAAD,CACIC,KAAK,cACL3C,SAAU,CAAET,IAAK,WAAYC,IAAK,YAClCoD,QAASxC,KAAKH,gBAGlB,kBAAC,SAAD,CACI0C,KAAK,cACL3C,SAAU,CAAET,IAAK,WAAYC,IAAK,YAClCoD,QAASxC,KAAKH,gBAGlB,kBAAC,SAAD,CAAQ0C,KAAK,mBAAmBC,QAASxC,KAAKH,gBAE9C,kBAAC,aAAD,CACIE,OAAQC,KAAKR,MAAMC,aACnBgD,QAASzC,KAAKE,kBACdwC,QAAS1C,KAAKR,MAAMG,mBACpB,6BACI,4BAAKK,KAAKR,MAAME,cAAc6C,aAQ1D,kBAAC,IAAD,CAAKX,GAAI,GACL,kBAAC,IAAD,KACI,kBAAC,IAAKC,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,eAEJ,kBAAC,IAAKC,KAAN,KACI,kBAAC,IAAD,CAAMvB,SAAUT,KAAKS,UACjB,kBAAC,IAAD,CAAY4B,UAAU,QAClB,kBAAC,IAAKM,QAAN,CAAcC,IAAKA,GAAQ5C,KAAKa,aAAe+B,EAAMC,KAAK,OAAOC,YAAY,+BAC7E,kBAAC,IAAWC,OAAZ,KACI,kBAAC,IAAD,CAAQF,KAAK,UAAb,aAIZ,yBAAKZ,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjC,kBAAC,MAAD,eACIE,UAAU,OACNrC,KAAKF,MAFb,CAGIkD,OAAQpD,EACRwC,6BAA2B,IAC3B,kBAAC,SAAD,CAAQxC,SAAUA,SAMtC,kBAAC,IAAD,CAAKgC,GAAI,GACL,kBAAC,IAAD,KACI,kBAAC,IAAKC,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,YAEJ,kBAAC,IAAKC,KAAN,KACI,yBAAKC,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjC,kBAAC,MAAD,CACIC,6BAA2B,EAC3BxB,OAAQZ,KAAKF,MAAMc,OACnByB,UAAU,MACVC,KAAM,IACN,kBAAC,UAAD,CACIW,UAAU,UACVC,YAAa,IACbC,MAAO,CAACjE,GACRkE,YAAY,UACZC,cAAe,GACfC,aAAc,SAOtC,kBAAC,IAAD,CAAK1B,GAAI,GACL,kBAAC,IAAD,KACI,kBAAC,IAAKC,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,aAEJ,kBAAC,IAAKC,KAAN,KACI,yBAAKC,MAAO,CAACC,OAAQ,QAASC,MAAO,SACjC,kBAAC,MAAD,CACIC,6BAA2B,EAC3BxB,OAAQZ,KAAKF,MAAMc,OACnByB,UAAU,MACVC,KAAM,IACN,kBAAC,WAAD,CACIW,UAAU,UACVC,YAAa,IACbK,KAAMrE,EACNkE,YAAY,UACZC,cAAe,GACfC,aAAc,YAa3CE,qCAAiB,CAC5BC,OAAQ,2CADGD,CAEZnE","file":"static/js/80.820c4d5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card, Form, InputGroup, Button} from 'react-bootstrap';\r\nimport {Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon}  from 'google-maps-react';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nconst polygon = [\r\n    { lat: 21.2105052, lng: 72.8653491 },\r\n    { lat: 21.2206445, lng: 72.8704506 },\r\n    { lat: 21.2183091, lng: 72.8631228 }\r\n];\r\n\r\nclass GoogleMap extends React.Component {\r\n\r\n    state = {\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        showingInfoWindow: false,\r\n        position: null\r\n    };\r\n\r\n    onMarkerClick = (props, marker) =>\r\n        this.setState({\r\n            activeMarker: marker,\r\n            selectedPlace: props,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onInfoWindowClose = () =>\r\n        this.setState({\r\n            activeMarker: null,\r\n            showingInfoWindow: false\r\n        });\r\n\r\n    onMapClicked = () => {\r\n        if (this.state.showingInfoWindow)\r\n            this.setState({\r\n                activeMarker: null,\r\n                showingInfoWindow: false\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.renderAutoComplete();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps.map) this.renderAutoComplete();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    renderAutoComplete() {\r\n        const { google, map } = this.props;\r\n\r\n        if (!google || !map) return;\r\n\r\n        const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\r\n        autocomplete.bindTo('bounds', map);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            const place = autocomplete.getPlace();\r\n\r\n            if (!place.geometry) return;\r\n\r\n            if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\r\n            else {\r\n                map.setCenter(place.geometry.location);\r\n                map.setZoom(17);\r\n            }\r\n\r\n            this.setState({ position: place.geometry.location });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { position } = this.state;\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Basic</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        zoom={14}\r\n                                    />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Simple Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={13}>\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                        />\r\n\r\n                                        <Marker />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Click-Able Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        onClick={this.onMapClicked}\r\n                                        zoom={12}>\r\n\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker name=\"Current Location\" onClick={this.onMarkerClick} />\r\n\r\n                                        <InfoWindow\r\n                                            marker={this.state.activeMarker}\r\n                                            onClose={this.onInfoWindowClose}\r\n                                            visible={this.state.showingInfoWindow}>\r\n                                            <div>\r\n                                                <h3>{this.state.selectedPlace.name}</h3>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Geo-Coding</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Form onSubmit={this.onSubmit}>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Form.Control ref={ref => (this.autocomplete = ref)} type='text' placeholder='Search your favorite place' />\r\n                                        <InputGroup.Append>\r\n                                            <Button type=\"submit\">Search</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                </Form>\r\n                                <div style={{height: '240px', width: '100%'}}>\r\n                                    <Map\r\n                                        className='map'\r\n                                        {...this.props}\r\n                                        center={position}\r\n                                        centerAroundCurrentLocation >\r\n                                        <Marker position={position} />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polygon</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polygon\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            paths={[polygon]}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={2}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polyline</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polyline\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            path={polygon}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={5}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'\r\n})(GoogleMap);"],"sourceRoot":""}