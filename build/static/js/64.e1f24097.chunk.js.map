{"version":3,"sources":["App/containers/Communication/ExcelExport.js","App/containers/Communication/communication.js"],"names":["ExportExcel","Component","constructor","props","super","console","log","dataSource","render","this","id","className","map","value","index","key","addTime","logType","time","date","subject","matter","from","to","table","filename","sheet","buttonText","timeError","matters","communication","contact","option","optns","matterkey","fromKey","toKey","user","JSON","parse","window","localStorage","getItem","name","token","firstName","lastName","Communication","React","convertTime","serverdate","toutc","Date","toUTCString","showModal","type","setState","secure","email","phone","state","handleOk","notification","destroy","error","message","data","body","disable","editEmail","editPhone","fromId","toId","userId","api","post","then","res","componentDidMount","success","catch","err","ReactDOM","findDOMNode","messageForm","reset","billable","nonBillable","qty","rate","invoice","setTimeout","handleSecure","editSecure","getHours","getMinutes","_id","get","emailAddress","length","number","text","sms","mobile","content","smsres","warning","handleCancel","tableData","loading","emailData","phoneData","completeData","location","val","matterDescription","contacts","temp","matterDesc","substring","push","handleChange","e","persist","touched","target","selectedIndex","newData","timeValue","indexOf","sHours","split","sMinutes","sSecs","isNaN","parseInt","handleEdit","record","handleDelete","setTableData","columns","title","dataIndex","_","variant","onClick","onConfirm","okText","cancelText","danger","size","spinning","doc","jsPDF","setFontSize","td","startY","head","autoTable","save","bodyStyle","style","visible","onOk","onCancel","footer","disabled","Form","ref","form","Row","Col","sm","Group","Label","Control","as","placeholder","onChange","controlId","rows","defaultValue","required","connect"],"mappings":"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","file":"static/js/64.e1f24097.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\n\nexport class ExportExcel extends Component {\n  constructor(props) {\n    super(props);\n    console.log('data in excel', props.dataSource);\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <div>\n        <table id=\"matter\" className=\"d-none\">\n          <thead>\n            <tr>\n              <th>S.No</th>\n              <th>Hours</th>\n              <th>type</th>\n              <th>Time</th>\n              <th>Date</th>\n              <th>Subject</th>\n              <th>Matter</th>\n              <th>from</th>\n              <th>to</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.props.dataSource.map((value, index) => {\n              return (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{value.addTime}</td>\n                  <td>{value.logType}</td>\n                  <td>{value.time}</td>\n                  <td>{value.date}</td>\n                  <td>{ value.subject }</td>\n                  <td>{value.matter}</td>\n                  <td>{value.from}</td>\n                  <td>{value.to}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <ReactHTMLTableToExcel\n          className=\"btn btn-outline-primary btn-sm excel-button\"\n          table=\"matter\"\n          filename=\"Communications\"\n          sheet=\"Sheet\"\n          buttonText=\"Export to Excel\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExportExcel;\n","import React from 'react'\nimport { Table , Button, Modal , Card, notification, Space, Popconfirm, Spin } from 'antd'\nimport { useSelector, connect } from 'react-redux';\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport api from '../../../resources/api'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport ReactDOM from 'react-dom'\nimport ExportExcel from './ExcelExport'\n\n\nlet timeError = \"\" ;\nlet matters = {};\nlet communication = {};\nlet contact = {}\nlet option = null\nlet optns = null\nlet matterkey = null\nlet fromKey = null\nlet toKey = null\nconst user = JSON.parse(window.localStorage.getItem('Case.user'))\nconst name = user.token.user.firstName + \" \" + user.token.user.lastName;\nconsole.log(user.token.user)\n\nclass Communication extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            phone : false,\n            email : false,\n            secure : false,\n            tableData : [],\n            data : {\n                subject : \"\",\n                body : \"\",\n                to : \"\",\n                from : user.token.user._id\n            },\n            loading : true,\n            emailData : [],\n            phoneData : [],\n            completeData : [],\n            tableData : [],\n            editEmail : false,\n            editPhone : false,\n            editSecure : false,\n            disable : false\n        \n        }\n    }\n    convertTime = (serverdate) => {\n      var date = new Date(serverdate);\n      // convert to utc time\n      var toutc = date.toUTCString();\n      //convert to local time\n      var locdat = new Date(toutc + ' UTC');\n      return locdat;\n    };\n    componentDidMount() {\n     if(this.props.location.state === \"phone\"){\n        this.setState({\n          phone : true\n        })\n     }else{\n      this.setState({\n        phone : false\n      })\n     }\n     if(this.props.location.state === \"email\"){\n      this.setState({\n        email : true\n      })\n   }else{\n    this.setState({\n      email : false\n    })\n   }\n     api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n       matters = res\n            option = res.data.data.map((val, index)=>{\n                 return <option value = {val._id}>{val.matterDescription}</option>\n             })\n         }).then(()=>{\n             console.log(option)\n             this.setState({option : option})\n         })\n\n      api.get('/contact/viewforuser/'+this.props.userId).then((res)=>{\n        contact = res\n          optns = res.data.data.map((value, index)=>{\n  \n              return <option id={index}>{value.firstName + \" \" + value.lastName}</option>\n             })\n       }).then(()=>{this.setState({contacts : optns})})\n    \n      api.get('/communication/viewforuser/' + this.props.userId).then((res) => {\n        communication = res.data.data;\n       console.log(communication)\n\n        let emailData = [];\n        let phoneData = [];\n        let completeData = [];\n        \n        res.data.data.map((val, index) => {\n        \n          const temp = {\n            key: index,\n            logType: val.logType,\n            type: val.logType,\n            id: val._id,\n            addTime : val.addTime ? val.addTime : \"-\",\n            time: val.time ? val.time : '',\n            matterDesc: val.matter ? val.matter.matterDescription : '-',\n            matter : val.matter ? val.matter._id : \"\",\n            from: val.from ? val.from.firstName + \" \" + val.from.lastName  : '-',\n            fromId : val.from ? val.from._id : \"\",\n            to: val.to ? val.to.firstName + \" \" + val.to.lastName  : '-',\n            toId : val.to ? val.to._id : \"\",\n            subject: val.subject ? val.subject : '-',\n            body: val.body,\n            date: val.date ? val.date.substring(0,10) : \"-\"      \n          };\n          if (val.logType === 'email' || val.logType === \"secure\") {\n            emailData.push(temp);\n          }\n          if ( val.logType === \"secure\") {\n            temp.from = name\n            temp.type = \"secure\"\n            temp.logType = \"email\"\n            emailData.push(temp);\n          }\n          if (val.logType === 'phone') {\n            phoneData.push(temp);\n          }\n          \n          completeData.push(temp);\n        });\n        this.setState({\n          completeData: completeData,\n          phoneData: phoneData,\n          emailData: emailData,\n          tableData: completeData,\n          loading : false\n        });\n      });\n      /*\n      const time = window.localStorage.getItem('timer');\n      let hours = Math.floor(time / 3600);\n      let minutes = Math.floor(time / 60);\n      if (minutes >= 59) {\n        minutes = minutes % 60;\n      }\n  \n      //   const Seconds = time % 60;\n      const data = this.state.data;\n      data.time = hours + ':' + minutes;\n      this.setState({ data: data, touched: true });\n      console.log(this.state);\n      */\n\n    }\n    showModal = (type) => {\n      if(type === \"secure\"){\n        this.setState({\n            secure : true,\n          });\n        }else\n        if(type===\"email\"){\n            this.setState({\n                email : true,\n              });\n        }else\n        if(type===\"phone\"){\n            this.setState({\n                phone : true,\n              });\n        }\n      console.log(this.state)\n      };\n    \n      handleOk = type => {    \n        notification.destroy()\n        if (timeError !== '') {\n          notification.error({ message: 'Invalid time, Please enter time in the format : HH:MM:SS' });\n        }else\n        if(this.state.data.subject == \"\"){\n            notification.error({message : \"Please add a subject\"})\n        }else\n        if(this.state.data.body == \"\"){\n            notification.error({message : \"Please add a body\"})\n        }else{\n          this.setState({\n            disable : true\n          })\n           \n            if(this.state.editEmail || this.state.editPhone){\n\n              let data = this.state.data\n              console.log(data)\n              \n              if(fromKey == null){\n                data.from = data.fromId\n              }\n              if(toKey == null){\n                data.to = data.toId\n              }\n            if(type === \"email\"){\n              data.logType = \"email\"\n              this.setState({email : false})\n            }else\n            if(type === \"phone\"){\n              data.logType = \"phone\"\n              this.setState({phone : false})\n            }\n            data.userId = this.props.userId;\n            console.log(data)\n            api\n              .post('/communication/edit/'+ this.state.data.id, data)\n              .then((res) => {\n                console.log(res)\n                this.componentDidMount()            \n                this.setState({\n                  disable : false\n                  \n                })\n                notification.success({ message: 'Log Edited !' });\n              })\n              .catch((err) => {\n                notification.error({ message: 'Failed' });\n              })\n              .then(() => {\n                ReactDOM.findDOMNode(this.messageForm).reset()\n                matterkey = null\n                fromKey = null\n                toKey = null\n                \n                this.setState({\n                  editPhone : false,\n                  editEmail: false,\n                  disable : false,\n                  data: {\n                    billable: true,\n                    nonBillable: false,\n                    date: '',\n\n                    qty: '1.0',\n                    rate: '',\n                    invoice: 'Unbilled',\n                  },\n                });\n                \n               \n                setTimeout(() => {\n                  //window.location.reload();\n                }, 1500)\n              });\n  \n\n            }else{\n              let data = this.state.data\n            if(type === \"email\"){\n              data.logType = \"email\"\n              this.setState({email : false})\n            }else\n            if(type === \"phone\"){\n              data.logType = \"phone\"\n              this.setState({phone : false})\n            }\n            data.userId = this.props.userId;\n            console.log(data)\n            api\n              .post('/communication/create', data)\n              .then((res) => {\n                console.log(res)\n                this.setState({\n                  disable : false\n                })\n                this.componentDidMount()\n                notification.success({ message: 'Log Added !' });\n              })\n              .catch((err) => {\n                notification.error({ message: 'Failed' });\n              }).then(()=>{\n                \n                ReactDOM.findDOMNode(this.messageForm).reset()\n              })\n             \n  \n            }\n        }   \n      };\n\n      handleSecure = () => {    \n        notification.destroy()\n        if(this.state.data.to == \"\"){\n          notification.error({message : \"Please add a contact to send message\"})\n        }else\n        if(this.state.data.subject == \"\"){\n            notification.error({message : \"Please add a subject\"})\n        }else\n        if(this.state.data.body == \"\"){\n            notification.error({message : \"Please add a body\"})\n        }else{\n          this.setState({\n            disable : true\n          })\n           \n            if(this.state.editSecure){\n\n              let data = this.state.data\n              data.logType = \"secure\"\n              data.userId = this.props.userId;\n            console.log(data)\n            api\n              .post('/communication/edit/'+ this.state.data.id, data)\n              .then((res) => {\n                console.log(res)\n                this.componentDidMount()            \n                this.setState({\n                  disable : false\n                  \n                })\n                notification.success({ message: 'Log Edited !' });\n              })\n              .catch((err) => {\n                notification.error({ message: 'Failed' });\n              })\n              .then(() => {\n                ReactDOM.findDOMNode(this.messageForm).reset()\n                \n                this.setState({\n                  editSecure : false,\n                  secure: false,\n                  disable : false,\n                  data: {\n                    billable: true,\n                    nonBillable: false,\n                    date: '',\n                    to : \"\",\n                    qty: '1.0',\n                    rate: '',\n                    invoice: 'Unbilled',\n                  },\n                });\n                \n               \n                setTimeout(() => {\n                  //window.location.reload();\n                }, 1500)\n              });\n  \n\n            }else{\n              let data = this.state.data\n              data.logType = \"secure\"\n              data.userId = this.props.userId;\n              data.time = new Date().getHours() + \":\" + new Date().getMinutes()\n              data.from = user.token.user._id\n              console.log(data)\n\n              api.get(`/contact/view/${data.to}`).then((res)=>{\n                console.log(res)\n                let emailAddress = res.data.data.emailAddress.length != 0 ? res.data.data.emailAddress[0].emailAddress : \"\"\n                let number = res.data.data.phone.length != 0 ? res.data.data.phone[0].phone : \"\"\n                console.log(data)\n                let email = {\n                  to: emailAddress,\n                  subject : data.subject,\n                  text : data.body,\n                  date  : new Date()\n\n                }\n                let sms = {\n                  mobile : number,\n                  content : data.body\n                }\n                console.log(email)\n                console.log(sms)\n                if(number !== \"\"){\n                  api.post(`/communication/sendsms`, sms ).then((smsres)=>{\n                    console.log(smsres)\n                    notification.success({\n                      message : \"SMS Sent\"\n                    })\n                  \n                  }).catch((err)=>{\n                    console.log(err)\n                    notification.error({message : \"Failed to send the sms\"})\n                  })\n                }    \n                if(emailAddress !== \"\"){\n                  api.post(`/communication/sendemail`, email ).then((email)=>{\n                    console.log(email)\n                    notification.success({\n                      message : \"Email Sent\"\n                    })\n                    api\n                    .post('/communication/create', data)\n                    .then((res) => {\n                      console.log(res)              \n                      this.componentDidMount()\n                      notification.success({ message: 'Log Added !' });\n                    })\n                    .catch((err) => {\n                      notification.error({ message: 'Failed' });\n                    }).then(()=>{\n                      this.setState({\n                        disable : false,\n                        secure : false,\n                        editSecure : false\n                      })\n                      ReactDOM.findDOMNode(this.messageForm).reset()\n                    })\n                  }).catch((err)=>{\n                    console.log(err)\n                    notification.error({message : \"Failed to send the email\"})\n                  })\n                }  \n                if (number === \"\" && emailAddress === \"\") {\n                  notification.warning({\n                    message : \"Selected contact doesn't have a emailAddress and a phone number\"\n                  })\n                  this.setState({\n                    disable : false,\n                  //  secure : false\n                  })\n                }      \n              })\n            }\n        }   \n      };\n    \n      handleCancel = type => {\n       // ReactDOM.findDOMNode(this.messageForm).reset()\n        matterkey = null\n        fromKey = null\n        toKey = null\n        if(type===\"secure\"){\n          this.setState({\n              secure : false,\n              editSecure : false,\n              disable : false,\n              data : {\n                subject : \"\",\n                body : \"\",\n                to: \"\",\n                from : name\n            },\n       \n            });\n            console.log(this.state)\n      }else\n        if(type===\"email\"){\n            this.setState({\n                email : false,\n                phone : false,\n                disable : false,\n                editEmail: false,\n                editSecure :false,\n                secure : false,\n                data : {\n                  subject : \"\",\n                  body : \"\",\n                  to : \"\",\n                  from : name\n              },\n         \n              });\n              console.log(this.state)\n        }else\n        if(type===\"phone\"){\n            this.setState({\n                phone : false,\n                email : false,\n                editPhone: false,\n                disable : false,\n                data : {\n                  subject : \"\",\n                  body : \"\",\n                  to : \"\",\n                  from : name\n              },\n              });\n              console.log(this.state)\n        \n        }\n        \n        setTimeout(() => {\n        //  window.location.reload();\n        }, 500);\n        \n       \n      \n      };\n\n    render(){\n      const handleChange = (e) => {\n        e.persist();\n        this.setState({ touched: false });\n        const { name, id, value, selectedIndex } = e.target;\n        let newData = this.state.data;\n\n        if (name === 'matter') {\n\n          if (selectedIndex >= 1) {\n            matterkey = \"\"\n           // console.log(matters.data.data[selectedIndex - 1]._id)\n            newData[name] = value;\n          //  console.log(\"inside matter > 1 \")\n          } else {\n            newData[name] = '';\n          //  console.log(\"inside matte.....r\")\n          }\n\n        }else\n        if (name === 'to' || name === 'from') {\n          console.log(matters)\n          if (selectedIndex >= 1) {\n            name === 'to' ? toKey = \"\" : fromKey = \"\"\n            newData[name] = contact.data.data[selectedIndex - 1]._id;\n          } else {\n            newData[name] = '';\n          }\n\n        } else \n         if (name === 'addTime') {\n          timeError = '';\n          var timeValue = value;\n          if (timeValue == '' || timeValue.indexOf(':') < 0) {\n            timeError = 'Inavlid Time';\n            console.log(timeError);\n          } else {\n            var sHours = timeValue.split(':')[0];\n            var sMinutes = timeValue.split(':')[1];\n            var sSecs = timeValue.split(':')[2];\n            console.log(sSecs)\n            if (sHours == '' || isNaN(sHours) /*|| parseInt(sHours)>23 */) {\n              timeError = 'Inavlid Time';\n              console.log(timeError);\n            } else if (parseInt(sHours) == 0) sHours = '00';\n           // else if (sHours < 10) sHours = '0' + sHours;\n  \n            if (sMinutes == '' || isNaN(sMinutes) || parseInt(sMinutes) > 59) {\n              timeError = 'Inavlid Time';\n              console.log(timeError);\n            } else if (parseInt(sMinutes) == 0) sMinutes = '00';\n           // else if (sMinutes < 10) sMinutes = '0' + sMinutes;\n  \n            if (sSecs == '' || isNaN(sSecs) /*|| parseInt(sHours)>23 */) {\n              timeError = 'Inavlid Time';\n              console.log(timeError);\n            } else if (parseInt(sSecs) == 0) sSecs = '00';\n           // else if (sSecs < 10) sSecs = '0' + sSecs;\n            timeValue = sHours + ':' + sMinutes +':' + sSecs;\n          }\n          newData[name] = timeValue;\n          this.setState({ data: newData });\n        } \n        else \n        {\n            console.log(\"inside last\")\n            newData[name] = value;\n            this.setState({ data: newData });\n          }\n    \n        console.log(this.state);\n      };\n        const handleEdit = record => {\n          /*\n            if(record.type===\"secure\"){\n              this.setState({\n                editSecure : true,\n                  data : record ,\n                });\n            }else\n            */\n           console.log(record)\n            if(record.logType === \"email\"){\n              if(record.type === \"secure\"){\n                this.setState({\n                  editSecure : true\n                  });\n              }else{\n                this.setState({\n                  editEmail : true,\n                    data : record ,\n                  });\n              }\n              \n            }else\n            if(record.logType===\"phone\"){\n              this.setState({\n                editPhone : true,\n                  data : record  \n                });\n            }\n            console.log(record)\n                \n          }\n            \n            const handleDelete = record => {\n            \n              api.get('/communication/delete/'+record.id).then((res)=>{\n                this.componentDidMount()\n                notification.success({message : \"Log Deleted !\"})\n                setTimeout(()=>{\n                  //window.location.reload()\n                },1500)\n              }).catch((err)=>{\n    \n                notification.error({message : \"Failed to delete\"})\n              })\n              \n            }\n        const setTableData = (type)=>{\n            if(type===\"email\"){\n              this.setState({\n                tableData: this.state.emailData,\n              });\n           }else\n           if(type===\"phone\"){\n            this.setState({\n              tableData: this.state.phoneData,\n            });\n            }else\n            if(type===\"all\"){\n              this.setState({\n                tableData: this.state.completeData,\n              });\n            }\n          }\n        const columns = [\n            {\n                title: 'Hours',\n                dataIndex: 'addTime',\n                key: 'addTime',\n              },\n            {\n              title: 'Type',\n              dataIndex: 'logType',\n              key: 'logType',\n            },\n            {\n              title: 'Time',\n              dataIndex: 'time',\n              key: 'time',\n            },\n            {\n              title: 'Date',\n              dataIndex: 'date',\n              key: 'date',\n            },\n            {\n              title: 'Subject',\n              dataIndex: 'subject',\n              key: 'subject',\n            },\n            {\n                title: 'Matter',\n                dataIndex: 'matterDesc',\n                key: 'matterDesc',\n              },\n            {\n              title: 'From',\n              dataIndex: 'from',\n              key: 'from',\n            },\n              {\n                title: 'To',\n                dataIndex: 'to',\n                key: 'to',\n              },\n            \n              {\n                title:'Edit',\n                dataIndex: \"edit\",\n                key: \"_id\",\n                render:(_,record)=>{\n                    return (\n                        <Button variant='danger' onClick={()=>handleEdit(record)}>\n                            Edit\n                        </Button>\n                    )\n                }\n            },\n              \n              {\n                  title:'Delete',\n                  dataIndex: \"delete\",\n                  key: \"_id\",\n                  render:(_,record)=>{\n                      return (\n                        <Popconfirm\n                          title=\"Are you sure delete this Log?\"\n                          onConfirm={()=>handleDelete(record)}\n                          okText=\"Yes\"\n                          cancelText=\"No\"\n                        >\n                          <Button danger>\n                              Delete\n                          </Button>\n                        </Popconfirm>\n                          \n                      )\n                  }\n              },\n          ];\n          const exportPDF = () => {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"portrait\"; // portrait or landscape\n        \n            const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n        \n            doc.setFontSize(15);\n        \n            const title = \"communication\";\n            const headers = [[\"Hours\", \"Type\",\"Time\",\"Date\",\"Subject\",\"Matter\",\"From\", \"To\"] ];\n           \n            let data = []\n            \n          \n            this.state.tableData.map((val, index)=>{\n              const td = [\n                val.addTime,\n                val.logType , \n                val.time ,\n                val.Date,\n                 val.subject, \n                 val.matter, \n                 val.from, \n                 val.to]\n              data.push(td)\n            })\n          \n        \n            let content = {\n              startY: 50,\n              head: headers,\n              body: data\n            };\n        \n            doc.text(title, marginLeft, 40);\n            doc.autoTable(content);\n            doc.save(\"communications.pdf\")\n          }\n        return <Spin size = \"large\" spinning={this.state.loading}>\n          <div className='p-2 '>\n          <div className=\"d-flex mb-2 title-component-header\">\n              <div className=\"title-header-name\">\n                <h5>Communication</h5>\n              </div>\n              <div className=\"d-flex extra-iteam-div\">\n                <button\n                    className=\"btn  btn-outline-primary   btn-sm\"\n                    onClick={exportPDF}\n                >\n                    Export to PDF\n                </button>\n                \n                <ExportExcel dataSource={this.state.tableData || []} />\n                <button\n                    className=\"btn  btn-outline-primary   btn-sm\"\n                    onClick={()=>this.showModal(\"secure\")}\n                >\n                  New secure message\n                </button>\n                <button\n                    className=\"btn  btn-outline-primary   btn-sm\"\n                    onClick={()=>this.showModal(\"email\")}\n                >\n                    New Email Log\n                </button>\n                \n                <button\n                    className=\"btn  btn-outline-primary   btn-sm\"\n                    onClick={()=>this.showModal(\"phone\")}\n                >\n                    New Phone Log\n                </button>\n              </div>\n          </div>\n            \n            <Card bodyStyle={{\"padding\": \"14px 10px 0px 10px\"}}>\n                <div style={{\"display\": \"flex\", \"flex-wrap\": \"wrap\", \"justify-content\": \"space-between\" }}>\n                  <div className=\"mb-2\">\n                  <Button  onClick={()=>setTableData(\"all\")}>All</Button>\n                  <Button onClick={()=>setTableData(\"email\")}>Email</Button>\n                  <Button onClick={()=>setTableData(\"phone\")}>Phone</Button>\n                  </div>\n                </div>\n            </Card>\n            <Card bodyStyle={{\"padding\": \"0px\"}} className=\"overflow-auto\">                \n              <Table columns={columns} dataSource={this.state.tableData}  />\n            </Card>\n            <Modal\n                title = \"New Secure Message\"\n                visible={this.state.secure}\n                onOk={this.handleSecure}\n                onCancel={()=>this.handleCancel(\"secure\")}\n                footer={[\n                  <Button  onClick={()=>this.handleCancel(\"secure\")}>\n                    Cancel\n                  </Button>,\n                  <Button type=\"primary\" disabled = {this.state.disable} onClick={this.handleSecure}>\n                    {this.state.editSecure ? \"Update Log\" : \"Send\"}\n                  </Button>,\n                ]}\n                >\n                  {           \n        \n                      <Form  \n                      id='myForm'\n                      className=\"form\"\n                      ref={ form => this.messageForm = form }>\n                       <Row>\n                           \n                           <Col sm>\n                           <Form.Group>\n                       <Form.Label>Matter</Form.Label>\n                              <Form.Control \n                                  as=\"select\"\n                                  name=\"matter\" \n                                  placeholder=\"Matter\"\n                                  onChange={handleChange}>\n                              <option>Select a matter</option>\n                              {this.state.option}\n                              </Form.Control>\n                       </Form.Group>\n                           </Col>\n                       </Row>\n                     \n                      <Row>\n                          <Col  sm>\n                          <Form.Group>\n                               <Form.Label>From</Form.Label>\n                               <Form.Control \n                                   as=\"select\"\n                                   name=\"from\" \n                                   placeholder=\"Select a contact\"\n                                   onChange={handleChange}>\n                              <option>{name}</option>    \n                             \n                               </Form.Control>\n                               </Form.Group>\n                          </Col>\n                          \n                          <Col sm>\n                          <Form.Group >\n                               <Form.Label>To</Form.Label>\n                               <Form.Control \n                                   as=\"select\"\n                                   name=\"to\" \n                                   placeholder=\"Select a contact\"\n                                   onChange={handleChange}>\n                                   <option>Select a contact</option>\n                                   {this.state.contacts}\n                               </Form.Control>\n                               </Form.Group>\n                          </Col>\n                      </Row>\n                       \n                     \n                      <Form.Group controlId=\"subject\">\n                               <Form.Label>Subject</Form.Label>\n                               <Form.Control \n                               name=\"subject\" \n                               rows=\"3\"\n                               placeholder=\"subject\"\n                               onChange={handleChange} />\n                           </Form.Group>  \n                   \n                      \n                           <Form.Group controlId=\"body\">\n                               <Form.Label>Body</Form.Label>\n                               <Form.Control \n                               name=\"body\" \n                               as=\"textarea\" \n                               rows=\"3\"\n                               placeholder=\"body\"\n                               onChange={handleChange} />\n                           </Form.Group>\n                      \n                   \n                  </Form>    \n                   \n                  }\n            </Modal>\n            \n            <Modal\n                title={this.state.editEmail ? \"Edit email log\" : \"Add a email log\"}\n                visible={this.state.editEmail}\n                onOk={()=>this.handleOk(\"email\")}\n                onCancel={()=>this.handleCancel(\"email\")}\n                footer={[\n                  <Button  onClick={()=>this.handleCancel(\"email\")}>\n                    Cancel\n                  </Button>,\n                  <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"email\")}>\n                    {this.state.editEmail ? \"Edit Log\" : \"Save Log\"}\n                  </Button>,\n                ]}\n                >\n                  {\n                      this.state.editEmail ?\n                      <Form \n                      id='myForm'\n                      className=\"form\"\n                      ref={ form => this.messageForm = form }>\n                       <Row>\n                           \n                           <Col sm>\n                           <Form.Group>\n                       <Form.Label>Matter</Form.Label>\n                              <Form.Control \n                                  as=\"select\"\n                                  name=\"matter\" \n                                  defaultValue = {this.state.data.matter}\n                                  onChange={handleChange}>\n                              <option>Select a matter</option>\n                              {this.state.option}\n                              </Form.Control>\n                       </Form.Group>\n                           </Col>\n                       </Row>\n                     \n                      <Row>\n                          <Col  sm>\n                          <Form.Group>\n                               <Form.Label>From</Form.Label>\n                               <Form.Control \n                                   as=\"select\"\n                                   name=\"from\" \n                                   defaultValue = {this.state.data.from}\n                                   onChange={handleChange}>\n                                   <option>Select a contact</option>    \n                                   {\n                                this.state.editSecure ? <option>{name}</option>:  this.state.contacts\n                                   } \n                               </Form.Control>\n                               </Form.Group>\n                          </Col>\n                          \n                          <Col sm>\n                          <Form.Group >\n                               <Form.Label>To</Form.Label>\n                               <Form.Control \n                                   as=\"select\"\n                                   name=\"to\" \n                                   defaultValue = {this.state.data.to}\n                                   onChange={handleChange}>\n                                   <option>Select a contact</option>\n                                   {this.state.contacts}\n                               </Form.Control>\n                               </Form.Group>\n                          </Col>\n                      </Row>\n                       <Row>\n                           <Col sm>\n                           <Form.Group controlId=\"date\">\n                              <Form.Label>Time</Form.Label>\n                              <Form.Control \n                              required\n                              type=\"time\" \n                              name=\"time\" \n                              defaultValue = {this.state.data.time}\n                              onChange={handleChange}/>\n                          </Form.Group>\n                           </Col>\n                           <Col sm>\n                           <Form.Group controlId=\"date\">\n                              <Form.Label>Date</Form.Label>\n                              <Form.Control \n                              required\n                              type=\"date\" \n                              name=\"date\" \n                              defaultValue = {this.state.data.date} \n                              onChange={handleChange}/>\n                          </Form.Group>\n                           </Col>\n               \n                       </Row>\n                     \n                      <Form.Group controlId=\"subject\">\n                               <Form.Label>Subject</Form.Label>\n                               <Form.Control \n                               name=\"subject\" \n                               rows=\"3\"\n                               defaultValue = {this.state.data.subject}\n                               onChange={handleChange} />\n                           </Form.Group>  \n                   \n                      \n                           <Form.Group controlId=\"body\">\n                               <Form.Label>Body</Form.Label>\n                               <Form.Control \n                               name=\"body\" \n                               as=\"textarea\" \n                               rows=\"3\"\n                               defaultValue = {this.state.data.body}\n                               onChange={handleChange} />\n                           </Form.Group>\n                      \n                   \n                     </Form>    \n                  \n                      :\n                      null\n                  }\n            </Modal>\n            <Modal\n                title={this.state.editEmail ? \"Edit email log\" : \"Add a email log\"}\n                visible={this.state.email}\n                onOk={()=>this.handleOk(\"email\")}\n                onCancel={()=>this.handleCancel(\"email\")}\n                footer={[\n                  <Button  onClick={()=>this.handleCancel(\"email\")}>\n                    Cancel\n                  </Button>,\n                  <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"email\")}>\n                    {this.state.editEmail ? \"Update Log\" : \"Save Log\"}\n                  </Button>,\n                ]}\n                >\n                  {           \n        \n                      <Form  \n                      id='myForm'\n                      className=\"form\"\n                      ref={ form => this.messageForm = form }>\n                       <Row>\n                           \n                           <Col sm>\n                           <Form.Group>\n                             <Form.Label>Matter</Form.Label>\n                              <Form.Control \n                                  as=\"select\"\n                                  name=\"matter\" \n                                  placeholder=\"Matter\"\n                                  onChange={handleChange}>\n                              <option>Select a matter</option>\n                              {this.state.option}\n                              </Form.Control>\n                       </Form.Group>\n                           </Col>\n                       </Row>\n                     \n                      <Row>\n                          <Col  sm>\n                          <Form.Group>\n                               <Form.Label>From</Form.Label>\n                               <Form.Control \n                                   as=\"select\"\n                                   name=\"from\" \n                                   placeholder=\"Select a contact\"\n                                   onChange={handleChange}>\n                              <option>Select a contact</option>\n                              {\n                                this.state.contacts\n                              } \n                       \n                            \n                               </Form.Control>\n                               </Form.Group>\n                          </Col>\n                          \n                          <Col sm>\n                          <Form.Group >\n                               <Form.Label>To</Form.Label>\n                               <Form.Control \n                                   as=\"select\"\n                                   name=\"to\" \n                                   placeholder=\"Select a contact\"\n                                   onChange={handleChange}>\n                                   <option>Select a contact</option>\n                                   {this.state.contacts}\n                               </Form.Control>\n                               </Form.Group>\n                          </Col>\n                      </Row>\n                       <Row>\n                           <Col sm>\n                           <Form.Group controlId=\"date\">\n                              <Form.Label>Time</Form.Label>\n                              <Form.Control \n                              required\n                              type=\"time\" \n                              name=\"time\" \n                              placeholder=\"Time\" \n                              onChange={handleChange}/>\n                          </Form.Group>\n                           </Col>\n                           <Col sm>\n                           <Form.Group controlId=\"date\">\n                              <Form.Label>Date</Form.Label>\n                              <Form.Control \n                              required\n                              type=\"date\" \n                              name=\"date\" \n                              placeholder=\"Date\" \n                              onChange={handleChange}/>\n                          </Form.Group>\n                           </Col>\n               \n                       </Row>\n                     \n                      <Form.Group controlId=\"subject\">\n                               <Form.Label>Subject</Form.Label>\n                               <Form.Control \n                               name=\"subject\" \n                               rows=\"3\"\n                               placeholder=\"subject\"\n                               onChange={handleChange} />\n                           </Form.Group>  \n                   \n                      \n                           <Form.Group controlId=\"body\">\n                               <Form.Label>Body</Form.Label>\n                               <Form.Control \n                               name=\"body\" \n                               as=\"textarea\" \n                               rows=\"3\"\n                               placeholder=\"body\"\n                               onChange={handleChange} />\n                           </Form.Group>\n                      \n                   \n                  </Form>    \n                   \n                  }\n            </Modal>\n            <Modal\n                title={this.state.editPhone ? \"Edit phone log\" : \"Add a phone log\"}\n                visible={this.state.editPhone}\n                onOk={()=>this.handleOk(\"phone\")}\n                onCancel={()=>this.handleCancel(\"phone\")}\n                footer={[\n                  <Button  onClick={()=>this.handleCancel(\"phone\")}>\n                    Cancel\n                  </Button>,\n                  <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"phone\")}>\n                    {this.state.editPhone ? \"Edit Log\" : \"Save Log\"}\n                  </Button>,\n                ]}\n                >\n                {\n                \n                  <Form \n                  id='myForm'\n                  className=\"form\"\n                  ref={ form => this.messageForm = form }>\n                   <Row>\n                       <Col sm>\n                       <Form.Group controlId=\"duration\">\n                          <Form.Label>Duration</Form.Label>\n                          <Form.Control \n                          type=\"text\" \n                          name=\"addTime\" \n                          defaultValue = {this.state.data.addTime}\n                          onChange={handleChange}/>\n                      </Form.Group>\n                       </Col>\n                       <Col sm>\n                       <Form.Group>\n                   <Form.Label>Matter</Form.Label>\n                          <Form.Control \n                              as=\"select\"\n                              name=\"matter\" \n                              defaultValue = {this.state.data.matter}\n                              onChange={handleChange}>\n                          <option>Select a matter</option>\n                          {this.state.option}\n                          </Form.Control>\n                   </Form.Group>\n                       </Col>\n                   </Row>\n                 \n                  <Row>\n                      <Col  sm>\n                      <Form.Group>\n                           <Form.Label>From</Form.Label>\n                           <Form.Control \n                               as=\"select\"\n                               name=\"from\" \n                               defaultValue = {this.state.data.from}\n                               onChange={handleChange}>\n                               <option>Select a contact</option> \n                           {this.state.contacts}\n                           </Form.Control>\n                           </Form.Group>\n                      </Col>\n                      \n                      <Col sm>\n                      <Form.Group >\n                           <Form.Label>To</Form.Label>\n                           <Form.Control \n                               as=\"select\"\n                               name=\"to\" \n                               defaultValue = {this.state.data.to}\n                               onChange={handleChange}>\n                               <option>Select a contact</option>\n                               {this.state.contacts}\n                           </Form.Control>\n                           </Form.Group>\n                      </Col>\n                  </Row>\n                   <Row>\n                       <Col sm>\n                       <Form.Group controlId=\"date\">\n                          <Form.Label>Time</Form.Label>\n                          <Form.Control \n                          required\n                          type=\"time\" \n                          name=\"time\" \n                          defaultValue = {this.state.data.time}\n                          onChange={handleChange}/>\n                      </Form.Group>\n                       </Col>\n                       <Col sm>\n                       <Form.Group controlId=\"date\">\n                          <Form.Label>Date</Form.Label>\n                          <Form.Control \n                          required\n                          type=\"date\" \n                          name=\"date\" \n                          defaultValue = {this.state.data.date} \n                          onChange={handleChange}/>\n                      </Form.Group>\n                       </Col>\n           \n                   </Row>\n                 \n                  <Form.Group controlId=\"subject\">\n                           <Form.Label>Subject</Form.Label>\n                           <Form.Control \n                           name=\"subject\" \n                           rows=\"3\"\n                           defaultValue = {this.state.data.subject}\n                           onChange={handleChange} />\n                       </Form.Group>  \n               \n                  \n                       <Form.Group controlId=\"body\">\n                           <Form.Label>Body</Form.Label>\n                           <Form.Control \n                           name=\"body\" \n                           as=\"textarea\" \n                           rows=\"3\"\n                           defaultValue = {this.state.data.body}\n                           onChange={handleChange} />\n                       </Form.Group>\n                  \n               \n                  </Form>    \n              \n               \n                }\n                  \n            </Modal>\n            <Modal\n                title={this.state.editPhone ? \"Edit phone log\" : \"Add a phone log\"}\n                visible={this.state.phone}\n                onOk={()=>this.handleOk(\"phone\")}\n                onCancel={()=>this.handleCancel(\"phone\")}\n                footer={[\n                  <Button  onClick={()=>this.handleCancel(\"phone\")}>\n                    Cancel\n                  </Button>,\n                  <Button type=\"primary\" disabled = {this.state.disable} onClick={()=>this.handleOk(\"phone\")}>\n                    {this.state.editPhone ? \"Update Log\" : \"Save Log\"}\n                  </Button>,\n                ]}\n                >\n                {\n                 \n                  <Form \n                  id='myForm'\n                             className=\"form\"\n                             ref={ form => this.messageForm = form }>\n                   <Row>\n                       <Col sm>\n                       <Form.Group controlId=\"duration\">\n                          <Form.Label>Duration</Form.Label>\n                          <Form.Control \n                          type=\"text\" \n                          name=\"addTime\" \n                          placeholder=\"hh:mm:ss\" \n                          onChange={handleChange}/>\n                      </Form.Group>\n                       </Col>\n                       <Col sm>\n                       <Form.Group>\n                   <Form.Label>Matter</Form.Label>\n                          <Form.Control \n                              as=\"select\"\n                              name=\"matter\" \n                              placeholder=\"Matter\"\n                              onChange={handleChange}>\n                          <option>Select a matter</option>\n                          {this.state.option}\n                          </Form.Control>\n                   </Form.Group>\n                       </Col>\n                   </Row>\n                 \n                  <Row>\n                      <Col  sm>\n                      <Form.Group>\n                           <Form.Label>From</Form.Label>\n                           <Form.Control \n                               as=\"select\"\n                               name=\"from\" \n                               placeholder=\"Select a contact\"\n                               onChange={handleChange}>\n                          <option>Select a contact</option>     \n                         {this.state.contacts}\n                           </Form.Control>\n                           </Form.Group>\n                      </Col>\n                      \n                      <Col sm>\n                      <Form.Group >\n                           <Form.Label>To</Form.Label>\n                           <Form.Control \n                               as=\"select\"\n                               name=\"to\" \n                               placeholder=\"Select a contact\"\n                               onChange={handleChange}>\n                               <option>Select a contact</option>\n                               {this.state.contacts}\n                           </Form.Control>\n                           </Form.Group>\n                      </Col>\n                  </Row>\n                   <Row>\n                       <Col sm>\n                       <Form.Group controlId=\"date\">\n                          <Form.Label>Time</Form.Label>\n                          <Form.Control \n                          required\n                          type=\"time\" \n                          name=\"time\" \n                          placeholder=\"Time\" \n                          onChange={handleChange}/>\n                      </Form.Group>\n                       </Col>\n                       <Col sm>\n                       <Form.Group controlId=\"date\">\n                          <Form.Label>Date</Form.Label>\n                          <Form.Control \n                          required\n                          type=\"date\" \n                          name=\"date\" \n                          placeholder=\"Date\" \n                          onChange={handleChange}/>\n                      </Form.Group>\n                       </Col>\n           \n                   </Row>\n                 \n                  <Form.Group controlId=\"subject\">\n                           <Form.Label>Subject</Form.Label>\n                           <Form.Control \n                           name=\"subject\" \n                           rows=\"3\"\n                           placeholder=\"subject\"\n                           onChange={handleChange} />\n                       </Form.Group>  \n               \n                  \n                       <Form.Group controlId=\"body\">\n                           <Form.Label>Body</Form.Label>\n                           <Form.Control \n                           name=\"body\" \n                           as=\"textarea\" \n                           rows=\"3\"\n                           placeholder=\"body\"\n                           onChange={handleChange} />\n                       </Form.Group>\n                  \n               \n              </Form>    \n                }\n                  \n            </Modal>\n        </div>\n        \n        </Spin>\n        }\n}\n\nconst mapStateToProps = (state) => ({\n  userId: state.user.token.user._id,\n});\n\nexport default connect(mapStateToProps)(Communication);\n"],"sourceRoot":""}