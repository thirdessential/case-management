{"version":3,"sources":["App/containers/Tasks/EditForm.js","../node_modules/react-bootstrap/esm/Table.js","App/containers/Tasks/List/viewList/listView.js"],"names":["Option","Select","React","Component","Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","JSON","parse","window","localStorage","getItem","response","options","list","ViewList","constructor","super","handleDelete","index","console","log","data","id","tasks","_id","splice","api","post","then","res2","tabledata","this","state","tableData","setState","get","res","notification","success","message","catch","error","handleEdit","value","editMode","Data","selected","handleCancel","ReactDOM","findDOMNode","messageForm","reset","visible","priority","matter","handleChange","e","persist","newState","target","handleOk","preventDefault","destroy","taskName","undefined","warning","description","dueDate","disable","userId","componentDidMount","openNotificationWithFailure","confirmLoading","push","setTimeout","location","map","matterDescription","temp","substring","onClick","type","title","onConfirm","okText","cancelText","danger","newdata","render","Header","name","Body","practiseArea","onCancel","onOk","footer","disabled","form","Group","controlId","Label","Control","placeholder","defaultValue","onChange","required","as","rows","connect","user","token"],"mappings":"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","file":"static/js/44.f55b94af.chunk.js","sourcesContent":["import React from 'react'\nimport { extend } from 'jquery'\nimport { Form, Row , Col , Button } from \"react-bootstrap\";\nimport { Input, Select } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport api from '../../../resources/api';\n\n\nconst { Option } = Select;\n\nconst selectBefore = (\n  <Select defaultValue=\"Firm User\" className=\"select-before\">\n    <Option value=\"FirmUser\">Firm User</Option>\n    <Option value=\"Contacts\">Contacts</Option>\n  </Select>\n);\n\nclass TaskForm extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      matter : \"\",\n      data : {\n        taskName : \"\",\n        matter : \"\"\n      }\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    \n      if (nextProps !== this.props) {\n        console.log(\"not equal\")\n        console.log(this.props)\n        console.log(nextProps)\n        this.setState({data : nextProps.data})\n      }\n    \n  }\n  componentDidMount(){\n    this.setState({data : this.props.data})\n      console.log(this.state.data.matter)\n\n        api.get('/matter/view/'+ this.props.data.matter).then((res)=>{\n          console.log(res)\n          const formData = <Form.Group controlId=\"matter\">\n                            <Form.Label>Matter</Form.Label>\n                            <Form.Control\n                              required\n                              as=\"select\"\n                              defaultValue={res.data.data != null ? res.data.data.matterDescription : \"s\"}\n                              onChange={this.props.handleChange}\n                              name=\"matter\"\n                            >\n                              <option>Select a matter</option>\n                              {this.props.options}\n                            </Form.Control>\n                          </Form.Group>\n          this.setState({matter : formData})\n        })\n\n  \n  }\n    render(){\n        console.log(this.props.data)\n      \n        return <Form className=\"form-details\">\n                  <Form.Group controlId=\"taskName\">\n                    <Form.Label>Task Name</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      defaultValue={this.state.data.taskName}\n                      onChange={this.props.handleChange}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"dueDate\">\n                    <Form.Label>Due Date</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      defaultValue={this.state.data.dueDate ? this.state.data.dueDate.substring(0,10) : \"\"}\n                      onChange={this.props.handleChange}\n                    />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      required\n                      defaultValue={this.state.data.description}\n                      as=\"textarea\"\n                      rows=\"3\"\n                      onChange={this.props.handleChange}\n                    />\n                  </Form.Group>\n\n                {\n                  /*\n                    <Form.Group controlId=\"taskName\">\n                    <Form.Label>Assignee</Form.Label>\n                    <div>\n                      <Input addonBefore={selectBefore} size=\"large\" suffix={<UserOutlined className=\"site-form-item-icon\" />}  placeholder=\"Type a name...\" />\n                    </div>\n                  </Form.Group>\n                  */\n                }\n\n                  <Form.Group controlId=\"priority\">\n                    <Form.Label>Priority</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                    \n                      required\n                      defaultValue={this.state.data.priority}\n                      onChange={this.props.handleChange}\n                    >\n                      <option>Low</option>\n                      <option>Normal</option>\n                      <option>High</option>\n                    </Form.Control>\n                  </Form.Group>\n                  {this.state.matter}\n                  \n                  <br />\n                  {\n                    /* \n                    <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Notify me when the task is completed\" />\n                  </Form.Group>\n                  <br />\n                  <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Notify assignee via email\" />\n                  </Form.Group>\n                  <br />\n                    */\n                  }\n                </Form>\n    \n      \n    }\n}\n\nexport default TaskForm","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from 'react'\nimport { Card , Table , Button , Form} from 'react-bootstrap'\nimport { Modal, notification, Popconfirm, message, Button as AntdButton } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { Input, Select } from 'antd';\nimport {connect} from 'react-redux'\nimport EditTask from '../../EditForm'\nimport api from '../../../../../resources/api'\nimport ReactDOM from 'react-dom'\nconst { Option } = Select;\n\nconst user = JSON.parse(window.localStorage.getItem('Case.user'))\nlet response = {};\nlet options = null;\nlet list = {}\nconst selectBefore = (\n    <Select defaultValue=\"Firm User\" className=\"select-before\">\n      <Option value=\"FirmUser\">Firm User</Option>\n      <Option value=\"Contacts\">Contacts</Option>\n    </Select>\n  );\nclass ViewList extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            tableData : \"\",\n            visible : false,\n            Data : { priority: 'Normal', matter: '' },\n            editMode : false,\n            disable :false\n        }\n    }\n    handleDelete = (index) =>{\n      console.log(\"from delete\")\n      console.log(index)\n      console.log(list)\n        const data = list\n        const id = data.tasks[index]._id\n        console.log(id)\n        data.tasks.splice(index, 1)\n        api\n        .post('/tasks/list/edit/'+ data._id, data)\n        .then((res2) => {\n            console.log(res2)\n            let tabledata = this.state.tableData\n            delete tabledata[index]\n            this.setState({tableData : tabledata})\n            console.log(tabledata)\n            api.get('tasks/delete/' + id).then((res)=>{\n              console.log(res)\n              notification.success({message : \"Task deleted from the list\"})\n            })\n           \n            \n        })\n        .catch(() => {\n             notification.error({message : \"Failed.\"})\n        });\n        console.log(data)\n    }\n\n    handleEdit = (value , index) => {\n      this.setState({ editMode: true });\n      this.setState({ Data: value });\n      console.log(value)\n      this.setState({ selected: value});\n    }\n    componentDidMount(){\n        api.get('/tasks/list/view/'+this.props.location.state.id).then((res)=>{\n            let tableData = []\n            list = res.data.data\n            console.log(res)\n            res.data.data.tasks.map((value,index)=>{\n              let matter = value.matter.matterDescription\n              value.matter = value.matter._id\n               const temp = <tr>\n                                <td>{value.taskName}</td>\n                               {/* <td>{value.assignee}</td> */}\n                                <td>{value.priority}</td>\n                                <td>{value.description}</td>\n                                <td>{value.dueDate.substring(0,10)}</td>\n                                <td>{matter}</td>\n                                <td><AntdButton onClick={()=>this.handleEdit(value,index)} type=\"link\">Edit</AntdButton></td>\n                                <td><Popconfirm\n                                      title=\"Are you sure you want to delete\"\n                                      onConfirm={()=>this.handleDelete(index)}\n                                      //onCancel={this.cancel}\n                                      okText=\"Yes\"\n                                      cancelText=\"No\"\n                                    >\n                                       <AntdButton  type=\"link\" danger>Delete</AntdButton>\n                                    </Popconfirm>\n                                 \n                                  </td>\n                            </tr>\n              console.log(temp)\n              tableData.push(temp)\n            })\n            this.setState({tableData : tableData})\n            console.log(this.state.tableData)\n          })\n          api\n            .get('/matter/viewforuser/' + this.props.userId)\n            .then((res) => {\n                response = res.data.data\n                options = response.map((value, index) => {\n                    if (index == 0) {\n                        let newdata = this.state;\n                        newdata.Data.matter = value._id;\n                        this.setState(newdata);\n                    }\n                    return <option value = {value._id}>{value.matterDescription}</option>;\n                    });\n                this.setState({options : options})\n            });\n    \n           \n    }\n    handleCancel = () => {\n      ReactDOM.findDOMNode(this.messageForm).reset()\n\n        this.setState({\n          visible: false,\n          editMode : false,\n          Data : { priority: 'Normal', matter: '' }\n        });\n      };\n    \n      handleChange = (e) => {\n        e.persist();\n        console.log(e)\n        let newState = this.state;\n        newState.Data[e.target.id] = e.target.value;\n        this.setState(newState);\n        console.log(this.state.Data);\n\n    };\n\n    handleOk = (e) => {\n\n        e.preventDefault();\n        notification.destroy();\n        if(this.state.Data.taskName === '' || this.state.Data.taskName === undefined ){\n          notification.warning({\n            message: 'Please provide a task name',\n          });\n        }else\n        if(this.state.Data.description === '' ||this.state.Data.description === undefined  ){\n          notification.warning({\n            message: 'Please provide a description',\n          });\n        }else\n        if( this.state.Data.dueDate === '' || this.state.Data.dueDate === undefined  ){\n          notification.warning({\n              message: 'Please select a due date',\n            });\n        }else\n        if( this.state.Data.matter === \"\" || this.state.Data.matter === undefined ){\n          notification.warning({\n            message: 'Please select a matter',\n          });\n          \n        }\n        else {\n          this.setState({\n            disable : true\n          })\n          const data = this.state.Data;\n          data.userId = this.props.userId;\n          if (this.state.editMode) {\n            api\n              .post('tasks/edit/' + data._id, data)\n              .then((res) => {\n                console.log(res)\n                this.setState({\n                  disable : false\n                })\n                this.componentDidMount()\n                notification.success({message : \"Task Edited\"})\n              }\n              )\n              .catch(() => {\n                this.openNotificationWithFailure('error');\n                this.setState({\n                  disable : false\n                })\n              }).then(()=>{\n                ReactDOM.findDOMNode(this.messageForm).reset()\n              })\n          }else{\n            this.setState({\n              confirmLoading: true,\n            });\n          \n          \n              api\n                .post('/tasks/create', data)\n                .then((res) => {\n                    console.log(res)\n                      list.tasks.push(res.data.data._id)\n                      api\n                      .post('/tasks/list/edit/'+list._id, list)\n                      .then((res2) => {\n                          console.log(res2)\n                          this.setState({\n                            disable : false\n                          })\n                          this.componentDidMount()\n                          notification.success({message : \"Task Added to the list\"})\n                      })\n                      .catch(() => {\n                          notification.error({message : \"Failed.\"})\n                          this.setState({\n                            disable : false\n                          })\n                      }).then(()=>{\n                        ReactDOM.findDOMNode(this.messageForm).reset()\n                      })\n                  })\n          \n           }\n           setTimeout(() => {\n            this.setState({\n              visible: false,\n              confirmLoading: false,\n              editMode : false\n            });\n          // window.location.reload();\n          }, 1000);\n            \n            }\n           \n      };\n    \n    render(){\n        return <div>\n                <Card>\n                    <Card.Header>\n                        <h4>{this.props.location.state.name}</h4>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover size=\"sm\">\n                            <tbody>\n                                <tr>\n                                    <th>\n                                        Name\n                                    </th>\n                                    <td>\n                                        {this.props.location.state.name}\n                                    </td>\n                                    <th>\n                                        Description\n                                    </th>\n                                    <td>\n                                        {this.props.location.state.description}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th>\n                                        Practice Area\n                                    </th>\n                                    <td>\n                                        {this.props.location.state.practiseArea}\n                                    </td>\n\n                                </tr>\n                            </tbody>\n                        </Table>\n\n                    </Card.Body>\n                    \n                </Card>\n                <Card>\n                    <Card.Header>\n                        <div  className=\"d-flex example-parent\">\n                            <h3 className=\"p-2 col-example\">\n                                Task Templates\n                            </h3>\n                            <div className=\"ml-auto p-2 col-example\">\n                                <Button onClick={()=>{this.setState({visible : true})}} variant=\"success\">\n                                    Add task to the list\n                                </Button>\n                            </div>\n                        </div>\n                    </Card.Header>\n                    <Card.Body>\n                        <Table striped bordered hover size=\"sm\">\n                            <thead>\n                                <tr>\n                                <th>Name</th>\n                                {/* <th>Assignee</th> */}\n                                <th>Priority</th>\n                                <th>Permissions</th>\n                                <th>Due At</th>\n                                <th>Matter</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                               {\n                                   this.state.tableData\n                               }\n                                \n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Card>\n                <Modal\n          title=\"Create New Task\"\n          visible={this.state.visible}\n          confirmLoading={this.state.confirmLoading}\n          onCancel={this.handleCancel}\n          onOk={this.handleOk}\n          footer={[\n            <AntdButton  onClick={this.handleCancel}>\n              Cancel\n            </AntdButton>,\n            <AntdButton type=\"primary\" disabled = {this.state.disable} onClick={this.handleOk}>\n              Create Task\n            </AntdButton>,\n          ]}\n        >\n       <Form \n       className=\"form-details\" \n       id='myForm'\n       className=\"form\"\n       ref={ form => this.messageForm = form }\n       >\n        <Form.Group controlId=\"taskName\">\n          <Form.Label>Task Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Task Name\"\n            defaultValue={this.state.name}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"dueDate\">\n          <Form.Label>Due Date</Form.Label>\n          <Form.Control\n            required\n            type=\"date\"\n            placeholder=\"Due Date\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            required\n            as=\"textarea\"\n            rows=\"3\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n      {/*\n        <Form.Group controlId=\"taskName\">\n          <Form.Label>Assignee</Form.Label>\n          <div>\n            <Input addonBefore={selectBefore} size=\"large\" suffix={<UserOutlined className=\"site-form-item-icon\" />}  placeholder=\"Type a name...\" />\n          </div>\n        </Form.Group>\n      */\n      }\n\n        <Form.Group controlId=\"priority\">\n          <Form.Label>Priority</Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"Normal\"\n            required\n            onChange={this.handleChange}\n          >\n            <option>Low</option>\n            <option>Normal</option>\n            <option>High</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"matter\">\n          <Form.Label>Matter</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={this.handleChange}\n            name=\"matter\"\n          >\n            <option>Select a matter</option>\n            {this.state.options}\n          </Form.Control>\n        </Form.Group>\n        <br />\n        {\n          /*\n            <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Notify me when the task is completed\" />\n        </Form.Group>\n        <br />\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Notify assignee via email\" />\n        </Form.Group>\n        <br />\n          */\n\n        }\n       \n      </Form>\n   \n        </Modal>\n                <Modal\n                  title=\"Edit task\"\n                  visible={this.state.editMode}\n                  confirmLoading={this.state.confirmLoading}\n                  onCancel={this.handleCancel}\n                  onOk={this.handleOk}\n                  footer={[\n                    <AntdButton  onClick={this.handleCancel}>\n                      Cancel\n                    </AntdButton>,\n                    <AntdButton type=\"primary\" disabled = {this.state.disable} onClick={this.handleOk}>\n                      Update Task\n                    </AntdButton>,\n                  ]}\n                >\n                  <Form \n                  id='myForm'\n                  className=\"form\"\n                  ref={ form => this.messageForm = form }\n                  className=\"form-details\">\n                          <Form.Group controlId=\"taskName\">\n                            <Form.Label>Task Name</Form.Label>\n                            <Form.Control\n                              required\n                              type=\"text\"\n                              defaultValue={this.state.Data.taskName}\n                              onChange={this.handleChange}\n                            />\n                          </Form.Group>\n\n                          <Form.Group controlId=\"dueDate\">\n                            <Form.Label>Due Date</Form.Label>\n                            <Form.Control\n                              type=\"date\"\n                              defaultValue={this.state.Data.dueDate ? this.state.Data.dueDate.substring(0,10) : \"\"}\n                              onChange={this.handleChange}\n                            />\n                          </Form.Group>\n\n                          <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                              required\n                              defaultValue={this.state.Data.description}\n                              as=\"textarea\"\n                              rows=\"3\"\n                              onChange={this.handleChange}\n                            />\n                          </Form.Group>\n                          <Form.Group controlId=\"matter\">\n                                    <Form.Label>Matter</Form.Label>\n                                    <Form.Control\n                                      required\n                                      as=\"select\"\n                                      value={this.state.Data.matter}\n                                      onChange={this.handleChange}\n                                      name=\"matter\"\n                                    >\n                                      <option>Select a matter</option>\n                                      {this.state.options}\n                                    </Form.Control>\n                                  </Form.Group>\n\n                        {\n                          /*\n                            <Form.Group controlId=\"taskName\">\n                            <Form.Label>Assignee</Form.Label>\n                            <div>\n                              <Input addonBefore={selectBefore} size=\"large\" suffix={<UserOutlined className=\"site-form-item-icon\" />}  placeholder=\"Type a name...\" />\n                            </div>\n                          </Form.Group>\n                          */\n                        }\n\n                          <Form.Group controlId=\"priority\">\n                            <Form.Label>Priority</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                            \n                              required\n                              defaultValue={this.state.Data.priority}\n                              onChange={this.handleChange}\n                            >\n                              <option>Low</option>\n                              <option>Normal</option>\n                              <option>High</option>\n                            </Form.Control>\n                          </Form.Group>\n                          \n                          <br />\n                          {\n                            /* \n                            <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Notify me when the task is completed\" />\n                          </Form.Group>\n                          <br />\n                          <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Notify assignee via email\" />\n                          </Form.Group>\n                          <br />\n                            */\n                          }\n                        </Form>\n            \n                </Modal>\n            \n                </div>\n\n    }\n}\nconst mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n  \n  export default connect(mapStateToProps)(ViewList)"],"sourceRoot":""}