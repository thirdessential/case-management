{"version":3,"sources":["App/containers/SubscriptionManagement/Invoice.js"],"names":["Invoice","props","console","log","className","style","id","location","state","date","requestGranted","fontWeight","name","userId","emailAddress","class","scope","subscriptionRequested","type","onClick","input","document","getElementById","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","orientation","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save"],"mappings":"mIAAA,qHAsJeA,UAtIEC,IACfC,QAAQC,IAAIF,GA4HZ,OACE,6BAjEA,kBAAC,IAAD,CAAMG,UAAU,QAChB,yBAAKC,MAAO,CAAC,QAAW,MAAOC,GAAG,SAASF,UAAU,mBAkBnD,yBAAKA,UAAU,cACb,wBAAIA,UAAU,oBAAd,WACA,6BACE,0CACA,uCAAaH,EAAMM,SAASC,MAAMC,MAClC,2CAAiBR,EAAMM,SAASC,MAAME,kBAG1C,yBAAKN,UAAU,wBACb,6BAAK,wBAAIC,MAAO,CAACM,WAAa,SAAUV,EAAMM,SAASC,MAAMI,KAAxD,MAEL,6BACE,0BAAMP,MAAO,CAACM,WAAa,SAAUV,EAAMM,SAASC,MAAMK,OAAOC,cAAoB,8BAIvF,6BACF,8BAEA,yBAAKV,UAAU,aACb,2BAAOW,MAAM,SACX,2BAAOA,MAAM,eACX,4BACE,wBAAIC,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,kBAGJ,+BAEI,4BACE,wBAAIA,MAAM,OAAOf,EAAMM,SAASC,MAAMS,uBACtC,4BAAKhB,EAAMM,SAASC,MAAME,gBAC1B,4BAAoD,YAA/CT,EAAMM,SAASC,MAAMS,sBAAsC,OAAS,SACzE,4BAAKhB,EAAMM,SAASC,MAAMC,YAapC,kBAAC,IAAD,CAAQL,UAAU,WAAWc,KAAK,UAAUC,QA7H9B,KAChB,IAAIC,EAAQC,SAASC,eAAe,UAWlCC,IAAYH,GACXI,KAAMC,IACL,MAAMC,EAAUD,EAAOE,UAAU,aAE3BC,EAAM,IAAIC,IAAM,CACpBC,YAAa,cAETC,EAAUH,EAAII,mBAAmBN,GACjCO,EAAWL,EAAIM,SAASC,SAASC,WACjCC,EAAaN,EAASO,OAASL,EAAYF,EAASQ,MAC1DX,EAAIY,SAASd,EAAS,MAAO,EAAG,EAAGO,EAAUI,GAC7CT,EAAIa,KAAK,mBAsGX","file":"static/js/72.49a0a607.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from '../../../resources/api';\nimport jsPDF from 'jspdf';\nimport {Card, Button } from 'antd';\nimport 'jspdf-autotable';\nimport html2canvas from 'html2canvas'\nimport ReactDOMServer from 'react-dom/server';\n\nimport html2pdf from 'simple-html2pdf';\n\n//let invoiceData = { id , date , status}\n// companyData ={ name, address , phone , email}\n//userData = { name,address}\n//billData =[]\n\nconst Invoice = (props) => {\n  console.log(props)\n\n  const exportPDF = () => {\n    var input = document.getElementById('canvas');\n   // \n    // pdf.html(canvas, {\n    //   callback: function () {\n    //     pdf.save('testing.pdf');\n    //     window.open(pdf.output('bloburl')); // to debug\n    //   },\n    // });\n    // pdf.save('test.pdf');\n\n    \n      html2canvas(input)\n      .then((canvas) => {\n        const imgData = canvas.toDataURL('image/png');\n        \n        const pdf = new jsPDF({\n          orientation: 'landscape',\n        });\n        const imgProps= pdf.getImageProperties(imgData);\n        const pdfWidth = pdf.internal.pageSize.getWidth() ;\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n        pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n        pdf.save('Invoice.pdf');\n      });\n    ;\n\n  };\n  /*\n  const street = props.location.state.clientData.address.street \n  ? props.location.state.clientData.address.street \n  : \"\" \n\nconst city =   props.location.state.clientData.address.city \n  ? props.location.state.clientData.address.city \n  : \"\" \n\nconst state =   props.location.state.clientData.address.state \n  ?\n  props.location.state.clientData.address.state\n  : \n  \"\" \n\nconst zipCode = props.location.state.clientData.address.zipCode \n  ?\n  props.location.state.clientData.address.zipCode\n  : \n  \"\" \n  + \" \"\nconst country =  props.location.state.clientData.address.country \n  ?\n  props.location.state.clientData.address.country\n  : \n  \"\" \n*/\n\n  const invoiceForm = () => (\n    \n    <Card className=\"mb-3\">\n    <div style={{\"padding\": \"7%\"}} id=\"canvas\" className=\"text-center P-3\">\n        {\n/* \n  <div>\n<img\n          src={props.location.state.companyData.logo}\n          alt=\"companyLogo\"\n          style={{ width: '200px' }}\n        />\n        <h3 className=\"font-weight-bold\">{props.location.state.companyData.name}</h3>\n        <div>{props.location.state.companyData.address}</div>\n        <div>Phone : {props.location.state.companyData.phone}</div>\n        <div>Email : {props.location.state.companyData.email}</div>\n      </div>\n*/\n        }\n        \n\n      <div className=\"text-right\">\n        <h5 className=\"font-weight-bold\">INVOICE</h5>\n        <div>\n          <div>Invoice #</div>\n          <div>Date : {props.location.state.date}</div>\n          <div>Approved : {props.location.state.requestGranted}</div>\n        </div>\n      </div>\n      <div className=\"float-left text-left\">\n        <div><h3 style={{fontWeight : \"bold\"}}>{props.location.state.name} </h3></div>\n      \n        <div>\n          <span style={{fontWeight : \"bold\"}}>{props.location.state.userId.emailAddress}</span><br></br>\n        </div>\n  \n        \n        <br></br>\n      <br></br>\n      </div>\n      <div className=\"my-5 py-5\">\n        <table class=\"table\">\n          <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">Reqest Type</th>\n              <th scope=\"col\">Approve status</th>\n              <th scope=\"col\">Amount</th>\n              <th scope=\"col\">Request Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n              <tr >\n                <th scope=\"row\">{props.location.state.subscriptionRequested}</th>\n                <td>{props.location.state.requestGranted}</td>\n                <td>{props.location.state.subscriptionRequested === \"monthly\" ? \"$100\" : \"$1200\" }</td>\n                <td>{props.location.state.date}</td>\n              </tr>\n         \n          </tbody>\n        </table>\n      </div>\n      </div>\n    </Card>\n  );\n      \n  return (\n    <div>\n      {invoiceForm()}\n      <Button className=\"ml-auto \" type=\"primary\" onClick={exportPDF}>\n        Download PDF\n      </Button>\n    </div>\n  );\n};\nexport default Invoice;\n//Example use case\n"],"sourceRoot":""}