{"version":3,"sources":["App/containers/ContactManagement/ViewContact/ViewCompany.js"],"names":["CompanyView","props","response","data","useSelector","state","user","token","_id","useState","Loading","setLoading","address","setAddress","Title","setTitle","ID","setID","Website","setWebsite","Email","setEmail","Number","setNumber","Rate","setRate","editableData","setEditableData","useEffect","a","api","get","location","then","res","console","log","setValue","fetchData","ttl","name","idx","billingClientId","rte","billingCustomRate","adrs","map","value","index","className","key","style","type","street","city","zipCode","country","Web","website","websiteType","mail","emailAddress","emailType","Num","phone","phoneType","size","spinning","extra","onClick","history","push","title","class"],"mappings":"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","file":"static/js/65.dc13f7a8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../../../resources/api';\r\nimport { Card, Button, Spin } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { values } from 'lodash';\r\n\r\nfunction CompanyView(props) {\r\n  let response = {};\r\n  let data = null;\r\n  const userId = useSelector((state) => state.user.token.user._id);\r\n  const [Loading, setLoading] = useState(true)\r\n  const [address, setAddress] = useState();\r\n  const [Title, setTitle] = useState();\r\n  const [ID, setID] = useState();\r\n  const [Website, setWebsite] = useState();\r\n  const [Email, setEmail] = useState();\r\n  const [Number, setNumber] = useState();\r\n  const [Rate, setRate] = useState();\r\n  const [editableData, setEditableData] = useState({});\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await api.get('/company/view/' + props.location.state).then((res) => {\r\n        response = res.data.data;\r\n        console.log(response);\r\n        setEditableData(response);\r\n\r\n        setValue();\r\n      });\r\n    }\r\n    console.log(props);\r\n    fetchData();\r\n  }, []);\r\n\r\n  const setValue = () => {\r\n    console.log(response);\r\n    const ttl = response.name;\r\n    data = response;\r\n    const idx = response.billingClientId;\r\n    const rte = response.billingCustomRate;\r\n    const adrs = response.address.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p style={{ 'font-size': '15px' }}>{value.type}</p>\r\n          <p>{value.street}</p>\r\n          <p>{value.city}</p>\r\n          <p>{value.state}</p>\r\n          <p>{value.zipCode}</p>\r\n          <p>{value.country}</p>\r\n        </div>\r\n      );\r\n    });\r\n    const Web = response.website.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p>\r\n            {value.websiteType} : {value.website}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    const mail = response.emailAddress.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p>\r\n            {value.emailType} : {value.emailAddress}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    const Num = response.phone.map((value, index) => {\r\n      return (\r\n        <div className=\"table-span-light\" key={index}>\r\n          <p>\r\n            {value.phoneType} : {value.phone}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    setAddress(adrs);\r\n    setID(idx);\r\n    setRate(rte);\r\n    setTitle(ttl);\r\n    setEmail(mail);\r\n    setNumber(Num);\r\n    setWebsite(Web);\r\n    setLoading(false)\r\n  };\r\n\r\n  return (\r\n     <Spin size=\"large\" spinning={Loading}>\r\n       <>\r\n      <Card>\r\n      <div className=\"d-flex flex-wrap mb-3\">\r\n        <div>\r\n          <h3>{Title}</h3>\r\n        </div>\r\n        <div className=\"red-span\">\r\n          <p>Company</p>\r\n        </div>\r\n      </div>\r\n      </Card>\r\n      <div className=\"d-flex flex-wrap\">\r\n        <Card\r\n          extra={\r\n            <Button\r\n              type=\"link\"\r\n              onClick={() => props.history.push('/edit/company', editableData)}\r\n            >\r\n              Edit\r\n            </Button>\r\n          }\r\n          title=\"Contact Details\"\r\n          className=\"m-2 card-box\"\r\n        >\r\n          <table class=\"table table-borderless\">\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-dark\">Name</span>\r\n                </td>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-light\">{Title}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-dark\">Email Address</span>\r\n                </td>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-light\">{Email}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-dark\">Phone Number</span>\r\n                </td>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-light\">{Number}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-dark\">Website</span>\r\n                </td>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-light\">{Website}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-dark\">Address</span>\r\n                </td>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-light\">{address}</span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Card>\r\n        <Card title=\"Billing Information\" className=\"m-2 card-box\">\r\n          <table class=\"table table-borderless\">\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-dark\">ID</span>\r\n                </td>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-light\">{ID}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-dark\">Rate</span>\r\n                </td>\r\n                <td className=\"border-0 py-1\">\r\n                  <span className=\"table-span-light\">{Rate}</span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  \r\n     </Spin>\r\n    );\r\n}\r\nexport default CompanyView;\r\n"],"sourceRoot":""}