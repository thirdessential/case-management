{"version":3,"sources":["App/components/Invoice/Invoice.js"],"names":["Invoice","props","console","log","userId","useSelector","state","user","token","_id","useState","account","name","location","clientData","address","Data","setData","useEffect","api","get","then","res","undefined","data","street2","street","city2","city","state2","zipCode2","zipCode","country2","country","ddate","invoiceData","dueDate","getDate","getMonth","getFullYear","id","bodyStyle","className","date","status","style","fontWeight","matter","class","scope","timeData","map","item","index","key","time","description","rate","subTotal","expenseData","qty","Total","toFixed","type","onClick","canvas","document","getElementById","pdf","jsPDF","addHTML","save"],"mappings":"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","file":"static/js/61.4481fd34.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from '../../../resources/api';\nimport jsPDF from 'jspdf';\nimport {Card, Button } from 'antd';\nimport 'jspdf-autotable';\n\nimport ReactDOMServer from 'react-dom/server';\n\nimport html2pdf from 'simple-html2pdf';\n\n//let invoiceData = { id , date , status}\n// companyData ={ name, address , phone , email}\n//userData = { name,address}\n//billData =[]\n\nconst Invoice = (props) => {\n  console.log(props)\n  const userId = useSelector((state) => state.user.token.user._id);\n  const [Data, setData] = useState({\n    account : {\n        name : \"Law office of \" + props.location.state.clientData.name,\n        address : {\n\n        }\n    }\n})\n  function fetchDetails(){\n      api.get('/user/view/' + userId).then((res) => {\n          console.log(res)\n          if(res.data.data.account !=undefined){\n            setData(res.data.data)\n          }\n      })\n  }\n  useEffect(() => {\n    fetchDetails()\n  }, [])\n  const exportPDF = () => {\n    var canvas = document.getElementById('canvas');\n    var pdf = new jsPDF('p', 'mm', 'a4');\n    // pdf.html(canvas, {\n    //   callback: function () {\n    //     pdf.save('testing.pdf');\n    //     window.open(pdf.output('bloburl')); // to debug\n    //   },\n    // });\n    // pdf.save('test.pdf');\n    pdf.addHTML(\n      canvas,\n\n      function () {\n        pdf.save('invoice.pdf');\n      }\n    );\n  };\n  const street2 = Data.account.address.street \n                  ? Data.account.address.street \n                  : \"\" \n          \n  const city2 =   Data.account.address.city \n                  ? Data.account.address.city \n                  : \"\" \n  \n  const state2 =   Data.account.address.state \n                  ?\n                  Data.account.address.state\n                  : \n                  \"\" \n            \n  const zipCode2 = Data.account.address.zipCode \n                  ?\n                  Data.account.address.zipCode\n                  : \n                  \"\" \n                  + \" \"\n  const country2 =  Data.account.address.country \n                  ?\n                  Data.account.address.country\n                  : \n                  \"\" \n\n  const street = props.location.state.clientData.address.street \n                  ? props.location.state.clientData.address.street \n                  : \"\" \n          \n  const city =   props.location.state.clientData.address.city \n                  ? props.location.state.clientData.address.city \n                  : \"\" \n  \n  const state =   props.location.state.clientData.address.state \n                  ?\n                  props.location.state.clientData.address.state\n                  : \n                  \"\" \n            \n  const zipCode = props.location.state.clientData.address.zipCode \n                  ?\n                  props.location.state.clientData.address.zipCode\n                  : \n                  \"\" \n                  + \" \"\n  const country =  props.location.state.clientData.address.country \n                  ?\n                  props.location.state.clientData.address.country\n                  : \n                  \"\" \n          \n  const ddate = props.location.state.invoiceData.dueDate\n  const dueDate = ddate.getDate() +\"/\"+ ddate.getMonth()+1 + \"/\" +  ddate.getFullYear()\n  const invoiceForm = () => (\n    \n    <Card id = \"canvas\" bodyStyle={{\"padding\": \"30px\"}} className=\"mb-3\">\n    <div className=\"text-center P-3\">\n      <h6 className=\"text-right pb-3\">\n        Invoice #{props.location.state.invoiceData.id} - {props.location.state.invoiceData.date}\n      </h6>\n\n    \n        {\n/* \n  <div>\n<img\n          src={props.location.state.companyData.logo}\n          alt=\"companyLogo\"\n          style={{ width: '200px' }}\n        />\n        <h3 className=\"font-weight-bold\">{props.location.state.companyData.name}</h3>\n        <div>{props.location.state.companyData.address}</div>\n        <div>Phone : {props.location.state.companyData.phone}</div>\n        <div>Email : {props.location.state.companyData.email}</div>\n      </div>\n*/\n        }\n        \n\n      <div className=\"text-right\">\n        <h5 className=\"font-weight-bold\">INVOICE</h5>\n        <div>\n          <div>Invoice #{props.location.state.invoiceData.id}</div>\n          <div>Date : {props.location.state.invoiceData.date}</div>\n          <div>Due Date : {dueDate}</div>\n          <div>{props.location.state.invoiceData.status}</div>\n          <div>\n            <span style={{fontWeight : \"bold\"}}>{street + \" \" + city + \" \" + state }</span><br></br>\n            <span style={{fontWeight : \"bold\"}}>{zipCode + \" \" + country}</span><br></br>\n          </div>\n        </div>\n      </div>\n      <div className=\"float-left text-left\">\n        <div><h3 style={{fontWeight : \"bold\"}}>{Data.account.name} </h3></div>\n        <div>\n          <span style={{fontWeight : \"bold\"}}>{street2 + \" \" + city2 + \" \" + state2 }</span><br></br>\n          <span style={{fontWeight : \"bold\"}}>{zipCode2 + \" \" + country2}</span><br></br>\n        </div>\n        \n        <br></br>\n      <div><h4 style={{fontWeight : '650'}}>{props.location.state.matter}</h4></div>\n      <br></br>\n      </div>\n      <div className=\"my-5 py-5\">\n        <table class=\"table\">\n          <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Qty</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Rate</th>\n              <th scope=\"col\">Sub total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.location.state.timeData.map((item, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{item.date}</th>\n                <td>{item.time}</td>\n                <td>{item.description}</td>\n                <td>&#8377;{item.rate}</td>\n                <td>{item.subTotal}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"my-5 py-5\">\n        <table class=\"table\">\n          <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Duration</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Rate</th>\n              <th scope=\"col\">Sub total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.location.state.expenseData.map((item, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{item.date}</th>\n                <td>{item.qty}</td>\n                <td>{item.description}</td>\n                <td>&#8377;{item.rate}</td>\n                <td>{item.subTotal}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <br></br><br></br>\n            <h4>Total Amount : {props.location.state.Total.toFixed(2)}</h4>\n      </div>\n    </div>\n    </Card>\n  );\n      \n  return (\n    <div>\n      {invoiceForm()}\n      <Button className=\"ml-auto \" type=\"primary\" onClick={exportPDF}>\n        Download PDF\n      </Button>\n    </div>\n  );\n};\nexport default Invoice;\n//Example use case\n"],"sourceRoot":""}