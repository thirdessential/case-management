{"version":3,"sources":["App/components/AddEditContact/EditPerson.js"],"names":["validEmailRegex","RegExp","validNameRegex","options","response","customData","error","FirstName","MiddleName","LastName","Prefix","Title","errors","Type","Email","phone","Website","Address","Street","City","Country","State","ZipCode","finalres","FormData","editPerson","React","Component","constructor","props","super","handleChange","e","persist","target","name","selectedIndex","this","setState","st","data","value","id","openNotificationWithIcon","type","notification","message","openNotificationWithfailure","handleSubmit","event","a","preventDefault","destroy","valid","Object","values","forEach","val","length","validateForm","console","log","state","userId","customFields","dataList","assign","fileList","prefixx","companyy","modal","api","post","location","_id","then","visible","key","loading","content","duration","formData","file","append","res","status","setTimeout","success","undefined","history","goBack","catch","err","push","warning","handleOk","handleCancel","address","emailAddress","website","client","prefix","editData","billingPaymentProfile","customFeilds","handleCustom","componentDidMount","user","JSON","parse","window","localStorage","getItem","token","firstName","lastName","get","preForm","Group","controlId","Label","as","defaultValue","onChange","style","className","comForm","Control","company","map","index","md","render","test","HandleAddressChange","newState","handleMultipleChange","list","tagName","addFeild","emailType","phoneType","websiteType","handleDelete","splice","onRemove","indexOf","newFileList","slice","files","beforeUpload","count","reader","FileReader","readAsDataURL","onload","thumbUrl","result","item","onSuccess","resp","xhr","onPreview","handlePreview","fileId","url","filter","uid","imageUpload","height","width","src","image","marginTop","onSubmit","Row","sm","required","middleName","onClick","text","editMode","record","inputList","change","delete","title","color","street","city","zipCode","country","variant","placeholder","centered","onOk","onCancel","connect"],"mappings":"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","file":"static/js/58.b9a41245.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Row, Button, Col, ToggleButtonGroup } from 'react-bootstrap';\nimport { Upload, message, Modal, notification, Space, Card } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport DynamicFeilds from './DynamicFeilds/index.js';\nimport api from '../../../resources/api';\nimport AddCompany from './AddCompany/indexModal.js';\nimport { connect } from 'react-redux';\nimport { Button as AntdButton } from 'antd';\n\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nconst validNameRegex = RegExp(\n  /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n);\n\nconst validZipRegex = RegExp(/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/);\nconst validUrlRegex = RegExp(\n  /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\n);\n\nlet editMode = true;\nlet options = null;\nlet response = {};\nlet customData = [];\nlet res = '';\nlet error = {\n  FirstName: '',\n  MiddleName: '',\n  LastName: '',\n  Prefix: '',\n  Title: '',\n};\nlet errors = {\n  Type: [''],\n  Email: [''],\n  phone: [''],\n  Website: [''],\n  Address: [''],\n  Street: [''],\n  City: [''],\n  Country: [''],\n  State: [''],\n  ZipCode: [''],\n};\nlet formData = new FormData();\nlet finalres = '';\n\nclass editPerson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: [],\n      emailAddress: [],\n      phone: [],\n      website: [],\n      client: '',\n      prefix : \"\",\n      customFields: [{}],\n      modal: false,\n      valid: false,\n      visible: false,\n      editData: '',\n      fileList: [],\n      prefixx : \"\",\n      companyy : \"\",\n      billingPaymentProfile : \"default\",\n      customFeilds : []\n    };\n  }\n\n  handleCustom(e) {\n    e.persist();\n    const { id, value, name } = e.target;\n    customData[id] = { [name]: value };\n  }\n   handleChange = (e) => {\n    e.persist();\n    if (e.target.name === 'company' && e.target.selectedIndex != 0) {\n\n      this.setState((st) => ({\n        ...st,\n        [e.target.name]: response.data.data[e.target.selectedIndex - 1],\n      }));\n    } else {\n      this.setState((st) => ({ ...st, [e.target.name]: e.target.value }));\n    }\n\n    const { name, value, id } = e.target;\n    switch (name) {\n      case 'prefix':\n        error.Prefix = value === 'default' ? 'Prefix is required!' : '';\n        break;\n\n      default:\n        break;\n    }\n  };\n   componentDidMount() {\n    let user = JSON.parse(window.localStorage.getItem('Case.user'))\n    user = user.token.user\n\n    this.setState({\n      user : user.firstName + \" \" + user.lastName\n    })\n   api.get(\n      '/contact/view/' + this.props.location.state._id\n    ).then((editData)=>{\n      console.log(editData)\n      const preForm = <div>\n         <Form.Group controlId=\"Prefix\">\n                      <Form.Label>Prefix</Form.Label>\n                      <select\n                        as=\"select\"\n                        name=\"prefix\"\n                        defaultValue = {editData.data.data.prefix}\n                        onChange={this.handleChange}\n                        style={{ 'border-radius': '5px' }}\n                      >\n                        <option>Prefix</option>\n                        <option>Mr.</option>\n                        <option>Miss.</option>\n                        <option>Ms.</option>\n                        <option>Dr.</option>\n                        <option>Gov.</option>\n                        <option>Prof.</option>\n                      </select>\n                    </Form.Group>\n                    <p className=\"help-block text-danger\">{error.Prefix}</p>\n      </div>\n\n      const comForm = <div>\n        <Form.Group controlId=\"formGroupCompany\">\n                      <Form.Label>Company</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"company\"\n                        defaultValue={editData.data.data.company[0] == null ? \"\" : editData.data.data.company[0].name  }\n                        onChange={this.handleChange}\n                      >\n                        <option key={0}>Select a company</option>\n                        {options}\n                      </Form.Control>\n                    </Form.Group>\n        </div>\n      this.setState({ editData: editData.data.data, prefixx : preForm, companyy:comForm });\n\n      this.setState({\n        phone: editData.data.data.phone,\n        emailAddress: editData.data.data.emailAddress,\n        address: editData.data.data.address,\n        website: editData.data.data.website,\n        prefix : editData.data.data.prefix \n      });\n    })\n\n    \n\n    // this.setState({ editData: tempData.data.data });\n\n \n   api.get('/company/viewforuser/' + this.props.userId).then((res)=>{\n    response = res\n    options = res.data.data.map((value, id) => {\n      return <option key={id}>{value.name}</option>;\n    });\n   })\n\n   \n    api.get('/user/view/' + this.props.userId).then((res)=>{\n      console.log(res)\n      let customFeilds = []\n  \n      res.data.data.customFields.map((value, index)=>{\n          customFeilds.push(<Col md=\"6\">\n          <Form.Group key={index} controlId={index}>\n            <Form.Label>{value.name}</Form.Label>\n            <Form.Control\n              name={value.name}\n              type={value.type}\n              defaultValue={this.state.editData.customFields == undefined  || this.state.editData.customFields.length ==0 ? \" \" : this.state.editData.customFields[index][value.name]}\n            onChange={this.handleCustom}\n            />\n          </Form.Group>\n        </Col>)\n      })\n      this.setState({\n        customFeilds : customFeilds\n      })\n    \n      })\n    \n\n    // customFields = feilds.data.data.customFields.map((value, index) => {\n    //   let val = '';\n    //   if (this.state.editData.customFields !== undefined) {\n    //     val = this.state.editData.customFields[index][value.name];\n    //   }\n    //   return (\n    //     <Col md=\"6\">\n    //       <Form.Group key={index} controlId={index}>\n    //         <Form.Label>{value.name}</Form.Label>\n    //         <Form.Control\n    //           name={value.name}\n    //           type={value.type}\n    //           defaultValue={val}\n    //           onChange={this.handleCustom}\n    //         />\n    //       </Form.Group>\n    //     </Col>\n    //   );\n    // });\n\n    this.setState({ options });\n\n    {\n      /*\n    if(this.props.location.pathname == \"/manage/contacts/edit/person\"){\n      editMode = true\n      res= await api.get('/contact/showall')\n      res = res.data.data[this.props.location.state]\n      console.log(res)\n    }\n  */\n    }\n  }\n  openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: 'Contact Saved',\n    });\n  };\n  openNotificationWithfailure = (type) => {\n    notification[type]({\n      message: 'Failure',\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    notification.destroy();\n\n    const validateForm = () => {\n      let valid = true;\n      Object.values(error).forEach((val) => val.length > 0 && (valid = false));\n      Object.values(errors.Email).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.phone).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.State).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.Street).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.City).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.ZipCode).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.Country).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n \n      return valid;\n    };\n    if (validateForm()) {\n      console.log('all good');\n      const data = this.state;\n      data.userId = this.props.userId;\n      data.customFields = customData;\n      let dataList = Object.assign({}, this.state);\n      delete data.fileList;\n      delete data.prefixx\n      delete data.companyy\n      delete data.modal\n\n      if (editMode) {\n        api\n          .post('/contact/edit/' + this.props.location.state._id, data)\n          .then((data) => {\n\n            finalres = data.data._id;\n            this.setState({ visible: true });\n            const key = 'updatingDetails';\n\n            const openMessage = () => {\n              message.loading({\n                content: 'Uploading Files...',\n                key,\n                duration: 5,\n              });\n            };\n            if (dataList.fileList.length !== 0) {\n              openMessage();\n              const formData = new FormData();\n              dataList.fileList.forEach((file) => {\n                formData.append('image', file);\n              });\n\n              api\n                .post('/contact/upload/' + data.data.data._id, formData)\n                .then((res) => {\n                  if (res.status === 200) {\n                    setTimeout(() => {\n                      message.success({\n                        content: 'Uploaded!',\n                        key,\n                        duration: 3,\n                      });\n                    }, 1000);\n                  } else {\n                    console.log({ res });\n                  }\n                  if (this.props.location != undefined) {\n                    this.props.history.goBack();\n                  }\n                })\n                .catch((err) => {\n                  console.log({ err });\n                });\n            } else {\n              if (this.props.location != undefined) {\n                this.props.history.push('/manage/contacts');\n                return notification.success({\n                  message: 'Contact Edit SuccessFully',\n                });\n              }\n            }\n          });\n      }\n    } else {\n      return notification.warning({\n        message: 'Please enter valid details',\n      });\n    }\n  };\n  handleOk = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const handleChange = (e) => {\n      e.persist();\n      if (e.target.name === 'company' && e.target.selectedIndex != 0) {\n\n        this.setState((st) => ({\n          ...st,\n          [e.target.name]: response.data.data[e.target.selectedIndex - 1],\n        }));\n      } else {\n        this.setState((st) => ({ ...st, [e.target.name]: e.target.value }));\n      }\n  \n      const { name, value, id } = e.target;\n      switch (name) {\n        case 'prefix':\n          error.Prefix = value === 'default' ? 'Prefix is required!' : '';\n          break;\n        case 'firstName':\n          error.FirstName =\n            value.length == 0\n              ? 'First Name is required!'\n              : !validNameRegex.test(value)\n              ? 'First Name must be in characters!'\n              : value.length > 20\n              ? 'First Name must be less than 20 characters long!'\n              : '';\n          break;\n        case 'middleName':\n          error.MiddleName =\n            value.length == 0\n              ? ''\n              : !validNameRegex.test(value)\n              ? 'Middle Name must be in characters!'\n              : value.length > 20\n              ? 'Middle Name must be less than 20 characters long!'\n              : '';\n          break;\n        case 'lastName':\n          error.LastName =\n            value.length == 0\n              ? ''\n              : !validNameRegex.test(value)\n              ? 'Last Name must be in characters!'\n              : value.length > 20\n              ? 'Last Name must be less than 20 characters long!'\n              : '';\n          break;\n\n        case 'title':\n          error.Title = value.length == 0 ? 'Title is Required' : '';\n          break;\n\n        default:\n          break;\n      }\n    };\n    const HandleAddressChange = (e) => {\n      e.persist();\n      const { id, value, name } = e.target;\n      let newState = this.state;\n      newState.address[id][name] = value;\n      this.setState(newState);\n\n      switch (e.target.name) {\n        case 'type':\n          errors.Type[id] = value === 'default' ? 'Type is required!' : '';\n          break;\n\n        case 'country':\n          errors.Country[id] =\n            value === 'default' ? 'Country is required!' : '';\n          break;\n\n        case 'street':\n          errors.Street[id] =\n            value.length == 0\n              ? ''\n              : value.length < 2\n              ? 'Street is Required'\n              : '';\n          break;\n        case 'city':\n          errors.City[id] =\n            value.length == 0\n              ? ''\n              : !validNameRegex.test(value)\n              ? 'City Name must be in characters!'\n              : value.length < 2\n              ? 'City is Required'\n              : '';\n          break;\n        case 'state':\n          errors.State[id] =\n            value.length == 0\n              ? ''\n              : !validNameRegex.test(value)\n              ? 'State Name must be in characters!'\n              : value.length < 2\n              ? 'State is Required'\n              : '';\n          break;\n        case 'zipCode':\n          errors.ZipCode[id] =\n            value.length == 0\n              ? ''\n              : value.length > 4 && value.length < 10\n              ? ''\n              : 'Zipcode is not valid!';\n          break;\n      }\n    };\n    const handleMultipleChange = (e) => {\n      e.persist();\n      let list = this.state;\n      const { name, id, value, tagName } = e.target;\n      if (tagName === 'SELECT') {\n        name === 'emailAddress'\n          ? (list[name][id][`emailType`] = value)\n          : (list[name][id][`${name}Type`] = value);\n      } else {\n        list[name][id][name] = value;\n      }\n      this.setState(list)\n      console.log(this.state)\n      if (tagName !== 'SELECT') {\n        switch (name) {\n          case 'emailAddress':\n            errors.Email[id] = validEmailRegex.test(value)\n              ? ''\n              : 'Email is not valid!';\n            break;\n          case 'phone':\n            errors.phone[id] =\n              value.length < 10 || value.length > 13\n                ? 'phone number must be between 10 and 13 digits'\n                : '';\n            break;\n\n          default:\n            break;\n        }\n    }\n    };\n    const addFeild = (type) => {\n      let list = this.state;\n      if (type === 'emailAddress') {\n        list.emailAddress.push({ emailType: 'work', emailAddress: '' });\n        this.setState(list);\n      } else if (type === 'address') {\n        list.address.push({});\n        this.setState(list);\n      } else if (type === 'phone') {\n        list.phone.push({ phoneType: 'work', phone: '' });\n        this.setState(list);\n      } else if (type === 'website') {\n        list.website.push({ websiteType: 'work', website: '' });\n        this.setState(list);\n      }\n    };\n\n    const AddCompanyHandler = () => {\n      // api.post('/company/create', {companyData})\n      this.setState({ modal: false });\n    };\n    const handleDelete = (e) => {\n      e.persist();\n      const { name, id } = e.target;\n      let newState = this.state;\n      newState[name].splice(id, 1);\n      this.setState(newState);\n    };\n\n    const handleImageChange = (info) => {\n      console.log(info);\n      formData.set('image', info.file.name);\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n        if (info.file.status === 'done') {\n          message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n          message.error(`${info.file.name} file upload failed.`);\n        }\n      }\n    };\n\n    const props = {\n      onRemove: (file) => {\n        const index = this.state.fileList.indexOf(file);\n        const newFileList = this.state.fileList.slice();\n        newFileList.splice(index, 1);\n        this.props.onChange && this.props.onChange(newFileList);\n        this.setState({\n          fileList: newFileList,\n          files: newFileList,\n        });\n      },\n      beforeUpload: (file) => {\n        let count = [];\n        let files = [];\n        // if (showUploadList) {\n        //   files = this.state.files;\n        // }\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (e) => {\n          file.thumbUrl = e.target.result;\n          files.push(file);\n          files.map((item, index) => {\n            if (file.name === item.name) {\n              count.push(index);\n              if (count.length > 1) {\n                message.error('This File Aready Exists');\n                files.splice(index, 1);\n                return;\n              }\n            }\n          });\n          this.setState({\n            fileList: [...files],\n          });\n\n          this.props.onChange && this.props.onChange(this.state.fileList);\n        };\n        return false;\n      },\n      onSuccess: (resp, file, xhr) => {\n        file.status = 'done';\n      },\n      onPreview: this.handlePreview,\n      // fileList: showUploadList ? this.state.fileList : null,\n      // multiple: multiple,\n      // showUploadList: showUploadList,\n      onRemove: (fileId) => {\n        if (fileId.url) {\n          // let url =\n          //   baseUrl +\n          //   \"/api/v1/users/update/delete/\" +\n          //   this.state._id;\n          // let body = {\n          //   toDelete: fileId.orig\n          // };\n          // axios\n          //   .post(url, body)\n          //   .then(data => {\n          //     console.log(\"Image Deleted!\");\n          //   })\n          //   .catch(err => {\n          //     console.log({\n          //       \"Error Deleting Image\": err\n          //     });\n          //   });\n        }\n        const { fileList } = this.state;\n        this.setState({\n          fileList: fileList.filter((item) => item.uid !== fileId.uid),\n        });\n      },\n    };\n    const imageUpload = this.state.editData ? (\n      <div>\n        <img height=\"100\" width=\"100\" src={this.state.editData.image}></img>\n        <br />\n        <Upload {...props}>\n          <AntdButton style={{marginTop : \"10px\"}}>Upload Image</AntdButton>\n        </Upload>\n      </div>\n    ) : (\n      <Upload {...props}>\n        <AntdButton style={{marginTop : \"10px\"}}>Upload Image</AntdButton>\n      </Upload>\n    );\n\n    return (\n      <>\n        <div className=\"form-width\">\n          <div className=\"card p-4\">\n            <Form className=\"form-details\" onSubmit={this.handleSubmit}>\n              <div className=\"form-header-container mb-4\">\n                <h3 className=\"form-header-text\">Update Contact</h3>\n              </div>\n              <h4>Personal Details</h4>\n              <div className=\"form-header-container mb-4\">\n                <Form.Row>\n                  <Col className=\"py-3\">{imageUpload}</Col>\n                </Form.Row>\n                <Form.Row>\n                  <Col sm>\n                    {console.log(this.state.prefix)}\n                    {this.state.prefixx}\n                    </Col>\n                  <Col sm>\n                    <Form.Group controlId=\"formGroupFirstName\">\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control\n                        required\n                        name=\"firstName\"\n                        type=\"text\"\n                        defaultValue={this.state.editData.firstName ? this.state.editData.firstName :\"\" }\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <p className=\"help-block text-danger\">{error.FirstName}</p>\n                  </Col>\n                </Form.Row>\n\n                <Form.Row>\n                  <Col sm>\n                    <Form.Group controlId=\"formGroupMiddleName\">\n                      <Form.Label>Middle Name</Form.Label>\n                      <Form.Control\n                        name=\"middleName\"\n                        type=\"text\"\n                        defaultValue={this.state.editData.middleName ? this.state.editData.middleName : \"\"}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <p className=\"help-block text-danger\">{error.MiddleName}</p>\n                  </Col>\n                  <Col sm>\n                    <Form.Group controlId=\"formGroupLastName\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control\n                        required\n                        name=\"lastName\"\n                        type=\"text\"\n                        defaultValue={this.state.editData.lastName ? this.state.editData.lastName : \"\"}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <p className=\"help-block text-danger\">{error.LastName}</p>\n                  </Col>\n                </Form.Row>\n\n                <Row>\n                  <Col sm>\n                    {this.state.companyy}\n                  </Col>\n                </Row>\n                <div className=\"form-add mb-4\">\n                  <span onClick={() => this.setState({ modal: true })}>\n                    Add Company\n                  </span>\n                </div>\n                <DynamicFeilds\n                  type={'emailAddress'}\n                  name={'emailAddress'}\n                  text={'Email'}\n                  editMode={editMode}\n                  record={this.state.editData.emailAddress}\n                  error={errors.Email}\n                  inputList={this.state.emailAddress}\n                  change={handleMultipleChange}\n                  delete={handleDelete}\n                ></DynamicFeilds>\n                <div className=\"form-add mb-4\">\n                  <span onClick={() => addFeild('emailAddress')}>\n                    Add an Email\n                  </span>\n                </div>\n                <Row>\n                  <Col sm>\n                    <Form.Group controlId=\"formGroupTitle\">\n                      <Form.Label>Title</Form.Label>\n                      <Form.Control\n                        name=\"title\"\n                        type=\"text\"\n                        defaultValue={this.state.editData.title}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <p className=\"help-block text-danger\">{error.Title}</p>\n                  </Col>\n                </Row>\n\n                <DynamicFeilds\n                  type={'number'}\n                  name={'phone'}\n                  text={'Phone Number'}\n                  editMode={editMode}\n                  error={errors.phone}\n                  record={this.state.editData.phone}\n                  inputList={this.state.phone}\n                  change={handleMultipleChange}\n                  delete={handleDelete}\n                ></DynamicFeilds>\n                <div className=\"form-add mb-4\">\n                  <span onClick={() => addFeild('phone')}>\n                    Add a Phone Number\n                  </span>\n                </div>\n                <DynamicFeilds\n                  type={'website'}\n                  name={'website'}\n                  text={'website'}\n                  error={errors.Website}\n                  editMode={editMode}\n                  record={this.state.editData.website}\n                  inputList={this.state.website}\n                  change={handleMultipleChange}\n                  delete={handleDelete}\n                ></DynamicFeilds>\n                <div className=\"form-add mb-4\">\n                  <span onClick={() => addFeild('website')}>Add a Website</span>\n                </div>\n                <p className=\"help-block text-danger\">{errors.Website}</p>\n\n                <p style={{ color: '#4e4e91' }}>\n                  <b>Address</b>\n                </p>\n                {this.state.address.map((value, index) => {\n                  return (\n                    <div className=\"mb-3\">\n                      <Form.Row>\n                        <Col sm>\n                          <Form.Group controlId={index}>\n                            <Form.Label>Type</Form.Label>\n                            <Form.Control\n                              as=\"select\"\n                              name=\"type\"\n                              value={\n                                this.state.editData.address[index].type\n                              }\n                              onChange={HandleAddressChange}\n                            >\n                              <option>Work</option>\n                              <option>Home</option>\n                            </Form.Control>\n                          </Form.Group>\n                          <p className=\"help-block text-danger\">\n                            {errors.Type}\n                          </p>\n                        </Col>\n                        <Col sm>\n                          <Form.Group controlId={index}>\n                            <Form.Label>Street</Form.Label>\n                            <Form.Control\n                              name=\"street\"\n                              type=\"text\"\n                              defaultValue={\n                                this.state.editData.address[index].street\n                              }\n                              onChange={HandleAddressChange}\n                            />\n                          </Form.Group>\n                          <p className=\"help-block text-danger\">\n                            {errors.Street[index]}\n                          </p>\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col sm>\n                          <Form.Group controlId={index}>\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                              name=\"city\"\n                              type=\"text\"\n                              defaultValue={\n                                this.state.editData.address[index].city\n                              }\n                              onChange={HandleAddressChange}\n                            />\n                          </Form.Group>\n                          <p className=\"help-block text-danger\">\n                            {errors.City[index]}\n                          </p>\n                        </Col>\n                        <Col sm>\n                          <Form.Group controlId={index}>\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                              name=\"state\"\n                              type=\"text\"\n                              defaultValue={\n                                this.state.editData.address[index].state\n                              }\n                              onChange={HandleAddressChange}\n                            />\n                          </Form.Group>\n                          <p className=\"help-block text-danger\">\n                            {errors.State}\n                          </p>\n                        </Col>\n                      </Form.Row>\n                      <Row>\n                        <Col sm>\n                          <Form.Group controlId={index}>\n                            <Form.Label>ZipCode</Form.Label>\n                            <Form.Control\n                              name=\"zipCode\"\n                              type=\"number\"\n                              defaultValue={\n                                this.state.editData.address[index].zipCode\n                              }\n                              onChange={HandleAddressChange}\n                            />\n                          </Form.Group>\n                          <p className=\"help-block text-danger\">\n                            {errors.ZipCode[index]}\n                          </p>\n                        </Col>\n                        <Col sm>\n                          <Form.Group controlId={index}>\n                            <Form.Label>Country</Form.Label>\n                            <select\n                              defaultValue={\n                                this.state.editData.address[index].country\n                              }\n                              name=\"country\"\n                              id={index}\n                              onChange={HandleAddressChange}\n                              style={{ 'border-radius': '5px' }}\n                            >\n                              <option value=\"default\">Country</option>\n                              <option value=\"Afganistan\">Afghanistan</option>\n                              <option value=\"Albania\">Albania</option>\n                              <option value=\"Algeria\">Algeria</option>\n                              <option value=\"American Samoa\">\n                                American Samoa\n                              </option>\n                              <option value=\"Andorra\">Andorra</option>\n                              <option value=\"Angola\">Angola</option>\n                              <option value=\"Anguilla\">Anguilla</option>\n                              <option value=\"Antigua & Barbuda\">\n                                Antigua & Barbuda\n                              </option>\n                              <option value=\"Argentina\">Argentina</option>\n                              <option value=\"Armenia\">Armenia</option>\n                              <option value=\"Aruba\">Aruba</option>\n                              <option value=\"Australia\">Australia</option>\n                              <option value=\"Austria\">Austria</option>\n                              <option value=\"Azerbaijan\">Azerbaijan</option>\n                              <option value=\"Bahamas\">Bahamas</option>\n                              <option value=\"Bahrain\">Bahrain</option>\n                              <option value=\"Bangladesh\">Bangladesh</option>\n                              <option value=\"Barbados\">Barbados</option>\n                              <option value=\"Belarus\">Belarus</option>\n                              <option value=\"Belgium\">Belgium</option>\n                              <option value=\"Belize\">Belize</option>\n                              <option value=\"Benin\">Benin</option>\n                              <option value=\"Bermuda\">Bermuda</option>\n                              <option value=\"Bhutan\">Bhutan</option>\n                              <option value=\"Bolivia\">Bolivia</option>\n                              <option value=\"Bonaire\">Bonaire</option>\n                              <option value=\"Bosnia & Herzegovina\">\n                                Bosnia & Herzegovina\n                              </option>\n                              <option value=\"Botswana\">Botswana</option>\n                              <option value=\"Brazil\">Brazil</option>\n                              <option value=\"British Indian Ocean Ter\">\n                                British Indian Ocean Ter\n                              </option>\n                              <option value=\"Brunei\">Brunei</option>\n                              <option value=\"Bulgaria\">Bulgaria</option>\n                              <option value=\"Burkina Faso\">Burkina Faso</option>\n                              <option value=\"Burundi\">Burundi</option>\n                              <option value=\"Cambodia\">Cambodia</option>\n                              <option value=\"Cameroon\">Cameroon</option>\n                              <option value=\"Canada\">Canada</option>\n                              <option value=\"Canary Islands\">\n                                Canary Islands\n                              </option>\n                              <option value=\"Cape Verde\">Cape Verde</option>\n                              <option value=\"Cayman Islands\">\n                                Cayman Islands\n                              </option>\n                              <option value=\"Central African Republic\">\n                                Central African Republic\n                              </option>\n                              <option value=\"Chad\">Chad</option>\n                              <option value=\"Channel Islands\">\n                                Channel Islands\n                              </option>\n                              <option value=\"Chile\">Chile</option>\n                              <option value=\"China\">China</option>\n                              <option value=\"Christmas Island\">\n                                Christmas Island\n                              </option>\n                              <option value=\"Cocos Island\">Cocos Island</option>\n                              <option value=\"Colombia\">Colombia</option>\n                              <option value=\"Comoros\">Comoros</option>\n                              <option value=\"Congo\">Congo</option>\n                              <option value=\"Cook Islands\">Cook Islands</option>\n                              <option value=\"Costa Rica\">Costa Rica</option>\n                              <option value=\"Cote DIvoire\">Cote DIvoire</option>\n                              <option value=\"Croatia\">Croatia</option>\n                              <option value=\"Cuba\">Cuba</option>\n                              <option value=\"Curaco\">Curacao</option>\n                              <option value=\"Cyprus\">Cyprus</option>\n                              <option value=\"Czech Republic\">\n                                Czech Republic\n                              </option>\n                              <option value=\"Denmark\">Denmark</option>\n                              <option value=\"Djibouti\">Djibouti</option>\n                              <option value=\"Dominica\">Dominica</option>\n                              <option value=\"Dominican Republic\">\n                                Dominican Republic\n                              </option>\n                              <option value=\"East Timor\">East Timor</option>\n                              <option value=\"Ecuador\">Ecuador</option>\n                              <option value=\"Egypt\">Egypt</option>\n                              <option value=\"El Salvador\">El Salvador</option>\n                              <option value=\"Equatorial Guinea\">\n                                Equatorial Guinea\n                              </option>\n                              <option value=\"Eritrea\">Eritrea</option>\n                              <option value=\"Estonia\">Estonia</option>\n                              <option value=\"Ethiopia\">Ethiopia</option>\n                              <option value=\"Falkland Islands\">\n                                Falkland Islands\n                              </option>\n                              <option value=\"Faroe Islands\">\n                                Faroe Islands\n                              </option>\n                              <option value=\"Fiji\">Fiji</option>\n                              <option value=\"Finland\">Finland</option>\n                              <option value=\"France\">France</option>\n                              <option value=\"French Guiana\">\n                                French Guiana\n                              </option>\n                              <option value=\"French Polynesia\">\n                                French Polynesia\n                              </option>\n                              <option value=\"French Southern Ter\">\n                                French Southern Ter\n                              </option>\n                              <option value=\"Gabon\">Gabon</option>\n                              <option value=\"Gambia\">Gambia</option>\n                              <option value=\"Georgia\">Georgia</option>\n                              <option value=\"Germany\">Germany</option>\n                              <option value=\"Ghana\">Ghana</option>\n                              <option value=\"Gibraltar\">Gibraltar</option>\n                              <option value=\"Great Britain\">\n                                Great Britain\n                              </option>\n                              <option value=\"Greece\">Greece</option>\n                              <option value=\"Greenland\">Greenland</option>\n                              <option value=\"Grenada\">Grenada</option>\n                              <option value=\"Guadeloupe\">Guadeloupe</option>\n                              <option value=\"Guam\">Guam</option>\n                              <option value=\"Guatemala\">Guatemala</option>\n                              <option value=\"Guinea\">Guinea</option>\n                              <option value=\"Guyana\">Guyana</option>\n                              <option value=\"Haiti\">Haiti</option>\n                              <option value=\"Hawaii\">Hawaii</option>\n                              <option value=\"Honduras\">Honduras</option>\n                              <option value=\"Hong Kong\">Hong Kong</option>\n                              <option value=\"Hungary\">Hungary</option>\n                              <option value=\"Iceland\">Iceland</option>\n                              <option value=\"Indonesia\">Indonesia</option>\n                              <option value=\"India\">India</option>\n                              <option value=\"Iran\">Iran</option>\n                              <option value=\"Iraq\">Iraq</option>\n                              <option value=\"Ireland\">Ireland</option>\n                              <option value=\"Isle of Man\">Isle of Man</option>\n                              <option value=\"Israel\">Israel</option>\n                              <option value=\"Italy\">Italy</option>\n                              <option value=\"Jamaica\">Jamaica</option>\n                              <option value=\"Japan\">Japan</option>\n                              <option value=\"Jordan\">Jordan</option>\n                              <option value=\"Kazakhstan\">Kazakhstan</option>\n                              <option value=\"Kenya\">Kenya</option>\n                              <option value=\"Kiribati\">Kiribati</option>\n                              <option value=\"Korea North\">Korea North</option>\n                              <option value=\"Korea Sout\">Korea South</option>\n                              <option value=\"Kuwait\">Kuwait</option>\n                              <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                              <option value=\"Laos\">Laos</option>\n                              <option value=\"Latvia\">Latvia</option>\n                              <option value=\"Lebanon\">Lebanon</option>\n                              <option value=\"Lesotho\">Lesotho</option>\n                              <option value=\"Liberia\">Liberia</option>\n                              <option value=\"Libya\">Libya</option>\n                              <option value=\"Liechtenstein\">\n                                Liechtenstein\n                              </option>\n                              <option value=\"Lithuania\">Lithuania</option>\n                              <option value=\"Luxembourg\">Luxembourg</option>\n                              <option value=\"Macau\">Macau</option>\n                              <option value=\"Macedonia\">Macedonia</option>\n                              <option value=\"Madagascar\">Madagascar</option>\n                              <option value=\"Malaysia\">Malaysia</option>\n                              <option value=\"Malawi\">Malawi</option>\n                              <option value=\"Maldives\">Maldives</option>\n                              <option value=\"Mali\">Mali</option>\n                              <option value=\"Malta\">Malta</option>\n                              <option value=\"Marshall Islands\">\n                                Marshall Islands\n                              </option>\n                              <option value=\"Martinique\">Martinique</option>\n                              <option value=\"Mauritania\">Mauritania</option>\n                              <option value=\"Mauritius\">Mauritius</option>\n                              <option value=\"Mayotte\">Mayotte</option>\n                              <option value=\"Mexico\">Mexico</option>\n                              <option value=\"Midway Islands\">\n                                Midway Islands\n                              </option>\n                              <option value=\"Moldova\">Moldova</option>\n                              <option value=\"Monaco\">Monaco</option>\n                              <option value=\"Mongolia\">Mongolia</option>\n                              <option value=\"Montserrat\">Montserrat</option>\n                              <option value=\"Morocco\">Morocco</option>\n                              <option value=\"Mozambique\">Mozambique</option>\n                              <option value=\"Myanmar\">Myanmar</option>\n                              <option value=\"Nambia\">Nambia</option>\n                              <option value=\"Nauru\">Nauru</option>\n                              <option value=\"Nepal\">Nepal</option>\n                              <option value=\"Netherland Antilles\">\n                                Netherland Antilles\n                              </option>\n                              <option value=\"Netherlands\">\n                                Netherlands (Holland, Europe)\n                              </option>\n                              <option value=\"Nevis\">Nevis</option>\n                              <option value=\"New Caledonia\">\n                                New Caledonia\n                              </option>\n                              <option value=\"New Zealand\">New Zealand</option>\n                              <option value=\"Nicaragua\">Nicaragua</option>\n                              <option value=\"Niger\">Niger</option>\n                              <option value=\"Nigeria\">Nigeria</option>\n                              <option value=\"Niue\">Niue</option>\n                              <option value=\"Norfolk Island\">\n                                Norfolk Island\n                              </option>\n                              <option value=\"Norway\">Norway</option>\n                              <option value=\"Oman\">Oman</option>\n                              <option value=\"Pakistan\">Pakistan</option>\n                              <option value=\"Palau Island\">Palau Island</option>\n                              <option value=\"Palestine\">Palestine</option>\n                              <option value=\"Panama\">Panama</option>\n                              <option value=\"Papua New Guinea\">\n                                Papua New Guinea\n                              </option>\n                              <option value=\"Paraguay\">Paraguay</option>\n                              <option value=\"Peru\">Peru</option>\n                              <option value=\"Phillipines\">Philippines</option>\n                              <option value=\"Pitcairn Island\">\n                                Pitcairn Island\n                              </option>\n                              <option value=\"Poland\">Poland</option>\n                              <option value=\"Portugal\">Portugal</option>\n                              <option value=\"Puerto Rico\">Puerto Rico</option>\n                              <option value=\"Qatar\">Qatar</option>\n                              <option value=\"Republic of Montenegro\">\n                                Republic of Montenegro\n                              </option>\n                              <option value=\"Republic of Serbia\">\n                                Republic of Serbia\n                              </option>\n                              <option value=\"Reunion\">Reunion</option>\n                              <option value=\"Romania\">Romania</option>\n                              <option value=\"Russia\">Russia</option>\n                              <option value=\"Rwanda\">Rwanda</option>\n                              <option value=\"St Barthelemy\">\n                                St Barthelemy\n                              </option>\n                              <option value=\"St Eustatius\">St Eustatius</option>\n                              <option value=\"St Helena\">St Helena</option>\n                              <option value=\"St Kitts-Nevis\">\n                                St Kitts-Nevis\n                              </option>\n                              <option value=\"St Lucia\">St Lucia</option>\n                              <option value=\"St Maarten\">St Maarten</option>\n                              <option value=\"St Pierre & Miquelon\">\n                                St Pierre & Miquelon\n                              </option>\n                              <option value=\"St Vincent & Grenadines\">\n                                St Vincent & Grenadines\n                              </option>\n                              <option value=\"Saipan\">Saipan</option>\n                              <option value=\"Samoa\">Samoa</option>\n                              <option value=\"Samoa American\">\n                                Samoa American\n                              </option>\n                              <option value=\"San Marino\">San Marino</option>\n                              <option value=\"Sao Tome & Principe\">\n                                Sao Tome & Principe\n                              </option>\n                              <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                              <option value=\"Senegal\">Senegal</option>\n                              <option value=\"Seychelles\">Seychelles</option>\n                              <option value=\"Sierra Leone\">Sierra Leone</option>\n                              <option value=\"Singapore\">Singapore</option>\n                              <option value=\"Slovakia\">Slovakia</option>\n                              <option value=\"Slovenia\">Slovenia</option>\n                              <option value=\"Solomon Islands\">\n                                Solomon Islands\n                              </option>\n                              <option value=\"Somalia\">Somalia</option>\n                              <option value=\"South Africa\">South Africa</option>\n                              <option value=\"Spain\">Spain</option>\n                              <option value=\"Sri Lanka\">Sri Lanka</option>\n                              <option value=\"Sudan\">Sudan</option>\n                              <option value=\"Suriname\">Suriname</option>\n                              <option value=\"Swaziland\">Swaziland</option>\n                              <option value=\"Sweden\">Sweden</option>\n                              <option value=\"Switzerland\">Switzerland</option>\n                              <option value=\"Syria\">Syria</option>\n                              <option value=\"Tahiti\">Tahiti</option>\n                              <option value=\"Taiwan\">Taiwan</option>\n                              <option value=\"Tajikistan\">Tajikistan</option>\n                              <option value=\"Tanzania\">Tanzania</option>\n                              <option value=\"Thailand\">Thailand</option>\n                              <option value=\"Togo\">Togo</option>\n                              <option value=\"Tokelau\">Tokelau</option>\n                              <option value=\"Tonga\">Tonga</option>\n                              <option value=\"Trinidad & Tobago\">\n                                Trinidad & Tobago\n                              </option>\n                              <option value=\"Tunisia\">Tunisia</option>\n                              <option value=\"Turkey\">Turkey</option>\n                              <option value=\"Turkmenistan\">Turkmenistan</option>\n                              <option value=\"Turks & Caicos Is\">\n                                Turks & Caicos Is\n                              </option>\n                              <option value=\"Tuvalu\">Tuvalu</option>\n                              <option value=\"Uganda\">Uganda</option>\n                              <option value=\"United Kingdom\">\n                                United Kingdom\n                              </option>\n                              <option value=\"Ukraine\">Ukraine</option>\n                              <option value=\"United Arab Erimates\">\n                                United Arab Emirates\n                              </option>\n                              <option value=\"United States of America\">\n                                United States of America\n                              </option>\n                              <option value=\"Uraguay\">Uruguay</option>\n                              <option value=\"Uzbekistan\">Uzbekistan</option>\n                              <option value=\"Vanuatu\">Vanuatu</option>\n                              <option value=\"Vatican City State\">\n                                Vatican City State\n                              </option>\n                              <option value=\"Venezuela\">Venezuela</option>\n                              <option value=\"Vietnam\">Vietnam</option>\n                              <option value=\"Virgin Islands (Brit)\">\n                                Virgin Islands (Brit)\n                              </option>\n                              <option value=\"Virgin Islands (USA)\">\n                                Virgin Islands (USA)\n                              </option>\n                              <option value=\"Wake Island\">Wake Island</option>\n                              <option value=\"Wallis & Futana Is\">\n                                Wallis & Futana Is\n                              </option>\n                              <option value=\"Yemen\">Yemen</option>\n                              <option value=\"Zaire\">Zaire</option>\n                              <option value=\"Zambia\">Zambia</option>\n                              <option value=\"Zimbabwe\">Zimbabwe</option>\n                            </select>\n                          </Form.Group>\n                          <p className=\"help-block text-danger\">\n                            {error.Country}\n                          </p>\n                        </Col>\n                      </Row>\n                      <Button\n                          id={index}\n                          name=\"address\"\n                          style={{ height: '45px', 'margin-top': '25px' }}\n                          onClick={handleDelete}\n                        >\n                          -\n                        </Button>\n                    </div>\n                  );\n                })}\n\n                <div className=\"form-add mb-4\">\n                  <span onClick={() => addFeild('address')}>\n                    Add an Address\n                  </span>\n                </div>\n                <br></br>\n              </div>\n              <br></br>\n              <div className=\"form-header-container mb-4\">\n                <h4>Custom Fields</h4>\n                <p>\n                  Customise your\n                  <Button\n                    variant=\"link\"\n                    onClick={() =>\n                      this.props.history.push('/settings/customFeilds')\n                    }\n                  >\n                    Custom Field\n                  </Button>\n                </p>\n                {\n                  this.state.customFeilds.map((val)=>{\n                    return val\n                  })\n                }\n                \n                <br></br>\n              </div>\n              <br></br>\n              <h4>Billing preferences</h4>\n              <Row>\n                <Col md=\"6\">\n                  <Form.Group>\n                    <Form.Label>Payment profile</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"Payment profile\"\n                      //defaultValue={this.props.record[idx]}\n                      onChange={handleChange}\n                    >\n                      <option>default</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              <p>Hourly billing</p>\n              <Row>\n                <Col md=\"3\">\n                  <Form.Group>\n                    <Form.Label>Firm user</Form.Label>\n                    <Form.Control\n                      name = \"billingPaymentProfile\"\n                      as=\"select\"\n                      //defaultValue={this.props.record[idx]}\n                      onChange={handleChange}\n                    >\n                      <option>{this.state.user}</option>\n\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col md=\"3\">\n                  <Form.Group>\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control \n                      name=\"billingCustomRate\" \n                      type=\"number\" \n                      onChange={handleChange}\n                      placeholder=\"$0.0\" />\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <Form.Group>\n                    <Form.Label>ClientID</Form.Label>\n                    <Form.Control\n                      name=\"billingClientId\"\n                      type=\"text\"\n                      placeholder=\"ClientID\"\n                      onChange={handleChange}\n                    />\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <Button type=\"submit\" className=\"btn btn-success\">\n                {editMode ? 'Update' : 'Create'}\n              </Button>\n              <Button onClick={() => this.props.history.goBack()}>\n                Cancel\n              </Button>\n            </Form>\n\n            <Modal\n              centered\n              visible={this.state.modal}\n              onOk={AddCompanyHandler}\n              onCancel={() => this.setState({ modal: false })}\n            >\n              <AddCompany modal={true}></AddCompany>\n            </Modal>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  userId: state.user.token.user._id,\n});\nexport default connect(mapStateToProps)(editPerson);\n"],"sourceRoot":""}