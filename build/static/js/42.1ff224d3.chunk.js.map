{"version":3,"sources":["App/containers/Activities/Form/expenseForm.js","App/containers/Activities/Form/timeForm.js","App/containers/Matter/VIewMatter/AddressForm/Form.js","App/containers/Matter/VIewMatter/AcitivityBills.js"],"names":["option","ExpenseForm","React","Component","constructor","props","super","this","state","matter","componentDidMount","api","get","userId","then","res","data","map","val","index","matterDescription","console","log","setState","editmode","record","_id","render","Group","controlId","Label","Control","type","name","placeholder","onChange","handleChange","as","rows","required","Check","id","label","connect","user","token","setTimer","time","window","localStorage","getItem","hours","Math","floor","minutes","seconds","className","ref","form","handleReset","defaultValue","AddressForm","Form","Row","Col","md","HandleAddressChange","style","value","matters","thisMatter","activity","timeError","Activity","convertTime","serverdate","toutc","Date","toUTCString","showModal","timeModal","expenseModal","handleOk","notification","destroy","error","message","date","rate","post","success","catch","err","ReactDOM","findDOMNode","messageForm","reset","billable","nonBillable","qty","invoice","setTimeout","handleCancel","loading","to","issueDate","dueDate","timeData","expenseData","editTime","EditExpense","completeData","tableData","address","city","zipCode","street","Matter","LName","invoiceId","length","location","client","firstName","lastName","timedata","total","includes","substring","parseFloat","undefined","sHours","parseInt","split","sMinutes","sSecs","description","invoiceStatus","subTotal","toFixed","push","expense","localData","JSON","parse","Lname","handleDelete","columnsForTime","title","dataIndex","key","_","onConfirm","okText","cancelText","danger","columnsForExpense","e","persist","target","selectedIndex","newData","timeValue","indexOf","isNaN","invoiceProps","invoiceData","status","getDate","getMonth","getFullYear","companyData","logo","phone","email","clientData","Total","today","spinning","size","fontWeight","newState","bodyStyle","columns","dataSource","onClick","sm","balance","from","history","goBack","visible","onOk","onCancel","afterClose","footer","disabled","disabletime","Timer","disableExpense"],"mappings":"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","file":"static/js/42.1ff224d3.chunk.js","sourcesContent":["import React, {useEffect , useState} from 'react'\nimport { useSelector , connect} from 'react-redux'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport api from '../../../../resources/api'\n\nlet option = null\n\nclass ExpenseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          matter : \"\"\n        }\n    }\n    componentDidMount(){\n        api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n            option = res.data.data.map((val, index)=>{\n                 return <option>{val.matterDescription}</option>\n             })\n         }).then(()=>{\n             console.log(option)\n             this.setState({option : option})\n         })\n\n        if(this.props.editmode){\n            api.get('/matter/view/'+ this.props.record.matter._id).then((res)=>{\n                console.log(res)\n             this.setState({matter : res.data.data.matterDescription })\n             console.log(this.state.matter)\n            })\n        }\n       \n         \n    }\n\n    render(){\n       \n        return <Form >\n        <Row>\n            <Col>\n                <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control \n                    type=\"text\" \n                    name=\"qty\" \n                    placeholder=\"1.0\"\n                    onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Col>\n            <Col>\n                <Form.Group controlId=\"matter\">\n                    <Form.Label>Matter</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        name=\"matter\" \n                        placeholder=\"Matter\"\n                        onChange={this.props.handleChange}>\n                    <option>Select a matter</option>\n                    {this.state.option}\n                    </Form.Control>\n                </Form.Group>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <Form.Group controlId=\"Description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control \n                    name=\"description\" \n                    as=\"textarea\" \n                    rows=\"3\"\n                    placeholder=\"Description\"\n                    onChange={this.props.handleChange} />\n                </Form.Group>\n            </Col>\n        </Row>\n        \n        <Row>\n            <Col>\n                <Form.Group controlId=\"rate\">\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"text\" \n                    name=\"rate\" \n                    placeholder=\"0.0 /h\"\n                    onChange={this.props.handleChange} />\n                </Form.Group>\n            </Col>\n            <Col>\n                <Form.Group controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control \n                    required\n                    type=\"date\" \n                    name=\"date\" \n                    placeholder=\"Date\" \n                    onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Col>\n        </Row>\n         \n            {\n                /*\n                     <Form.Group controlId=\"invoiceStatus\">\n            <Form.Label>Invoice Status</Form.Label>\n            <Form.Control \n                as=\"select\"\n                name=\"invoiceStatus\"\n                onChange={this.props.handleChange} >\n            <option>Unbilled</option>\n            <option>Billed</option>\n            </Form.Control>\n         </Form.Group>\n                 */\n            }\n       \n        \n       \n         <Form.Check \n               type=\"checkbox\"\n               id=\"billable\"\n               name=\"billable\"\n               label=\"Billable\"\n               onChange={this.props.handleChange}\n           /><br></br>\n    \n            {\n                /*\n                <Form.Check \n               type=\"checkbox\"\n               id=\"nonBillable\"\n               name=\"nonBillable\"\n               label=\"Non-billable\"\n               defaultChecked = {!this.props.record.billable}\n               onChange={this.props.handleChange}\n           />\n                */\n            }\n          \n\n</Form>\n\n      \n    }\n}\n\nconst mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n\nexport default connect(mapStateToProps)(ExpenseForm)","import React, {useEffect , useState} from 'react'\nimport { useSelector , connect} from 'react-redux'\nimport { Form, Col, Row } from 'react-bootstrap'\nimport api from '../../../../resources/api'\nimport Timer from '../../../components/Timer/index.js'\nlet option = null\nclass ExpenseForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          data : {\n            time : ''\n          }\n        }\n    }\n    setTimer = () => {\n       \n        const time = window.localStorage.getItem('timer');\n        let hours = Math.floor(time / 3600);\n        let minutes = Math.floor(time / 60);\n        let seconds = time % 60\n       \n        if (minutes >= 59) {\n          minutes = minutes % 60;\n        }\n        if (seconds < 10) {\n          seconds = \"0\"+seconds\n        }\n        console.log(\"Secounds  \" + seconds)\n    \n        //   const Seconds = time % 60;\n        const data = this.state.data;\n        data.time = hours + ':' + minutes + ':' + seconds\n        this.setState({ data: data });\n        console.log(this.state.data)\n    }\n    componentDidMount(){\n        api.get('/matter/viewforuser/'+ this.props.userId).then((res)=>{\n            option = res.data.data.map((val, index)=>{\n                 return <option>{val.matterDescription}</option>\n             })\n         }).then(()=>{\n             console.log(option)\n             this.setState({option : option})\n         })\n         \n        this.setTimer()\n       }\n\n    render(){\n        \n        let date = \"\"\n        /*\n        const time = window.localStorage.getItem('timer');\n        let hours = Math.floor(time / 3600);\n        let minutes = Math.floor(time / 60);\n        if (minutes >= 59) {\n        minutes = minutes % 60;\n        }\n\n        //   const Seconds = time % 60;\n        \n        const timeee = hours + ':' + minutes;\n        if(timeee != window.localStorage.getItem('timer') ){\n            const data = this.state.data\n            data.time = time\n            this.setState({\n                data : data\n            })\n        }\n        */\n\n                                        \n        \n\n       return <Form \n       id='myForm'\n       className=\"form\"\n       ref={ form => this.props.handleReset(form) } >\n        <Row>\n            <Col>\n                <Form.Group controlId=\"duration\">\n                     <Form.Label>Duration</Form.Label>\n                      <Form.Control \n                        type=\"text\" \n                        name=\"time\" \n                        placeholder=\"hh:mm:ss\" \n                        defaultValue = {this.state.data.time}\n                        onChange={this.props.handleChange}/>\n                </Form.Group>\n            </Col>\n            <Col>\n                <Timer setTimer = {this.setTimer} ></Timer>\n            </Col>\n        </Row>\n        \n        <Row>\n            <Col>\n            <Form.Group controlId=\"matter\">\n                <Form.Label>Matter</Form.Label>\n                <Form.Control \n                    as=\"select\"\n                    name=\"matter\" \n                    placeholder=\"Matter\"\n                    onChange={this.props.handleChange}>\n                <option>Select a matter</option>\n                {this.state.option}\n                </Form.Control>\n             </Form.Group>\n            </Col>\n            <Col>\n            <Form.Group controlId=\"rate\">\n                <Form.Label>Rate</Form.Label>\n                <Form.Control \n                required\n                type=\"text\" \n                name=\"rate\" \n                placeholder=\"0.0 /h\"\n                onChange={this.props.handleChange} />\n            </Form.Group>\n            </Col>\n\n        </Row>\n       \n            \n        <Row>\n            <Col>\n            <Form.Group controlId=\"Description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control \n                name=\"description\" \n                as=\"textarea\" \n                rows=\"3\"\n                placeholder=\"Description\"\n                onChange={this.props.handleChange} />\n            </Form.Group>\n            </Col>\n\n        </Row>\n       \n        <Row>\n            <Col>\n            <Form.Group controlId=\"date\">\n                <Form.Label>Date</Form.Label>\n                <Form.Control \n                required\n                type=\"date\" \n                name=\"date\" \n                placeholder=\"Date\" \n                onChange={this.props.handleChange}/>\n            </Form.Group>\n            </Col>\n            {\n                /* \n                <Col>\n            <Form.Group controlId=\"invoiceStatus\">\n                <Form.Label>Invoice Status</Form.Label>\n                <Form.Control \n                    as=\"select\"\n                    name=\"invoiceStatus\"\n                    onChange={this.props.handleChange} >\n                <option>Unbilled</option>\n                <option>Billed</option>\n                </Form.Control>\n             </Form.Group>\n            </Col>\n                */\n            }\n        </Row>\n            \n            <Row>\n                <Col>\n                <Form.Check \n               type=\"checkbox\"\n               id=\"billable\"\n               name=\"billable\"\n               label=\"Billable\"\n            \n               onChange={this.props.handleChange}\n           /><br></br>\n                </Col>\n            </Row>\n    \n            {\n                /*\n                <Form.Check \n               type=\"checkbox\"\n               id=\"nonBillable\"\n               name=\"nonBillable\"\n               label=\"Non-billable\"\n               defaultChecked = {!this.props.record.billable}\n               onChange={this.props.handleChange}\n           />\n                */\n            }\n    </Form>\n\n\n        \n    }\n}\n\nconst mapStateToProps = state => ({\n    userId: state.user.token.user._id\n  });\n\nexport default connect(mapStateToProps)(ExpenseForm)","import React from 'react'\nimport { Form , Col , Row} from 'react-bootstrap'\nimport reactWindowSize from 'react-window-size'\n\nclass AddressForm extends React.Component{\n  render(){\n      return <Form className=\"quickBill\">\n                    <Row>\n                    <Col md=\"5\" className=\"px-1\">\n                        <Form.Group controlId=\"firstName\">\n                          <Form.Control\n                            name=\"firstName\"\n                            type=\"text\"\n                            placeholder=\"firstName\"\n                            onChange={this.props.HandleAddressChange}\n                          />\n                        </Form.Group>\n                        </Col>\n                        <Col md=\"4\" className=\"px-1\">\n                        <Form.Group controlId=\"lastName\">\n                          <Form.Control\n                            name=\"lastName\"\n                            type=\"text\"\n                            placeholder=\"lastName\"\n                            onChange={this.props.HandleAddressChange}\n                          />\n                        </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md=\"3\" className=\"px-1\">\n                          <Form.Group controlId=\"type\">\n                          <Form.Control\n                            as=\"select\"\n                            name=\"type\"\n                            onChange={this.props.HandleAddressChange}\n                          >\n                            <option>Work</option>\n                            <option>Home</option>\n                            <option>other+</option>\n                          </Form.Control>\n                        </Form.Group>\n                        </Col>\n                        <Col md=\"3\" className=\"px-1\">\n                        <Form.Group controlId=\"street\">\n                          <Form.Control\n                            name=\"street\"\n                            type=\"text\"\n                            placeholder=\"Street\"\n                            onChange={this.props.HandleAddressChange}\n                          />\n                        </Form.Group>\n                        </Col>\n                        <Col md=\"3\" className=\"px-1\">\n                        <Form.Group controlId=\"city\">\n                          <Form.Control\n                            name=\"city\"\n                            type=\"text\"\n                            placeholder=\"City\"\n                            onChange={this.props.HandleAddressChange}\n                          />\n                        </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        \n                        <Col md=\"3\" className=\"px-1\">\n                        <Form.Group controlId=\"state\">\n                          <Form.Control\n                            name=\"state\"\n                            type=\"text\"\n                            placeholder=\"State\"\n                            onChange={this.props.HandleAddressChange}\n                          />\n                        </Form.Group>\n                        </Col>\n                        <Col md=\"3\" className=\"px-1\">\n                        <Form.Group controlId=\"zipCode\">\n                          <Form.Control\n                            name=\"zipCode\"\n                            type=\"number\"\n                            placeholder=\"ZipCode\"\n                            onChange={this.props.HandleAddressChange}\n                          />\n                        </Form.Group>\n                        \n                      </Col>\n                      <Col md=\"3\" className=\"px-1\">\n                        <Form.Group controlId=\"country\">\n                          <select\n                            name=\"country\"\n                            onChange={this.props.HandleAddressChange}\n                            style={{ \"border-radius\": \"5px\" }}\n                          >\n                            <option value=\"default\">Country</option>\n                            <option value=\"Afganistan\">Afghanistan</option>\n                            <option value=\"Albania\">Albania</option>\n                            <option value=\"Algeria\">Algeria</option>\n                            <option value=\"American Samoa\">\n                              American Samoa\n                            </option>\n                            <option value=\"Andorra\">Andorra</option>\n                            <option value=\"Angola\">Angola</option>\n                            <option value=\"Anguilla\">Anguilla</option>\n                            <option value=\"Antigua & Barbuda\">\n                              Antigua & Barbuda\n                            </option>\n                            <option value=\"Argentina\">Argentina</option>\n                            <option value=\"Armenia\">Armenia</option>\n                            <option value=\"Aruba\">Aruba</option>\n                            <option value=\"Australia\">Australia</option>\n                            <option value=\"Austria\">Austria</option>\n                            <option value=\"Azerbaijan\">Azerbaijan</option>\n                            <option value=\"Bahamas\">Bahamas</option>\n                            <option value=\"Bahrain\">Bahrain</option>\n                            <option value=\"Bangladesh\">Bangladesh</option>\n                            <option value=\"Barbados\">Barbados</option>\n                            <option value=\"Belarus\">Belarus</option>\n                            <option value=\"Belgium\">Belgium</option>\n                            <option value=\"Belize\">Belize</option>\n                            <option value=\"Benin\">Benin</option>\n                            <option value=\"Bermuda\">Bermuda</option>\n                            <option value=\"Bhutan\">Bhutan</option>\n                            <option value=\"Bolivia\">Bolivia</option>\n                            <option value=\"Bonaire\">Bonaire</option>\n                            <option value=\"Bosnia & Herzegovina\">\n                              Bosnia & Herzegovina\n                            </option>\n                            <option value=\"Botswana\">Botswana</option>\n                            <option value=\"Brazil\">Brazil</option>\n                            <option value=\"British Indian Ocean Ter\">\n                              British Indian Ocean Ter\n                            </option>\n                            <option value=\"Brunei\">Brunei</option>\n                            <option value=\"Bulgaria\">Bulgaria</option>\n                            <option value=\"Burkina Faso\">Burkina Faso</option>\n                            <option value=\"Burundi\">Burundi</option>\n                            <option value=\"Cambodia\">Cambodia</option>\n                            <option value=\"Cameroon\">Cameroon</option>\n                            <option value=\"Canada\">Canada</option>\n                            <option value=\"Canary Islands\">\n                              Canary Islands\n                            </option>\n                            <option value=\"Cape Verde\">Cape Verde</option>\n                            <option value=\"Cayman Islands\">\n                              Cayman Islands\n                            </option>\n                            <option value=\"Central African Republic\">\n                              Central African Republic\n                            </option>\n                            <option value=\"Chad\">Chad</option>\n                            <option value=\"Channel Islands\">\n                              Channel Islands\n                            </option>\n                            <option value=\"Chile\">Chile</option>\n                            <option value=\"China\">China</option>\n                            <option value=\"Christmas Island\">\n                              Christmas Island\n                            </option>\n                            <option value=\"Cocos Island\">Cocos Island</option>\n                            <option value=\"Colombia\">Colombia</option>\n                            <option value=\"Comoros\">Comoros</option>\n                            <option value=\"Congo\">Congo</option>\n                            <option value=\"Cook Islands\">Cook Islands</option>\n                            <option value=\"Costa Rica\">Costa Rica</option>\n                            <option value=\"Cote DIvoire\">Cote DIvoire</option>\n                            <option value=\"Croatia\">Croatia</option>\n                            <option value=\"Cuba\">Cuba</option>\n                            <option value=\"Curaco\">Curacao</option>\n                            <option value=\"Cyprus\">Cyprus</option>\n                            <option value=\"Czech Republic\">\n                              Czech Republic\n                            </option>\n                            <option value=\"Denmark\">Denmark</option>\n                            <option value=\"Djibouti\">Djibouti</option>\n                            <option value=\"Dominica\">Dominica</option>\n                            <option value=\"Dominican Republic\">\n                              Dominican Republic\n                            </option>\n                            <option value=\"East Timor\">East Timor</option>\n                            <option value=\"Ecuador\">Ecuador</option>\n                            <option value=\"Egypt\">Egypt</option>\n                            <option value=\"El Salvador\">El Salvador</option>\n                            <option value=\"Equatorial Guinea\">\n                              Equatorial Guinea\n                            </option>\n                            <option value=\"Eritrea\">Eritrea</option>\n                            <option value=\"Estonia\">Estonia</option>\n                            <option value=\"Ethiopia\">Ethiopia</option>\n                            <option value=\"Falkland Islands\">\n                              Falkland Islands\n                            </option>\n                            <option value=\"Faroe Islands\">Faroe Islands</option>\n                            <option value=\"Fiji\">Fiji</option>\n                            <option value=\"Finland\">Finland</option>\n                            <option value=\"France\">France</option>\n                            <option value=\"French Guiana\">French Guiana</option>\n                            <option value=\"French Polynesia\">\n                              French Polynesia\n                            </option>\n                            <option value=\"French Southern Ter\">\n                              French Southern Ter\n                            </option>\n                            <option value=\"Gabon\">Gabon</option>\n                            <option value=\"Gambia\">Gambia</option>\n                            <option value=\"Georgia\">Georgia</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"Ghana\">Ghana</option>\n                            <option value=\"Gibraltar\">Gibraltar</option>\n                            <option value=\"Great Britain\">Great Britain</option>\n                            <option value=\"Greece\">Greece</option>\n                            <option value=\"Greenland\">Greenland</option>\n                            <option value=\"Grenada\">Grenada</option>\n                            <option value=\"Guadeloupe\">Guadeloupe</option>\n                            <option value=\"Guam\">Guam</option>\n                            <option value=\"Guatemala\">Guatemala</option>\n                            <option value=\"Guinea\">Guinea</option>\n                            <option value=\"Guyana\">Guyana</option>\n                            <option value=\"Haiti\">Haiti</option>\n                            <option value=\"Hawaii\">Hawaii</option>\n                            <option value=\"Honduras\">Honduras</option>\n                            <option value=\"Hong Kong\">Hong Kong</option>\n                            <option value=\"Hungary\">Hungary</option>\n                            <option value=\"Iceland\">Iceland</option>\n                            <option value=\"Indonesia\">Indonesia</option>\n                            <option value=\"India\">India</option>\n                            <option value=\"Iran\">Iran</option>\n                            <option value=\"Iraq\">Iraq</option>\n                            <option value=\"Ireland\">Ireland</option>\n                            <option value=\"Isle of Man\">Isle of Man</option>\n                            <option value=\"Israel\">Israel</option>\n                            <option value=\"Italy\">Italy</option>\n                            <option value=\"Jamaica\">Jamaica</option>\n                            <option value=\"Japan\">Japan</option>\n                            <option value=\"Jordan\">Jordan</option>\n                            <option value=\"Kazakhstan\">Kazakhstan</option>\n                            <option value=\"Kenya\">Kenya</option>\n                            <option value=\"Kiribati\">Kiribati</option>\n                            <option value=\"Korea North\">Korea North</option>\n                            <option value=\"Korea Sout\">Korea South</option>\n                            <option value=\"Kuwait\">Kuwait</option>\n                            <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                            <option value=\"Laos\">Laos</option>\n                            <option value=\"Latvia\">Latvia</option>\n                            <option value=\"Lebanon\">Lebanon</option>\n                            <option value=\"Lesotho\">Lesotho</option>\n                            <option value=\"Liberia\">Liberia</option>\n                            <option value=\"Libya\">Libya</option>\n                            <option value=\"Liechtenstein\">Liechtenstein</option>\n                            <option value=\"Lithuania\">Lithuania</option>\n                            <option value=\"Luxembourg\">Luxembourg</option>\n                            <option value=\"Macau\">Macau</option>\n                            <option value=\"Macedonia\">Macedonia</option>\n                            <option value=\"Madagascar\">Madagascar</option>\n                            <option value=\"Malaysia\">Malaysia</option>\n                            <option value=\"Malawi\">Malawi</option>\n                            <option value=\"Maldives\">Maldives</option>\n                            <option value=\"Mali\">Mali</option>\n                            <option value=\"Malta\">Malta</option>\n                            <option value=\"Marshall Islands\">\n                              Marshall Islands\n                            </option>\n                            <option value=\"Martinique\">Martinique</option>\n                            <option value=\"Mauritania\">Mauritania</option>\n                            <option value=\"Mauritius\">Mauritius</option>\n                            <option value=\"Mayotte\">Mayotte</option>\n                            <option value=\"Mexico\">Mexico</option>\n                            <option value=\"Midway Islands\">\n                              Midway Islands\n                            </option>\n                            <option value=\"Moldova\">Moldova</option>\n                            <option value=\"Monaco\">Monaco</option>\n                            <option value=\"Mongolia\">Mongolia</option>\n                            <option value=\"Montserrat\">Montserrat</option>\n                            <option value=\"Morocco\">Morocco</option>\n                            <option value=\"Mozambique\">Mozambique</option>\n                            <option value=\"Myanmar\">Myanmar</option>\n                            <option value=\"Nambia\">Nambia</option>\n                            <option value=\"Nauru\">Nauru</option>\n                            <option value=\"Nepal\">Nepal</option>\n                            <option value=\"Netherland Antilles\">\n                              Netherland Antilles\n                            </option>\n                            <option value=\"Netherlands\">\n                              Netherlands (Holland, Europe)\n                            </option>\n                            <option value=\"Nevis\">Nevis</option>\n                            <option value=\"New Caledonia\">New Caledonia</option>\n                            <option value=\"New Zealand\">New Zealand</option>\n                            <option value=\"Nicaragua\">Nicaragua</option>\n                            <option value=\"Niger\">Niger</option>\n                            <option value=\"Nigeria\">Nigeria</option>\n                            <option value=\"Niue\">Niue</option>\n                            <option value=\"Norfolk Island\">\n                              Norfolk Island\n                            </option>\n                            <option value=\"Norway\">Norway</option>\n                            <option value=\"Oman\">Oman</option>\n                            <option value=\"Pakistan\">Pakistan</option>\n                            <option value=\"Palau Island\">Palau Island</option>\n                            <option value=\"Palestine\">Palestine</option>\n                            <option value=\"Panama\">Panama</option>\n                            <option value=\"Papua New Guinea\">\n                              Papua New Guinea\n                            </option>\n                            <option value=\"Paraguay\">Paraguay</option>\n                            <option value=\"Peru\">Peru</option>\n                            <option value=\"Phillipines\">Philippines</option>\n                            <option value=\"Pitcairn Island\">\n                              Pitcairn Island\n                            </option>\n                            <option value=\"Poland\">Poland</option>\n                            <option value=\"Portugal\">Portugal</option>\n                            <option value=\"Puerto Rico\">Puerto Rico</option>\n                            <option value=\"Qatar\">Qatar</option>\n                            <option value=\"Republic of Montenegro\">\n                              Republic of Montenegro\n                            </option>\n                            <option value=\"Republic of Serbia\">\n                              Republic of Serbia\n                            </option>\n                            <option value=\"Reunion\">Reunion</option>\n                            <option value=\"Romania\">Romania</option>\n                            <option value=\"Russia\">Russia</option>\n                            <option value=\"Rwanda\">Rwanda</option>\n                            <option value=\"St Barthelemy\">St Barthelemy</option>\n                            <option value=\"St Eustatius\">St Eustatius</option>\n                            <option value=\"St Helena\">St Helena</option>\n                            <option value=\"St Kitts-Nevis\">\n                              St Kitts-Nevis\n                            </option>\n                            <option value=\"St Lucia\">St Lucia</option>\n                            <option value=\"St Maarten\">St Maarten</option>\n                            <option value=\"St Pierre & Miquelon\">\n                              St Pierre & Miquelon\n                            </option>\n                            <option value=\"St Vincent & Grenadines\">\n                              St Vincent & Grenadines\n                            </option>\n                            <option value=\"Saipan\">Saipan</option>\n                            <option value=\"Samoa\">Samoa</option>\n                            <option value=\"Samoa American\">\n                              Samoa American\n                            </option>\n                            <option value=\"San Marino\">San Marino</option>\n                            <option value=\"Sao Tome & Principe\">\n                              Sao Tome & Principe\n                            </option>\n                            <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                            <option value=\"Senegal\">Senegal</option>\n                            <option value=\"Seychelles\">Seychelles</option>\n                            <option value=\"Sierra Leone\">Sierra Leone</option>\n                            <option value=\"Singapore\">Singapore</option>\n                            <option value=\"Slovakia\">Slovakia</option>\n                            <option value=\"Slovenia\">Slovenia</option>\n                            <option value=\"Solomon Islands\">\n                              Solomon Islands\n                            </option>\n                            <option value=\"Somalia\">Somalia</option>\n                            <option value=\"South Africa\">South Africa</option>\n                            <option value=\"Spain\">Spain</option>\n                            <option value=\"Sri Lanka\">Sri Lanka</option>\n                            <option value=\"Sudan\">Sudan</option>\n                            <option value=\"Suriname\">Suriname</option>\n                            <option value=\"Swaziland\">Swaziland</option>\n                            <option value=\"Sweden\">Sweden</option>\n                            <option value=\"Switzerland\">Switzerland</option>\n                            <option value=\"Syria\">Syria</option>\n                            <option value=\"Tahiti\">Tahiti</option>\n                            <option value=\"Taiwan\">Taiwan</option>\n                            <option value=\"Tajikistan\">Tajikistan</option>\n                            <option value=\"Tanzania\">Tanzania</option>\n                            <option value=\"Thailand\">Thailand</option>\n                            <option value=\"Togo\">Togo</option>\n                            <option value=\"Tokelau\">Tokelau</option>\n                            <option value=\"Tonga\">Tonga</option>\n                            <option value=\"Trinidad & Tobago\">\n                              Trinidad & Tobago\n                            </option>\n                            <option value=\"Tunisia\">Tunisia</option>\n                            <option value=\"Turkey\">Turkey</option>\n                            <option value=\"Turkmenistan\">Turkmenistan</option>\n                            <option value=\"Turks & Caicos Is\">\n                              Turks & Caicos Is\n                            </option>\n                            <option value=\"Tuvalu\">Tuvalu</option>\n                            <option value=\"Uganda\">Uganda</option>\n                            <option value=\"United Kingdom\">\n                              United Kingdom\n                            </option>\n                            <option value=\"Ukraine\">Ukraine</option>\n                            <option value=\"United Arab Erimates\">\n                              United Arab Emirates\n                            </option>\n                            <option value=\"United States of America\">\n                              United States of America\n                            </option>\n                            <option value=\"Uraguay\">Uruguay</option>\n                            <option value=\"Uzbekistan\">Uzbekistan</option>\n                            <option value=\"Vanuatu\">Vanuatu</option>\n                            <option value=\"Vatican City State\">\n                              Vatican City State\n                            </option>\n                            <option value=\"Venezuela\">Venezuela</option>\n                            <option value=\"Vietnam\">Vietnam</option>\n                            <option value=\"Virgin Islands (Brit)\">\n                              Virgin Islands (Brit)\n                            </option>\n                            <option value=\"Virgin Islands (USA)\">\n                              Virgin Islands (USA)\n                            </option>\n                            <option value=\"Wake Island\">Wake Island</option>\n                            <option value=\"Wallis & Futana Is\">\n                              Wallis & Futana Is\n                            </option>\n                            <option value=\"Yemen\">Yemen</option>\n                            <option value=\"Zaire\">Zaire</option>\n                            <option value=\"Zambia\">Zambia</option>\n                            <option value=\"Zimbabwe\">Zimbabwe</option>\n                          </select>\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                  \n      </Form>\n  }\n}\n\nexport default AddressForm","import React from 'react'\nimport { Table , Button, Modal , Card, notification, Space, Popconfirm, Spin } from 'antd'\nimport { useSelector , connect} from 'react-redux'\nimport AddressForm from './AddressForm/Form'\nimport ExpenseForm from '../../Activities/Form/expenseForm'\nimport TimeForm from '../../Activities/Form/timeForm'\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { Form, Col,Row } from 'react-bootstrap'\nimport api from '../../../../resources/api'\nimport Timer from '../../../components/Timer/index.js'\nimport ReactDOM from 'react-dom'\n\n\nlet matters = {}\nlet thisMatter = {}\nlet activity = {}\nlet timeError = \"\"\nlet option = null\nclass Activity extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            expenseModal : false,\n            timeModal : false,\n            data : { \n                billable : false,\n                qty : \"1.0\",\n                date : \"\",\n                rate : \"\",\n                invoice : \"Unbilled\",\n\n            },\n            loading : true,\n            to : {\n              type : \"Work\"\n            },\n            issueDate : new Date(),\n            dueDate : \"\",\n            timeData : [],\n            expenseData : [],\n            editTime: false,\n            EditExpense : false,\n            completeData : [],\n            tableData : [],\n            editmode : false,\n            record : \"\",\n            name : \"\",\n            address : {\n              city : \"\",\n              state : \"\",\n              zipCode : \"\",\n              street: \"\"\n            },\n            Matter : \"\",\n            LName : \"\",\n            invoiceId : \"\"\n\n        }\n    }\n    setTimer = () => {\n      console.log(\"funtion called\")\n      const time = window.localStorage.getItem('timer');\n      let hours = Math.floor(time / 3600);\n      let minutes = Math.floor(time / 60);\n      let seconds = time % 60\n     \n      if (minutes >= 59) {\n        minutes = minutes % 60;\n      }\n      if (seconds < 10) {\n        seconds = \"0\"+seconds\n      }\n  \n      //   const Seconds = time % 60;\n      const data = this.state.data;\n      data.time = hours + ':' + minutes + ':' + seconds\n      this.setState({ data: data });\n      console.log(this.state.data)\n  }\n    convertTime=(serverdate)=>{\n      var date = new Date(serverdate);\n      // convert to utc time\n      var toutc = date.toUTCString();\n      //convert to local time\n      var locdat = new Date(toutc + \" UTC\");\n      return locdat;\n    }\n    componentDidMount(){\n      this.setTimer()\n      api.get('/matter/viewforuser/' + this.props.userId).then((res) => {\n        matters = res;\n        option = res.data.data.map((val, index)=>{\n          return <option>{val.matterDescription}</option>\n      })\n      }).then(()=>{\n        this.setState({option : option})\n      })\n      api.get('/billing/bill/viewforuser/'+this.props.userId).then((res)=>{\n        console.log()\n        this.setState({invoiceId : res.data.data.length + 1})\n      })\n      api.get('/activity/viewformatter/'+this.props.userId+'/'+ this.props.location.state).then((res)=>{\n        console.log(this.props.userId)\n        activity = res.data.data\n        \n        api.get('/matter/view/' + this.props.location.state).then((res) => {\n          thisMatter = res\n          const name = res.data.data.client.firstName + \" \" + res.data.data.client.lastName\n          const address = res.data.data.client.address[0] ? res.data.data.client.address[0] : \"\"\n          const matter = res.data.data.matterDescription\n          this.setState({name  : name , address : address, matter : matter})\n          \n        });\n      \n     \n        let timedata = []\n        let expenseData = []\n  \n        let total = 0;\n        res.data.data.map((val, index)=>{\n     \n            let rate = val.rate\n            if(rate.includes(\"$\")){\n              rate = rate.substring(0, rate.length - 1)\n              \n            }\n            rate = parseFloat(rate)\n           if(val.type === \"time\" && val.time !=undefined ){\n           \n            const sHours = parseInt(val.time.split(':')[0]);\n            const sMinutes = parseInt(val.time.split(':')[1]);\n            const sSecs =  parseInt(val.time.split(':')[2]);\n            console.log((rate/60)*sMinutes)\n            console.log(sSecs + ((rate/3600)*sMinutes))\n            console.log((rate/60)*sMinutes + rate * sHours )\n          \n\n            const time = {\n                id : val._id,\n                time : val.time ? val.time : \"\",\n                matter : val.matter ? val.matter : \"-\",\n                description : val.description? val.description : \"-\",\n                rate : rate, \n                billable : val.billable ? \"Yes\" : \"No\" ,\n                date : val.date.substring(0,10),\n                invoiceStatus : val.invoiceStatus?  val.invoiceStatus : \"-\" ,\n                subTotal : ((rate * sHours) + ((rate/60)*sMinutes) + ((rate/3600)*sSecs)).toFixed(2)\n           }\n           total = parseFloat(total + rate * sHours + ((rate/60)*sMinutes) + ((rate/3600)*sSecs))\n           timedata.push(time)\n        }\n           \n            if(val.type ===\"expense\"){\n                const expense = {\n                    id : val._id,\n                    qty : val.qty,\n                    matter : val.matter ? val.matter : \"-\",\n                    description : val.description? val.description : \"-\",\n                    rate : val.rate, \n                    billable : val.billable ? \"Yes\" : \"No\" ,\n                    date : val.date.substring(0,10),\n                    invoiceStatus : val.invoiceStatus?  val.invoiceStatus : \"-\" ,\n                    subTotal : (rate * val.qty).toFixed(2)\n                  }\n              total = total + rate * val.qty\n              expenseData.push(expense)\n            }\n \n\n        })\n        const localData = JSON.parse(window.localStorage.getItem(\"Case.user\"))\n        const Lname = localData.token.user.firstName + \" \" +localData.token.user.firstName\n        this.setState({ \n          expenseData : expenseData ,\n           timeData : timedata,\n            total : total , \n            loading : false,\n            LName : Lname })\n      })\n      \n    }\n    showModal = (type) => {\n        if(type===\"time\"){\n            this.setState({\n                timeModal : true,\n              });\n        }else\n        if(type===\"expense\"){\n            this.setState({\n                expenseModal : true,\n              });\n        }\n      \n      };\n    \n      handleOk = type => {\n   \n        notification.destroy()\n        if(timeError !== \"\"){\n          notification.error({message : \"Invalid time,  Please enter time in the format : HH:MM:SS\"})\n        }else\n        if(this.state.data.date === \"\"){\n            notification.error({message : \"Please select a Date\"})\n        }else if(this.state.data.rate === \"\"){\n            notification.error({message : \"Please provide rate\"})\n        }else\n        {\n         \n            if(type===\"time\"){\n              let data = this.state.data\n              data.type = \"time\"\n              data.userId = this.props.userId\n              api.post('/activity/create', data).then((res)=>{\n                this.componentDidMount()\n                notification.success({message : \"Time entry Added !\"})\n              }).catch((err)=>{\n                this.componentDidMount()\n                notification.error({message : \"Failed\"})\n              }).then(()=>{\n                ReactDOM.findDOMNode(this.messageForm).reset()\n                \n                this.setState({\n                  timeModal : false,\n                  editmode : false,\n                  data :  { \n                    billable : true,\n                    nonBillable : false,\n                    date : \"\",\n                    qty : \"1.0\",\n                    rate : \"\",\n                    invoice : \"Unbilled\",\n                },\n                });\n                setTimeout(()=>{\n                   // window.location.reload()\n                },1500)\n              })\n            }else\n            if(type===\"expense\"){\n                let data = this.state.data\n                data.type = \"expense\"\n                data.userId = this.props.userId\n                api.post('/activity/create', data).then((res)=>{\n                  this.componentDidMount()\n                  notification.success({message : \"Expense Added !\"})\n                }).catch((err)=>{\n   \n                  notification.error({message : \"Failed\"})\n                }).then(()=>{\n                  ReactDOM.findDOMNode(this.messageForm).reset()\n                 \n                  this.setState({\n                    \n                    expenseModal : false,\n                    editmode : false,\n                    data :  { \n                      billable : true,\n                      nonBillable : false,\n                      date : \"\",\n                      qty : \"1.0\",\n                      rate : \"\",\n                      invoice : \"Unbilled\",\n                  },\n               \n                  });\n                  setTimeout(()=>{\n                    //  window.location.reload()\n                  },1500)\n                })\n            \n          }\n   \n\n        }\n             \n        \n      \n      };\n    \n      handleCancel = type => {\n        \n        if(type===\"time\"){\n            this.setState({\n                timeModal : false,\n                editmode : false,\n                data :  { \n                  billable : true,\n                  nonBillable : false,\n                  date : \"\",\n                  qty : \"1.0\",\n                  rate : \"\",\n                  invoice : \"Unbilled\",\n              },\n              });\n            \n        }else\n        if(type===\"expense\"){\n            this.setState({\n                expenseModal : false,\n                editmode : false,\n                data :  { \n                  billable : true,\n                  nonBillable : false,\n                  date : \"\",\n                  qty : \"1.0\",\n                  rate : \"\",\n                  invoice : \"Unbilled\",\n              },\n  \n              });\n     \n             \n        }\n        this.setTimer()\n      \n      };\n\n    render(){\n       \n        \n          const handleDelete = record => {\n            api.get('/activity/delete/'+record.id).then((res)=>{\n              this.componentDidMount()\n              notification.success({message : \"Activity Deleted !\"})\n              setTimeout(()=>{\n                \n               // window.location.reload()\n              },1500)\n            }).catch((err)=>{\n  \n              notification.error({message : \"Failed to delete\"})\n            })\n            \n          }\n\n          const columnsForTime = [\n            {\n                title: 'Date',\n                dataIndex: 'date',\n                key: 'date',\n              },\n            {\n              title: 'Duration',\n              dataIndex: 'time',\n              key: 'time',\n            },\n            {\n              title: 'Description',\n              dataIndex: 'description',\n              key: 'description',\n            },\n            {\n              title: 'Rate',\n              dataIndex: 'rate',\n              key: 'rate',\n            },\n            {\n                title: 'Sub total',\n                dataIndex: 'subTotal',\n                key: 'subTotal',\n              },\n            \n            \n             \n              \n              {\n                  title:'Delete',\n                  dataIndex: \"delete\",\n                  key: \"_id\",\n                  render:(_,record)=>{\n                      return (\n                        <Popconfirm\n                          title=\"Are you sure delete this Acitivity?\"\n                          onConfirm={()=>handleDelete(record)}\n                          okText=\"Yes\"\n                          cancelText=\"No\"\n                        >\n                          <Button danger>\n                              Delete\n                          </Button>\n                        </Popconfirm>\n                          \n                      )\n                  }\n              },\n          ]\n          const columnsForExpense = [\n            {\n                title: 'Date',\n                dataIndex: 'date',\n                key: 'date',\n              },\n            \n            {\n              title: 'Qty',\n              dataIndex: 'qty',\n              key: 'qty',\n            },\n            {\n              title: 'Description',\n              dataIndex: 'description',\n              key: 'description',\n            },\n            {\n              title: 'Rate',\n              dataIndex: 'rate',\n              key: 'rate',\n            },\n            {\n                title: 'Sub total',\n                dataIndex: 'subTotal',\n                key: 'subTotal',\n              },\n           \n             \n              \n              {\n                  title:'Delete',\n                  dataIndex: \"delete\",\n                  key: \"_id\",\n                  render:(_,record)=>{\n                      return (\n                        <Popconfirm\n                          title=\"Are you sure delete this Activity?\"\n                          onConfirm={()=>handleDelete(record)}\n                          okText=\"Yes\"\n                          cancelText=\"No\"\n                        >\n                          <Button danger>\n                              Delete\n                          </Button>\n                        </Popconfirm>\n                          \n                      )\n                  }\n              },\n          ];;\n          const exportPDF = () => {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"portrait\"; // portrait or landscape\n        \n            const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n        \n            doc.setFontSize(15);\n        \n            const title = \"Activity\";\n            const headers = [[\"type\",\"Qty\",\"Description\",\"Billable\", \"Rate\", \"Date\", \"Invoice Status\"]];\n           \n            let data = []\n            \n            this.state.tableData.map((val, index)=>{\n              const td= [val.type , val.qty, val.description , val.billable, val.rate, val.date, val.invoiceStatus]\n              data.push(td)\n            })\n          \n        \n            let content = {\n              startY: 50,\n              head: headers,\n              body: data\n            };\n        \n            doc.text(title, marginLeft, 40);\n            doc.autoTable(content);\n            doc.save(\"Activity.pdf\")\n          }\n   \n     \n        const handleChange=(e)=>{\n            e.persist()\n            const { name, id, value , selectedIndex} = e.target\n            let newData = this.state.data\n            if(name===\"matter\"){\n              if(selectedIndex >= 1){\n                newData[name] = matters.data.data[selectedIndex-1]\n              }else{\n                newData[name] = \"\"\n              }\n              \n            } else if (name === 'time') {\n              timeError = '';\n              var timeValue = value;\n              if (timeValue == '' || timeValue.indexOf(':') < 0) {\n                timeError = 'Inavlid Time';\n                console.log(timeError);\n              } else {\n                var sHours = timeValue.split(':')[0];\n                var sMinutes = timeValue.split(':')[1];\n                var sSecs = timeValue.split(':')[2];\n                console.log(sSecs)\n                if (sHours == '' || isNaN(sHours) /*|| parseInt(sHours)>23 */) {\n                  timeError = 'Inavlid Time';\n                  console.log(timeError);\n                } else if (parseInt(sHours) == 0) sHours = '00';\n               // else if (parseInt(sHours) < 10) {\n      //            sHours = '0' + sHours};\n      \n                if (sMinutes == '' || isNaN(sMinutes) || parseInt(sMinutes) > 59) {\n                  timeError = 'Inavlid Time';\n                  console.log(timeError);\n                } else if (parseInt(sMinutes) == 0) sMinutes = '00';\n               // else if (parseInt(sMinutes) < 10) sMinutes = '0' + sMinutes;\n      \n                if (sSecs == '' || isNaN(sSecs) /*|| parseInt(sHours)>23 */) {\n                  timeError = 'Inavlid Time';\n                  console.log(timeError);\n                } else if (parseInt(sSecs) == 0) sSecs = '00';\n               // else if (sSecs < 10) sSecs = '0' + sSecs;\n                timeValue = sHours + ':' + sMinutes +':' + sSecs;\n              }\n              newData[name] = timeValue;\n              this.setState({ data: newData });\n            }\n           else{\n                newData[name] = value\n                this.setState({data : newData })   \n            }\n\n      \n        }\n        const invoiceProps = {\n          invoiceData : { id: this.state.invoiceId, status: 'Unpaid', date: new Date().getDate() +\"/\"+ new Date().getMonth()+1 + \"/\" +  new Date().getFullYear()  , dueDate : this.state.dueDate},\n          companyData: {\n            logo: 'https://uilogos.co/img/logotype/hexa.png',\n            name: 'ABC Company',\n            address: '4354  Settlers Lane, New York',\n            phone: '917-821-3450',\n            email: 'w9lk6p927j@temporary-mail.net',\n          },\n          clientData : {\n            name: this.state.name,\n            address: this.state.to,\n          },\n          matter : this.state.matter,\n          timeData: this.state.timeData,\n          expenseData : this.state.expenseData,\n          Total : this.state.total\n        }\n        const HandleAddressChange = (e) => {\n        \n          e.persist();\n          const { id, value, name } = e.target;\n    \n          let newState = this.state;\n          newState.to[name] = value;\n          this.setState(newState);\n\n      \n        }\n        const handleDateChange = (e) => {\n          e.persist();\n          const { id, value, name } = e.target;\n    \n          let newState = this.state;\n          newState[name] = this.convertTime(value);\n          this.setState(newState);\n        }\n        const handleBill = (e) =>{\n            notification.destroy() \n            //\n\n            const data = {\n              userId : this.props.userId,\n              status : \"draft\",\n              invoiceId: this.state.invoiceId,\n              client : thisMatter.data.data.client._id,\n              matter : thisMatter.data.data._id,\n              issueDate : this.state.issueDate,\n              dueDate : this.state.dueDate,\n              balance : this.state.total ? this.state.total.toFixed(2) : \"0\",\n              from : thisMatter.data.data.client ,\n              to : this.state.to         \n            }\n            console.log(data)\n            \n            if(this.state.dueDate == \"\"){\n              notification.error({message : \"Please select a due date\"})\n            }else{\n              api.post('/billing/bill/create', data).then((res=>{\n                console.log(res)\n                notification.success({message : \"success\"})\n                this.props.history.push('/view/matter/invoice', invoiceProps)\n              })).catch((err)=>{\n                notification.error({message : \"Failure\"})\n              })\n            }\n            \n  \n        }\n        const today = new Date()\n        const issueDate = today.getDate() + \"/\" + today.getMonth() + \"/\" + today.getFullYear()\n        \n        return <Spin spinning={this.state.loading} size = \"large\">\n         <div className='p-2 '>\n            \n            <Card title=\"New Quick Bill\" className=\"overflow-auto mb-3\">\n              <div>\n                  <div>\n                    <p><b>FROM</b></p>\n                    <p style={{fontWeight : '600'}}>{this.state.LName}</p>\n                 </div>\n                 <div className=\"mt-3\">\n                    <p><b>TO</b></p>\n                    <p style={{fontWeight : '600'}}>{this.state.name}</p><br/>\n                    <AddressForm HandleAddressChange={HandleAddressChange} type=\"To\"></AddressForm>            \n                 </div>\n                 <div className=\"mt-3\">\n                    <p><b>MATTER</b></p>\n                    \n                    {/*\n                    <Form className=\"quickBill\">\n                      <Form.Row>\n                        <Col md=\"5\">\n                        <Form.Control  type=\"text\" placeholder=\"Small text\" value={} />\n                        </Col>\n                      </Form.Row>\n                    </Form>\n                    */}\n                    <p style={{fontWeight : '600'}}>{this.state.matter}</p><br/>\n                 </div>\n              </div>\n            </Card>\n            \n            <Card bodyStyle={{\"padding\": \"0px\"}} className=\"overflow-auto  mb-3\" title=\"Time Entries\"> \n              <Table className=\"table-responsive\" columns={columnsForTime} dataSource={this.state.timeData}  />\n            </Card>\n            <div className=\"form-add mb-4\">\n                <span onClick={() => this.setState({ timeModal: true })}>\n                  Add Time Entry\n                </span>\n              </div>\n\n            <Card bodyStyle={{\"padding\": \"0px\"}} className=\"overflow-auto\" title=\"Expense Entries\">                \n              <Table className=\"table-responsive\" columns={columnsForExpense} dataSource={this.state.expenseData}  />\n             </Card><br></br>\n             <div className=\"form-add mb-4\">\n                <span onClick={() => this.setState({ expenseModal: true })}>\n                  Add Expense Entry\n                </span>\n              </div>\n\n            <Card className=\"mb-3\" >\n                  <Row>\n                    <Col sm className=\"col-md-3\"><h4><b>Bill Total : </b></h4></Col>\n                    <Col sm><h4><b>{this.state.total ? this.state.total.toFixed(2) : \"0\"}</b></h4></Col>\n                  </Row>\n            </Card>\n            <Card>\n              <div>\n                 <h4>Bill Options</h4>\n                 <Form>\n                    <Row>\n                      {/*\n                          <Col md=\"4\">\n                          <Form.Group controlId=\"issueDate\">\n                              <Form.Label>Issue Date</Form.Label>\n                              <Form.Control \n                              required\n                              type=\"date\" \n                              name=\"issueDate\" \n                              defaultValue = {issueDate} \n                              onChange={handleDateChange}/>\n                          </Form.Group>\n                      </Col>\n*/\n                      }\n                      \n                    </Row>\n                    <Row>\n                      <Col md=\"4\">\n                          <Form.Group controlId=\"dueDate\">\n                              <Form.Label>Due Date</Form.Label>\n                              <Form.Control \n                              required\n                              type=\"date\" \n                              name=\"dueDate\" \n                              placeholder = \"Select a date\" \n                              onChange={handleDateChange}/>\n                          </Form.Group>\n                      </Col>\n\n                    </Row>\n                 </Form>\n              </div>\n            </Card>\n            <div className=\"mt-2\">\n              <Button onClick={handleBill} type=\"primary\" className=\"mr-2\">Generate Bill</Button>\n              <span>or</span>\n              <Button onClick={()=>{this.props.history.goBack()}} className=\"ml-2\">Cancel</Button>\n            </div>\n            <Modal\n          title=\"New Time Entry\"\n          visible={this.state.timeModal}\n          onOk={() => this.handleOk('time')}\n          onCancel={() => this.handleCancel('time')}\n          afterClose={() => this.handleCancel('time')}\n          footer={[\n            <Button  onClick={() => this.handleCancel('time')}>\n              Cancel\n            </Button>,\n            <Button type=\"primary\" \n            disabled = {this.state.disabletime} \n            onClick={() => this.handleOk('time')}>\n              Add Entry\n            </Button>,\n          ]}\n        >\n              <Form \n              id='myForm'\n              className=\"form\"\n              ref={ form => this.messageForm = form } >\n                <Row>\n                    <Col sm>\n                        <Form.Group controlId=\"duration\">\n                            <Form.Label>Duration</Form.Label>\n                              <Form.Control \n                                type=\"text\" \n                                name=\"time\" \n                                placeholder=\"hh:mm:ss\" \n                                defaultValue = {this.state.data.time}\n                                onChange={handleChange}/>\n                        </Form.Group>\n                    </Col>\n                    <Col className =\"col-sm\" style={{\"margin\": \"auto\"}}>\n                        <Timer setTimer = {this.setTimer} ></Timer>\n                    </Col>\n                </Row>\n                \n                <Row className=\"mt-2\">\n                    <Col sm>\n                    <Form.Group controlId=\"matter\">\n                        <Form.Label>Matter</Form.Label>\n                        <Form.Control \n                            as=\"select\"\n                            name=\"matter\" \n                            placeholder=\"Matter\"\n                            onChange={handleChange}>\n                        <option>Select a matter</option>\n                        {this.state.option}\n                        </Form.Control>\n                    </Form.Group>\n                    </Col>\n                    <Col sm>\n                    <Form.Group controlId=\"rate\">\n                        <Form.Label>Rate</Form.Label>\n                        <Form.Control \n                        required\n                        type=\"number\" \n                        name=\"rate\" \n                        placeholder=\"0.0 /h\"\n                        onChange={handleChange} />\n                    </Form.Group>\n                    </Col>\n\n                </Row>\n              \n                    \n                <Row>\n                    <Col sm>\n                    <Form.Group controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control \n                        name=\"description\" \n                        as=\"textarea\" \n                        rows=\"3\"\n                        placeholder=\"Description\"\n                        onChange={handleChange} />\n                    </Form.Group>\n                    </Col>\n                </Row>\n              \n                <Row>\n                    <Col sm>\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control \n                        required\n                        type=\"date\" \n                        name=\"date\" \n                        placeholder=\"Date\" \n                        onChange={handleChange}/>\n                    </Form.Group>\n                    </Col>\n                    \n                </Row>\n                    \n                    <Row>\n                        <Col sm>\n                        <Form.Check \n                      type=\"checkbox\"\n                      id=\"billable\"\n                      name=\"billable\"\n                      label=\"Billable\"\n                    \n                      onChange={handleChange}\n                  /><br></br>\n                        </Col>\n                    </Row>\n            \n                  \n            </Form>\n\n          </Modal>\n          <Modal\n              title=\"New Expense\"\n              visible={this.state.expenseModal}\n              onOk={() => this.handleOk('expense')}\n              onCancel={() => this.handleCancel('expense')}\n              afterClose={() => this.handleCancel('expense')}\n              footer={[\n                <Button  onClick={() => this.handleCancel('expense')}>\n                  Cancel\n                </Button>,\n                <Button type=\"primary\" disabled = {this.state.disableExpense} onClick={() => this.handleOk('expense')}>\n                  Add Entry\n                </Button>\n              ]}\n            >\n                <Form \n                  id='myForm'\n                  className=\"form\"\n                  ref={ form => this.messageForm = form } >\n                    <Row>\n                        <Col sm>\n                            <Form.Group controlId=\"quantity\">\n                                <Form.Label>Quantity</Form.Label>\n                                <Form.Control \n                                type=\"number\" \n                                name=\"qty\" \n                                placeholder=\"1.0\"\n                                onChange={handleChange}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm>\n                            <Form.Group controlId=\"matter\">\n                                <Form.Label>Matter</Form.Label>\n                                <Form.Control \n                                    as=\"select\"\n                                    name=\"matter\" \n                                    placeholder=\"Matter\"\n                                    onChange={handleChange}>\n                                <option>Select a matter</option>\n                                {this.state.option}\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm>\n                            <Form.Group controlId=\"Description\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control \n                                name=\"description\" \n                                as=\"textarea\" \n                                rows=\"3\"\n                                placeholder=\"Description\"\n                                onChange={handleChange} />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                        <Col sm>\n                            <Form.Group controlId=\"rate\">\n                                <Form.Label>Rate</Form.Label>\n                                <Form.Control \n                                required\n                                type=\"number\" \n                                name=\"rate\" \n                                placeholder=\"0.0 /h\"\n                                onChange={handleChange} />\n                            </Form.Group>\n                        </Col>\n                        <Col sm>\n                            <Form.Group controlId=\"date\">\n                                <Form.Label>Date</Form.Label>\n                                <Form.Control \n                                required\n                                type=\"date\" \n                                name=\"date\" \n                                placeholder=\"Date\" \n                                onChange={handleChange}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    \n                        {\n                            /*\n                                <Form.Group controlId=\"invoiceStatus\">\n                        <Form.Label>Invoice Status</Form.Label>\n                        <Form.Control \n                            as=\"select\"\n                            name=\"invoiceStatus\"\n                            onChange={handleChange} >\n                        <option>Unbilled</option>\n                        <option>Billed</option>\n                        </Form.Control>\n                    </Form.Group>\n                            */\n                        }\n                    <Form.Check \n                          type=\"checkbox\"\n                          id=\"billable\"\n                          name=\"billable\"\n                          label=\"Billable\"\n                          onChange={handleChange}\n                      /><br></br>\n                \n                        {\n                            /*\n                            <Form.Check \n                          type=\"checkbox\"\n                          id=\"nonBillable\"\n                          name=\"nonBillable\"\n                          label=\"Non-billable\"\n                          defaultChecked = {!this.props.record.billable}\n                          onChange={handleChange}\n                      />\n                            */\n                        }\n              </Form>\n            </Modal>\n        </div>\n        </Spin>\n        }\n}\n\nconst mapStateToProps = state => ({\n  userId: state.user.token.user._id\n});\n\nexport default connect(mapStateToProps)(Activity)"],"sourceRoot":""}