{"version":3,"sources":["App/components/AddEditContact/DynamicFeilds/index.js","App/components/AddEditContact/AddCompany/EditCompany.js"],"names":["DynamicFeilds","React","Component","onClick","e","this","props","delete","render","inputList","map","val","idx","editMode","key","Row","sm","Group","controlId","Label","Control","as","name","defaultValue","record","type","onChange","change","value","text","className","id","style","height","error","placeholder","validEmailRegex","RegExp","validNameRegex","Name","Title","contacts","errors","Type","Email","phone","Website","Address","Street","City","Country","state","ZipCode","editCompany","constructor","super","openNotificationWithIcon","notification","message","openNotificationWithfailure","handleSubmit","event","preventDefault","destroy","valid","Object","values","forEach","length","console","log","validateForm","warning","data","userId","valid2","employees","api","post","location","_id","then","undefined","history","goBack","window","localStorage","setItem","catch","err","address","emailAddress","website","editData","optionsss","billingPaymentProfile","componentDidMount","user","JSON","parse","getItem","token","setState","firstName","lastName","get","res","index","handleChange","persist","st","target","FirstName","test","HandleAddressChange","newState","handleMultipleChange","list","tagName","addFeild","push","emailType","phoneType","websiteType","imageHandler","action","headers","authorization","info","file","status","fileList","success","handleDelete","splice","onSubmit","required","color","street","city","zipCode","country","md","connect"],"mappings":"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","file":"static/js/46.5237810c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nclass DynamicFeilds extends React.Component {\n  onClick = (e) => {\n    this.props.delete(e);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.inputList.map((val, idx) => {\n          let inputId = `input-${idx}`;\n          const jsx = this.props.editMode ? (\n            <div key={idx}>\n              <Form.Row>\n                <Col sm>\n                  <Form.Group controlId={idx}>\n                    <Form.Label>Type</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name={this.props.name}\n                      defaultValue={this.props.record ?  this.props.record[idx][this.props.type] :\"\"}\n                      onChange={this.props.change}\n                    >\n                      <option value=\"work\">Work</option>\n                      <option value=\"home\">Home</option>\n                      <option value=\"other\">Other</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId={idx}>\n                    <Form.Label>{this.props.text}</Form.Label>\n                    <Form.Control\n                      name={this.props.name}\n                      type={this.props.type}\n                      className={this.props.type}\n                      defaultValue={this.props.record ? this.props.record[idx][this.props.name] :\"\"}\n                      onChange={this.props.change}\n                    />\n                  </Form.Group>\n                </Col>\n                <Button\n                  id={idx}\n                  style={{ height: '45px', 'margin-top': '25px' }}\n                  name={this.props.name}\n                  onClick={this.onClick}\n                >\n                  -\n                </Button>\n              </Form.Row>\n\n              <p className=\"help-block text-danger\">{this.props.error[idx]}</p>\n            </div>\n          ) : (\n            <div key={idx}>\n              <Form.Row>\n                <Col sm>\n                  <Form.Group controlId={idx}>\n                    <Form.Label>Type</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name={this.props.name}\n                      onChange={this.props.change}\n                    >\n                      <option value=\"work\">Work</option>\n                      <option value=\"home\">Home</option>\n                      <option value=\"other\">Other</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId={idx}>\n                    <Form.Label>{this.props.text}</Form.Label>\n                    <Form.Control\n                      name={this.props.name}\n                      type={this.props.type}\n                      className={this.props.type}\n                      placeholder={this.props.text}\n                      onChange={this.props.change}\n                    />\n                  </Form.Group>\n                </Col>\n                <Button\n                  id={idx}\n                  style={{ height: '45px', 'margin-top': '25px' }}\n                  name={this.props.name}\n                  onClick={this.onClick}\n                >\n                  -\n                </Button>\n              </Form.Row>\n\n              <p className=\"help-block text-danger\">{this.props.error[idx]}</p>\n            </div>\n          );\n          return jsx;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default DynamicFeilds;\n","import React from 'react';\nimport { Form, Row, Button, Col } from 'react-bootstrap';\nimport { Upload, message, Modal, notification, Space } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport DynamicFeilds from '../DynamicFeilds/index';\nimport api from '../../../../resources/api';\nimport { connect } from 'react-redux';\n\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nconst validNameRegex = RegExp(\n  /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n);\n\nconst validZipRegex = RegExp(/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/);\nconst validUrlRegex = RegExp(\n  /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\n);\nconst validPrefixRegex = RegExp(/^(Miss|Mr|Mrs|Ms|Dr|Gov|Prof)\\b/gm);\n\nlet editMode = true;\nlet res = '';\nlet error = {\n  Name: '',\n  Title: '',\n};\nlet contacts = [];\nlet errors = {\n  Type: [''],\n  Email: [''],\n  phone: [''],\n  Website: [''],\n  Address: [''],\n  Street: [''],\n  City: [''],\n  Country: [''],\n  state: [''],\n  ZipCode: [''],\n};\n\nclass editCompany extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: [],\n      emailAddress: [],\n      phone: [],\n      website: [],\n      editData: '',\n      employees: [],\n      optionsss : null,\n      billingPaymentProfile : \"default\"\n    };\n  }\n  \n  componentDidMount() {\n    let user = JSON.parse(window.localStorage.getItem('Case.user'))\n    user = user.token.user\n    console.log(user)\n    this.setState({\n      user : user.firstName + \" \" + user.lastName\n    })\n    api.get(\n      '/company/view/' + this.props.location.state._id\n    ).then((editData)=>{\n      console.log(editData)\n      this.setState({ editData: editData.data.data });\n      this.setState({\n        phone: editData.data.data.phone,\n        emailAddress: editData.data.data.emailAddress,\n        address: editData.data.data.address,\n        website: editData.data.data.website,\n        employees : editData.data.data.employees\n      });\n\n    })\n    let optionsss = null\n    api.get('contact/viewforuser/'+this.props.userId).then((res)=>{\n      console.log(res.data.data)\n      contacts = res.data.data\n      optionsss = res.data.data.map((value, index)=>{\n        return <option value={value._id}>{value.firstName + \" \" + value.lastName}</option>\n      })\n      this.setState({optionsss : optionsss})\n    }).catch((err)=>{\n      console.log(err)\n    })\n    /*\n    if(this.props.location.pathname == \"/manage/contacts/edit/person\"){\n      editMode = true\n      res=this.props.location.state\n\n    }*/\n  }\n  openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: 'Company Saved',\n    });\n  };\n  openNotificationWithfailure = (type) => {\n    notification[type]({\n      message: 'Failure',\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    notification.destroy();\n    const validateForm = () => {\n      let valid = true;\n      Object.values(error).forEach((val) => val.length > 0 && (valid = false));\n      Object.values(errors.Email).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.phone).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.state).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.Street).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.City).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      Object.values(errors.ZipCode).forEach(\n        (val) => val.length > 0 && (valid = false)\n      );\n      console.log(valid);\n      return valid;\n    };\n    if (validateForm()) {\n      console.log('all good');\n      const data = this.state;\n      data.userId = this.props.userId;\n      console.log(data);\n      let valid2 = true\n      Object.values(this.state.employees).forEach(\n        (val) => { if(val == \"\"){\n          valid2 = false\n          notification.warning({message : \"Please select a employee\"})\n        }\n        }\n      );\n      if(valid2){\n        if (editMode) {\n          api\n          .post('/company/edit/' + this.props.location.state._id, data)\n          .then(() => {\n            this.openNotificationWithIcon('success')\n            if (this.props.location != undefined) {\n              this.props.history.goBack();\n            }\n              window.localStorage.setItem('company', \"true\")\n          })\n          .catch((err) => this.openNotificationWithfailure('error'));\n         \n        } else {\n          api\n            .post('company/create', data)\n            .then(() => {\n              this.openNotificationWithIcon('success')\n              if (this.props.location != undefined) {\n                this.props.history.goBack();\n              }\n              window.localStorage.setItem('company', \"true\")\n            })\n            .catch((err) => this.openNotificationWithfailure('error'));\n          }\n      }\n      \n    } else {\n      return notification.warning({\n        message: 'Please enter valid details',\n      });\n    }\n  };\n\n  render() {\n    let address = null;\n    const handleChange = (e) => {\n      e.persist();\n      this.setState((st) => ({ ...st, [e.target.name]: e.target.value }));\n\n      const { name, value, id } = e.target;\n      switch (name) {\n        case 'name':\n          error.FirstName =\n            value.length == 0\n              ? 'Name is required!'\n              : !validNameRegex.test(value)\n              ? 'Name must be in characters!'\n              : '';\n          break;\n\n        case 'title':\n          error.Title = value.length == 0 ? 'Title is Required' : '';\n          break;\n\n        default:\n          break;\n      }\n    };\n    const HandleAddressChange = (e) => {\n      e.persist();\n      const { id, value, name } = e.target;\n      console.log(id + value + name);\n      let newState = this.state;\n      newState.address[id][name] = value;\n      this.setState(newState);\n      console.log(this.state);\n      switch (e.target.name) {\n        case 'type':\n          errors.Type[id] = value === 'default' ? 'Type is required!' : '';\n          break;\n\n        case 'Country':\n          errors.Country = value === 'default' ? 'Country is required!' : '';\n          break;\n\n        case 'street':\n          errors.Street[id] =\n            value.length == 0\n              ? 'Street is Required'\n              : value.length < 2\n              ? 'Street is Required'\n              : '';\n          break;\n        case 'city':\n          errors.City[id] =\n            value.length == 0\n              ? ''\n              : !validNameRegex.test(value)\n              ? 'City Name must be in characters!'\n              : value.length < 2\n              ? 'City is Required'\n              : '';\n          break;\n        case 'state':\n          errors.state[id] =\n            value.length == 0\n              ? ''\n              : !validNameRegex.test(value)\n              ? 'State Name must be in characters!'\n              : value.length < 2\n              ? 'State is Required'\n              : '';\n          break;\n        case 'zipCode':\n          errors.ZipCode[id] =\n            value.length == 0\n              ? ''\n              : value.length > 4 && value.length < 10\n              ? ''\n              : 'Zipcode is not valid!';\n          break;\n      }\n    };\n    const handleMultipleChange = (e) => {\n      e.persist();\n      let list = this.state;\n      const { name, id, value, tagName } = e.target;\n      if(name === \"employees\"){\n        list[name][id] = value\n      }else{\n        if (tagName === 'SELECT') {\n          name === 'emailAddress'\n            ? (list[name][id][`emailType`] = value)\n            : (list[name][id][`${name}Type`] = value);\n        } else {\n          list[name][id][name] = value;\n        }\n        console.log(list)\n        this.setState(list);\n          if (tagName !== 'SELECT') {\n            switch (name) {\n              case 'emailAddress':\n                errors.Email[id] = validEmailRegex.test(value)\n                  ? ''\n                  : 'Email is not valid!';\n                break;\n              case 'phone':\n                errors.phone[id] =\n                  value.length < 10 || value.length > 13\n                    ? 'phone number must be between 10 and 13 digits'\n                    : '';\n                break;\n    \n              default:\n                break;\n            }\n        }\n      }\n        \n    };\n\n    const handleImageChange = (e) => {\n      //this.setState(st=>({...st,[e.target.name]:e.target.value}))\n    };\n    const addFeild = (type) => {\n      let list = this.state;\n      if (type === 'email') {\n        list.emailAddress.push({ emailType: 'work', emailAddress: '' });\n        this.setState(list);\n      } else if (type === 'address') {\n        list.address.push({});\n        this.setState(list);\n      } else if (type === 'phone') {\n        list.phone.push({ phoneType: 'work', phone: '' });\n        this.setState(list);\n      } else if (type === 'website') {\n        list.website.push({ websiteType: 'work', website: '' });\n        this.setState(list);\n      } else if (type === 'employees') {\n          list.employees.push(\"\");\n          this.setState(list);\n        }\n    };\n\n    const imageHandler = {\n      name: 'file',\n      action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n      headers: {\n        authorization: 'authorization-text',\n      },\n      onChange(info) {\n        if (info.file.status !== 'uploading') {\n          console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n          message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n          message.error(`${info.file.name} file upload failed.`);\n        }\n      },\n    };\n\n    const AddCompanyHandler = () => {\n      // api.post('/company/create', {companyData})\n      this.setState({ modal: false });\n    };\n    const handleDelete = (e) => {\n      e.persist();\n      const { name, id } = e.target;\n      let newState = this.state;\n      newState[name].splice(id, 1);\n      this.setState(newState);\n    };\n\n    return (\n      <>\n        <div className=\"form-width\">\n          <div className=\"card p-4\">\n            <Form className=\"form-details\" onSubmit={this.handleSubmit}>\n              <div className=\"form-header-container mb-4\">\n                <h3 className=\"form-header-text\">Update company</h3>\n              </div>\n              <Upload {...imageHandler} onChange={handleImageChange}>\n                <antdButton className=\"form-upload-button\">\n                  <UploadOutlined /> Upload Image\n                </antdButton>\n              </Upload>\n              <br></br>\n              <div className=\"form-header-container mb-4\">\n              <Form.Row>\n                <Col>\n                  <Form.Group controlId=\"formGroupFirstName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                      required\n                      name=\"name\"\n                      type=\"text\"\n                      defaultValue={this.state.editData.name}\n                      onChange={handleChange}\n                    />\n                  </Form.Group>\n                  <p className=\"help-block text-danger\">{error.FirstName}</p>\n                </Col>\n              </Form.Row>\n\n              <DynamicFeilds\n                record={this.state.editData.emailAddress}\n                editMode={editMode}\n                type={'text'}\n                name={'emailAddress'}\n                text={'Email'}\n                error={errors.Email}\n                inputList={this.state.emailAddress}\n                change={handleMultipleChange}\n                delete={handleDelete}\n              ></DynamicFeilds>\n              <div className=\"form-add mb-4\">\n                <span onClick={() => addFeild('email')}>Add an Email</span>\n              </div>\n              <Row>\n                {/*\n                 <Col> \n                <Form.Group controlId=\"formGroupTitle\">\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control name='title' type=\"text\" \n                  defaultValue={this.state.editData.title} onChange={handleChange}/>\n                </Form.Group>\n                <p className=\"help-block text-danger\">{error.Title}</p>\n              </Col>\n              */}\n              </Row>\n\n              <DynamicFeilds\n                record={this.state.editData.phone || []}\n                editMode={editMode}\n                type={'number'}\n                name={'phone'}\n                text={'Phone Number'}\n                error={errors.phone}\n                inputList={this.state.phone}\n                change={handleMultipleChange}\n                delete={handleDelete}\n              ></DynamicFeilds>\n              <div className=\"form-add mb-4\">\n                <span onClick={() => addFeild('phone')}>\n                  Add a Phone Number\n                </span>\n              </div>\n              <DynamicFeilds\n                type={'text'}\n                editMode={editMode}\n                record={this.state.editData.website || []}\n                name={'website'}\n                text={'Website'}\n                error={errors.Website}\n                inputList={this.state.website}\n                change={handleMultipleChange}\n                delete={handleDelete}\n              ></DynamicFeilds>\n              <div className=\"form-add mb-4\">\n                <span onClick={() => addFeild('website')}>Add a Website</span>\n              </div>\n              <p className=\"help-block text-danger\">{errors.Website}</p>\n\n              <p style={{ color: '#4e4e91' }}>\n                <b>Address</b>\n              </p>\n              {this.state.address.map((value, index) => {\n                return (\n                  <div className=\"mb-3\">\n                    <Form.Row>\n                      <Col sm>\n                        <Form.Group controlId={index}>\n                          <Form.Label>Type</Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            name=\"type\"\n                            defaultValue={\n                              this.state.editData.address[index] ? this.state.editData.address[index].type : \"\"\n                            }\n                            onChange={HandleAddressChange}\n                          >\n                            <option>Work</option>\n                            <option>Home</option>\n                          </Form.Control>\n                        </Form.Group>\n                        <p className=\"help-block text-danger\">{errors.Type}</p>\n                      </Col>\n                      <Col sm>\n                        <Form.Group controlId={index}>\n                          <Form.Label>Street</Form.Label>\n                          <Form.Control\n                            name=\"street\"\n                            type=\"text\"\n                            defaultValue={\n                              this.state.editData.address[index] ? this.state.editData.address[index].street : \"\"\n                            }\n                            onChange={HandleAddressChange}\n                          />\n                        </Form.Group>\n                        <p className=\"help-block text-danger\">\n                          {errors.Street[index]}\n                        </p>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Col sm>\n                        <Form.Group controlId={index}>\n                          <Form.Label>City</Form.Label>\n                          <Form.Control\n                            name=\"city\"\n                            type=\"text\"\n                            defaultValue={\n                              this.state.editData.address[index] ? this.state.editData.address[index].city : \"\"\n                            }\n                            onChange={HandleAddressChange}\n                          />\n                        </Form.Group>\n                        <p className=\"help-block text-danger\">\n                          {errors.City[index]}\n                        </p>\n                      </Col>\n                      <Col sm>\n                        <Form.Group controlId={index}>\n                          <Form.Label>State</Form.Label>\n                          <Form.Control\n                            name=\"state\"\n                            type=\"text\"\n                            defaultValue={\n                              this.state.editData.address[index] ? this.state.editData.address[index].state : \"\"\n                            }\n                            onChange={HandleAddressChange}\n                          />\n                        </Form.Group>\n                        <p className=\"help-block text-danger\">\n                          {errors.state[index]}\n                        </p>\n                      </Col>\n                    </Form.Row>\n                    <Form.Row>\n                      <Col sm>\n                        <Form.Group controlId={index}>\n                          <Form.Label>ZipCode</Form.Label>\n                          <Form.Control\n                            name=\"zipCode\"\n                            type=\"text\"\n                            defaultValue={\n                              this.state.editData.address[index] ? this.state.editData.address[index].zipCode : \"\"\n                            }\n                            onChange={HandleAddressChange}\n                          />\n                        </Form.Group>\n                        <p className=\"help-block text-danger\">\n                          {errors.ZipCode[index]}\n                        </p>\n                      </Col>\n                      <Col sm>\n                        <Form.Group controlId={index}>\n                          <Form.Label>Country</Form.Label>\n                          <select\n                            name=\"country\"\n                            defaultValue={\n                              this.state.editData.address[index] ? this.state.editData.address[index].country : \"\"\n                            }\n                            id={index}\n                            onChange={HandleAddressChange}\n                            style={{ 'border-radius': '5px' }}\n                          >\n                            <option value=\"default\">Country</option>\n                            <option value=\"Afganistan\">Afghanistan</option>\n                            <option value=\"Albania\">Albania</option>\n                            <option value=\"Algeria\">Algeria</option>\n                            <option value=\"American Samoa\">\n                              American Samoa\n                            </option>\n                            <option value=\"Andorra\">Andorra</option>\n                            <option value=\"Angola\">Angola</option>\n                            <option value=\"Anguilla\">Anguilla</option>\n                            <option value=\"Antigua & Barbuda\">\n                              Antigua & Barbuda\n                            </option>\n                            <option value=\"Argentina\">Argentina</option>\n                            <option value=\"Armenia\">Armenia</option>\n                            <option value=\"Aruba\">Aruba</option>\n                            <option value=\"Australia\">Australia</option>\n                            <option value=\"Austria\">Austria</option>\n                            <option value=\"Azerbaijan\">Azerbaijan</option>\n                            <option value=\"Bahamas\">Bahamas</option>\n                            <option value=\"Bahrain\">Bahrain</option>\n                            <option value=\"Bangladesh\">Bangladesh</option>\n                            <option value=\"Barbados\">Barbados</option>\n                            <option value=\"Belarus\">Belarus</option>\n                            <option value=\"Belgium\">Belgium</option>\n                            <option value=\"Belize\">Belize</option>\n                            <option value=\"Benin\">Benin</option>\n                            <option value=\"Bermuda\">Bermuda</option>\n                            <option value=\"Bhutan\">Bhutan</option>\n                            <option value=\"Bolivia\">Bolivia</option>\n                            <option value=\"Bonaire\">Bonaire</option>\n                            <option value=\"Bosnia & Herzegovina\">\n                              Bosnia & Herzegovina\n                            </option>\n                            <option value=\"Botswana\">Botswana</option>\n                            <option value=\"Brazil\">Brazil</option>\n                            <option value=\"British Indian Ocean Ter\">\n                              British Indian Ocean Ter\n                            </option>\n                            <option value=\"Brunei\">Brunei</option>\n                            <option value=\"Bulgaria\">Bulgaria</option>\n                            <option value=\"Burkina Faso\">Burkina Faso</option>\n                            <option value=\"Burundi\">Burundi</option>\n                            <option value=\"Cambodia\">Cambodia</option>\n                            <option value=\"Cameroon\">Cameroon</option>\n                            <option value=\"Canada\">Canada</option>\n                            <option value=\"Canary Islands\">\n                              Canary Islands\n                            </option>\n                            <option value=\"Cape Verde\">Cape Verde</option>\n                            <option value=\"Cayman Islands\">\n                              Cayman Islands\n                            </option>\n                            <option value=\"Central African Republic\">\n                              Central African Republic\n                            </option>\n                            <option value=\"Chad\">Chad</option>\n                            <option value=\"Channel Islands\">\n                              Channel Islands\n                            </option>\n                            <option value=\"Chile\">Chile</option>\n                            <option value=\"China\">China</option>\n                            <option value=\"Christmas Island\">\n                              Christmas Island\n                            </option>\n                            <option value=\"Cocos Island\">Cocos Island</option>\n                            <option value=\"Colombia\">Colombia</option>\n                            <option value=\"Comoros\">Comoros</option>\n                            <option value=\"Congo\">Congo</option>\n                            <option value=\"Cook Islands\">Cook Islands</option>\n                            <option value=\"Costa Rica\">Costa Rica</option>\n                            <option value=\"Cote DIvoire\">Cote DIvoire</option>\n                            <option value=\"Croatia\">Croatia</option>\n                            <option value=\"Cuba\">Cuba</option>\n                            <option value=\"Curaco\">Curacao</option>\n                            <option value=\"Cyprus\">Cyprus</option>\n                            <option value=\"Czech Republic\">\n                              Czech Republic\n                            </option>\n                            <option value=\"Denmark\">Denmark</option>\n                            <option value=\"Djibouti\">Djibouti</option>\n                            <option value=\"Dominica\">Dominica</option>\n                            <option value=\"Dominican Republic\">\n                              Dominican Republic\n                            </option>\n                            <option value=\"East Timor\">East Timor</option>\n                            <option value=\"Ecuador\">Ecuador</option>\n                            <option value=\"Egypt\">Egypt</option>\n                            <option value=\"El Salvador\">El Salvador</option>\n                            <option value=\"Equatorial Guinea\">\n                              Equatorial Guinea\n                            </option>\n                            <option value=\"Eritrea\">Eritrea</option>\n                            <option value=\"Estonia\">Estonia</option>\n                            <option value=\"Ethiopia\">Ethiopia</option>\n                            <option value=\"Falkland Islands\">\n                              Falkland Islands\n                            </option>\n                            <option value=\"Faroe Islands\">Faroe Islands</option>\n                            <option value=\"Fiji\">Fiji</option>\n                            <option value=\"Finland\">Finland</option>\n                            <option value=\"France\">France</option>\n                            <option value=\"French Guiana\">French Guiana</option>\n                            <option value=\"French Polynesia\">\n                              French Polynesia\n                            </option>\n                            <option value=\"French Southern Ter\">\n                              French Southern Ter\n                            </option>\n                            <option value=\"Gabon\">Gabon</option>\n                            <option value=\"Gambia\">Gambia</option>\n                            <option value=\"Georgia\">Georgia</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"Ghana\">Ghana</option>\n                            <option value=\"Gibraltar\">Gibraltar</option>\n                            <option value=\"Great Britain\">Great Britain</option>\n                            <option value=\"Greece\">Greece</option>\n                            <option value=\"Greenland\">Greenland</option>\n                            <option value=\"Grenada\">Grenada</option>\n                            <option value=\"Guadeloupe\">Guadeloupe</option>\n                            <option value=\"Guam\">Guam</option>\n                            <option value=\"Guatemala\">Guatemala</option>\n                            <option value=\"Guinea\">Guinea</option>\n                            <option value=\"Guyana\">Guyana</option>\n                            <option value=\"Haiti\">Haiti</option>\n                            <option value=\"Hawaii\">Hawaii</option>\n                            <option value=\"Honduras\">Honduras</option>\n                            <option value=\"Hong Kong\">Hong Kong</option>\n                            <option value=\"Hungary\">Hungary</option>\n                            <option value=\"Iceland\">Iceland</option>\n                            <option value=\"Indonesia\">Indonesia</option>\n                            <option value=\"India\">India</option>\n                            <option value=\"Iran\">Iran</option>\n                            <option value=\"Iraq\">Iraq</option>\n                            <option value=\"Ireland\">Ireland</option>\n                            <option value=\"Isle of Man\">Isle of Man</option>\n                            <option value=\"Israel\">Israel</option>\n                            <option value=\"Italy\">Italy</option>\n                            <option value=\"Jamaica\">Jamaica</option>\n                            <option value=\"Japan\">Japan</option>\n                            <option value=\"Jordan\">Jordan</option>\n                            <option value=\"Kazakhstan\">Kazakhstan</option>\n                            <option value=\"Kenya\">Kenya</option>\n                            <option value=\"Kiribati\">Kiribati</option>\n                            <option value=\"Korea North\">Korea North</option>\n                            <option value=\"Korea Sout\">Korea South</option>\n                            <option value=\"Kuwait\">Kuwait</option>\n                            <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                            <option value=\"Laos\">Laos</option>\n                            <option value=\"Latvia\">Latvia</option>\n                            <option value=\"Lebanon\">Lebanon</option>\n                            <option value=\"Lesotho\">Lesotho</option>\n                            <option value=\"Liberia\">Liberia</option>\n                            <option value=\"Libya\">Libya</option>\n                            <option value=\"Liechtenstein\">Liechtenstein</option>\n                            <option value=\"Lithuania\">Lithuania</option>\n                            <option value=\"Luxembourg\">Luxembourg</option>\n                            <option value=\"Macau\">Macau</option>\n                            <option value=\"Macedonia\">Macedonia</option>\n                            <option value=\"Madagascar\">Madagascar</option>\n                            <option value=\"Malaysia\">Malaysia</option>\n                            <option value=\"Malawi\">Malawi</option>\n                            <option value=\"Maldives\">Maldives</option>\n                            <option value=\"Mali\">Mali</option>\n                            <option value=\"Malta\">Malta</option>\n                            <option value=\"Marshall Islands\">\n                              Marshall Islands\n                            </option>\n                            <option value=\"Martinique\">Martinique</option>\n                            <option value=\"Mauritania\">Mauritania</option>\n                            <option value=\"Mauritius\">Mauritius</option>\n                            <option value=\"Mayotte\">Mayotte</option>\n                            <option value=\"Mexico\">Mexico</option>\n                            <option value=\"Midway Islands\">\n                              Midway Islands\n                            </option>\n                            <option value=\"Moldova\">Moldova</option>\n                            <option value=\"Monaco\">Monaco</option>\n                            <option value=\"Mongolia\">Mongolia</option>\n                            <option value=\"Montserrat\">Montserrat</option>\n                            <option value=\"Morocco\">Morocco</option>\n                            <option value=\"Mozambique\">Mozambique</option>\n                            <option value=\"Myanmar\">Myanmar</option>\n                            <option value=\"Nambia\">Nambia</option>\n                            <option value=\"Nauru\">Nauru</option>\n                            <option value=\"Nepal\">Nepal</option>\n                            <option value=\"Netherland Antilles\">\n                              Netherland Antilles\n                            </option>\n                            <option value=\"Netherlands\">\n                              Netherlands (Holland, Europe)\n                            </option>\n                            <option value=\"Nevis\">Nevis</option>\n                            <option value=\"New Caledonia\">New Caledonia</option>\n                            <option value=\"New Zealand\">New Zealand</option>\n                            <option value=\"Nicaragua\">Nicaragua</option>\n                            <option value=\"Niger\">Niger</option>\n                            <option value=\"Nigeria\">Nigeria</option>\n                            <option value=\"Niue\">Niue</option>\n                            <option value=\"Norfolk Island\">\n                              Norfolk Island\n                            </option>\n                            <option value=\"Norway\">Norway</option>\n                            <option value=\"Oman\">Oman</option>\n                            <option value=\"Pakistan\">Pakistan</option>\n                            <option value=\"Palau Island\">Palau Island</option>\n                            <option value=\"Palestine\">Palestine</option>\n                            <option value=\"Panama\">Panama</option>\n                            <option value=\"Papua New Guinea\">\n                              Papua New Guinea\n                            </option>\n                            <option value=\"Paraguay\">Paraguay</option>\n                            <option value=\"Peru\">Peru</option>\n                            <option value=\"Phillipines\">Philippines</option>\n                            <option value=\"Pitcairn Island\">\n                              Pitcairn Island\n                            </option>\n                            <option value=\"Poland\">Poland</option>\n                            <option value=\"Portugal\">Portugal</option>\n                            <option value=\"Puerto Rico\">Puerto Rico</option>\n                            <option value=\"Qatar\">Qatar</option>\n                            <option value=\"Republic of Montenegro\">\n                              Republic of Montenegro\n                            </option>\n                            <option value=\"Republic of Serbia\">\n                              Republic of Serbia\n                            </option>\n                            <option value=\"Reunion\">Reunion</option>\n                            <option value=\"Romania\">Romania</option>\n                            <option value=\"Russia\">Russia</option>\n                            <option value=\"Rwanda\">Rwanda</option>\n                            <option value=\"St Barthelemy\">St Barthelemy</option>\n                            <option value=\"St Eustatius\">St Eustatius</option>\n                            <option value=\"St Helena\">St Helena</option>\n                            <option value=\"St Kitts-Nevis\">\n                              St Kitts-Nevis\n                            </option>\n                            <option value=\"St Lucia\">St Lucia</option>\n                            <option value=\"St Maarten\">St Maarten</option>\n                            <option value=\"St Pierre & Miquelon\">\n                              St Pierre & Miquelon\n                            </option>\n                            <option value=\"St Vincent & Grenadines\">\n                              St Vincent & Grenadines\n                            </option>\n                            <option value=\"Saipan\">Saipan</option>\n                            <option value=\"Samoa\">Samoa</option>\n                            <option value=\"Samoa American\">\n                              Samoa American\n                            </option>\n                            <option value=\"San Marino\">San Marino</option>\n                            <option value=\"Sao Tome & Principe\">\n                              Sao Tome & Principe\n                            </option>\n                            <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                            <option value=\"Senegal\">Senegal</option>\n                            <option value=\"Seychelles\">Seychelles</option>\n                            <option value=\"Sierra Leone\">Sierra Leone</option>\n                            <option value=\"Singapore\">Singapore</option>\n                            <option value=\"Slovakia\">Slovakia</option>\n                            <option value=\"Slovenia\">Slovenia</option>\n                            <option value=\"Solomon Islands\">\n                              Solomon Islands\n                            </option>\n                            <option value=\"Somalia\">Somalia</option>\n                            <option value=\"South Africa\">South Africa</option>\n                            <option value=\"Spain\">Spain</option>\n                            <option value=\"Sri Lanka\">Sri Lanka</option>\n                            <option value=\"Sudan\">Sudan</option>\n                            <option value=\"Suriname\">Suriname</option>\n                            <option value=\"Swaziland\">Swaziland</option>\n                            <option value=\"Sweden\">Sweden</option>\n                            <option value=\"Switzerland\">Switzerland</option>\n                            <option value=\"Syria\">Syria</option>\n                            <option value=\"Tahiti\">Tahiti</option>\n                            <option value=\"Taiwan\">Taiwan</option>\n                            <option value=\"Tajikistan\">Tajikistan</option>\n                            <option value=\"Tanzania\">Tanzania</option>\n                            <option value=\"Thailand\">Thailand</option>\n                            <option value=\"Togo\">Togo</option>\n                            <option value=\"Tokelau\">Tokelau</option>\n                            <option value=\"Tonga\">Tonga</option>\n                            <option value=\"Trinidad & Tobago\">\n                              Trinidad & Tobago\n                            </option>\n                            <option value=\"Tunisia\">Tunisia</option>\n                            <option value=\"Turkey\">Turkey</option>\n                            <option value=\"Turkmenistan\">Turkmenistan</option>\n                            <option value=\"Turks & Caicos Is\">\n                              Turks & Caicos Is\n                            </option>\n                            <option value=\"Tuvalu\">Tuvalu</option>\n                            <option value=\"Uganda\">Uganda</option>\n                            <option value=\"United Kingdom\">\n                              United Kingdom\n                            </option>\n                            <option value=\"Ukraine\">Ukraine</option>\n                            <option value=\"United Arab Erimates\">\n                              United Arab Emirates\n                            </option>\n                            <option value=\"United States of America\">\n                              United States of America\n                            </option>\n                            <option value=\"Uraguay\">Uruguay</option>\n                            <option value=\"Uzbekistan\">Uzbekistan</option>\n                            <option value=\"Vanuatu\">Vanuatu</option>\n                            <option value=\"Vatican City State\">\n                              Vatican City State\n                            </option>\n                            <option value=\"Venezuela\">Venezuela</option>\n                            <option value=\"Vietnam\">Vietnam</option>\n                            <option value=\"Virgin Islands (Brit)\">\n                              Virgin Islands (Brit)\n                            </option>\n                            <option value=\"Virgin Islands (USA)\">\n                              Virgin Islands (USA)\n                            </option>\n                            <option value=\"Wake Island\">Wake Island</option>\n                            <option value=\"Wallis & Futana Is\">\n                              Wallis & Futana Is\n                            </option>\n                            <option value=\"Yemen\">Yemen</option>\n                            <option value=\"Zaire\">Zaire</option>\n                            <option value=\"Zambia\">Zambia</option>\n                            <option value=\"Zimbabwe\">Zimbabwe</option>\n                          </select>\n                        </Form.Group>\n                        <p className=\"help-block text-danger\">\n                          {error.Country}\n                        </p>\n                      </Col>\n                    </Form.Row>\n                    <Button id={index} name=\"address\" onClick={handleDelete}>\n                      -\n                    </Button>\n                  </div>\n                );\n              })}\n\n              <div className=\"form-add mb-4\">\n                <span onClick={() => addFeild('address')}>Add an Address</span>\n              </div>\n              </div>\n              <div className=\"form-header-container mb-4\">\n                <h4>Employees</h4>\n                <br></br>\n                {\n                  this.state.employees.map((val, index)=>{\n                    console.log(this.state.editData)\n                    return <div >\n          \n                      <Row>\n                      <Col md=\"6\">\n                        <Form.Group controlId={index}>\n                          <Form.Control\n                            as=\"select\"\n                            name=\"Payment profile\"\n                            name=\"employees\"\n                            defaultValue={this.state.editData.employees ? this.state.editData.employees[index] : \"\"}\n                            onClick = {handleMultipleChange}\n                           // defaultValue={this.state.editData[idx]}\n                            //onChange={this.props.change}\n                          >\n                            <option>Select a contact</option>\n                            {this.state.optionsss}\n                          </Form.Control>\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Button id={index} name=\"employees\" onClick={handleDelete}>-</Button>\n                      </Col>\n                    </Row>\n                    </div>\n  \n                  })\n                }\n                <br></br>\n                 <div className=\"form-add mb-4\">\n                    <span onClick={()=>addFeild(\"employees\")}>Add employees</span>\n                    </div>\n                    \n              <br></br>\n              </div>\n  \n              \n              <h4>Billing preferences</h4>\n              <Row>\n                <Col md=\"6\">\n                  <Form.Group>\n                    <Form.Label>Payment profile</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"Payment profile\"\n                      //defaultValue={this.props.record[idx]}\n                      onChange={handleChange}\n                    >\n                      <option>default</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              <p>Hourly billing</p>\n              <Row>\n                <Col md=\"3\">\n                  <Form.Group>\n                    <Form.Label>Firm user</Form.Label>\n                    <Form.Control\n                      name = \"billingPaymentProfile\"\n                      as=\"select\"\n                      //defaultValue={this.props.record[idx]}\n                      onChange={handleChange}\n                    >\n                      <option>{this.state.user}</option>\n\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col md=\"3\">\n                  <Form.Group>\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control \n                      name=\"billingCustomRate\" \n                      type=\"number\" \n                      onChange={handleChange}\n                      placeholder=\"$0.0\" />\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <Form.Group>\n                    <Form.Label>ClientID</Form.Label>\n                    <Form.Control\n                      name=\"billingClientId\"\n                      type=\"text\"\n                      placeholder=\"ClientID\"\n                      onChange={handleChange}\n                    />\n                  </Form.Group>\n                </Col>\n              </Row>\n\n\n              <Button type=\"submit\" className=\"btn btn-success\">\n                {editMode ? 'Update' : 'Create'}\n              </Button>\n              <Button\n                onClick={() => this.props.history.push('/manage/contacts')}\n              >\n                Cancel\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  userId: state.user.token.user._id,\n});\nexport default connect(mapStateToProps)(editCompany);\n"],"sourceRoot":""}